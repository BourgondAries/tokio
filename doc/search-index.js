var N=null,E="",T="t",U="u",searchIndex={};
var R=["Gets an unsigned 32 bit integer from `self` in the…","usize","Gets an IEEE754 single-precision (4 bytes) floating point…","Gets an IEEE754 double-precision (8 bytes) floating point…","reader","Transfer bytes into `self` from `src` and advance the…","Writes an IEEE754 single-precision (4 bytes) floating…","Writes an IEEE754 double-precision (8 bytes) floating…","by_ref","writer","get_pin_mut","into_inner","with_capacity","get_ref","get_mut","Returns a reference to the internally buffered data.","Split a single value implementing `AsyncRead + AsyncWrite`…","tokio_io","Read bytes asynchronously.","context","result","Creates a future which will read all the bytes associated…","An extension trait which adds utility methods to…","Read all bytes until EOF in this source, placing them into…","shutdown","try_from","try_into","borrow_mut","type_id","borrow","typeid","tokio_io::split","poll_fill_buf","consume","poll_read","prepare_uninitialized_buffer","poll_read_buf","poll_write","poll_flush","poll_shutdown","poll_write_buf","bufwriter","bufreader","formatter","Prepares an uninitialized buffer to be safe to pass to…","Pull some bytes from this source into the specified…","Write a `Buf` into this value, returning how many bytes…","read_until","readuntil","read_line","readline","Returns a stream of the contents of this reader split on…","Returns a stream over the lines of this reader. This…","Creates an adaptor which will chain this stream with…","Copy all data from `self` into the provided `AsyncWrite`.","Read data into the provided buffer.","read_exact","Read exactly the amount of data needed to fill the…","readexact","read_to_end","readtoend","read_to_string","readtostring","Creates an AsyncRead adapter which will read at most…","Write a buffer into this writter, returning how many bytes…","write_all","Attempt to write an entire buffer into this writter.","writeall","Flush the contents of this writer.","Shutdown this writer.","BufReader","BufStream","BufWriter","ReadHalf","AsyncBufRead","AsyncRead","AsyncWrite","AsyncBufReadExt","AsyncReadExt","AsyncWriteExt","WriteHalf","Provides a `Stream` and `Sink` interface for reading and…","framedparts","Returns a reference to the underlying I/O stream wrapped…","Returns a mutable reference to the underlying I/O stream…","Returns a reference to the underlying decoder.","Returns a mutable reference to the underlying decoder.","Creates a new length delimited codec builder with default…","builder","max_frame_length","framedread","lengthdelimitedcodec","framedwrite","tokio_codec","bytesmut","asyncread","asyncwrite","framed","option","try_poll_next","clone_into","to_owned","tokio_codec::length_delimited","to_string","linescodecerror","decode_eof","bytescodec","linescodec","partial_cmp","ordering","poll_next","poll_ready","start_send","poll_close","A default method available to be called when there are no…","FramedParts","LinesCodecError","BytesCodec","FramedRead","FramedWrite","LengthDelimitedCodec","LinesCodec","LengthDelimitedCodecError","tlsconnector","tlsacceptor","TlsStream","TlsConnector","TlsAcceptor","trysenderror","Receive the next value for this receiver.","Closes the receiving half of a channel, without dropping it.","unboundedtrysenderror","tokio_sync","RecvError","tokio_sync::oneshot","tryrecverror","semaphore","tryacquireerror","is_closed","Receiver","SendError","tokio_sync::watch","senderror","tokio_sync::mpsc","tokio_sync::mpsc::error","tokio_sync::oneshot::error","tokio_sync::semaphore","tokio_sync::watch::error","default","Get the inner value.","BarrierWaitResult","UnboundedReceiver","UnboundedSender","Semaphore","TryAcquireError","AtomicWaker","MutexGuard","TrySendError","UnboundedSendError","UnboundedTrySendError","UnboundedRecvError","TryRecvError","AcquireError","entererror","tokio_executor","Run the executor to completion, blocking the thread until…","runtimeouterror","duration","turnerror","Spawn the future on the executor.","block_on","Synchronously waits for the provided `future` to complete.","runerror","run_timeout","Perform a single iteration of the event loop.","Returns a reference to the underlying `Park` instance.","get_park_mut","Returns a mutable reference to the underlying `Park`…","spawnerror","blocking","ParkError","Error returned by [`ParkThread`]","tokio_executor::threadpool","threadpool","Provides a best effort hint to whether or not `spawn` will…","tokio_executor::park","tokio_executor::blocking","tokio_executor::current_thread","tokio_executor::threadpool::park","remotehandle","park_timeout","defaultexecutor","taskexecutor","workerid","SpawnError","DefaultExecutor","ParkThread","CurrentThread","TaskExecutor","RunTimeoutError","BlockError","DefaultPark","ThreadPool","TypedExecutor","RemoteHandle","EnterError","UnparkThread","TurnError","BlockingError","DefaultUnpark","try_poll","Queries the file system metadata for a path.","set_permissions","permissions","openoptions","metadata","OpenOptions","with_default","tokio_timer","A queue of delayed elements.","DelayQueue","delayqueue","instant","Sets the delay of the item associated with `key` to expire…","Slow down a stream by enforcing a delay between items.","Allows a `Future` or `Stream` to execute for a limited…","set_default","Sets handle to default timer, returning guard that unsets…","defaultguard","get_park","new_with_now","Create a new `Timer` instance that uses `park` to block…","is_shutdown","at_capacity","is_at_capacity","Returns `true` if the error was caused by the timer being…","tokio_timer::delay_queue","tokio_timer::timeout","tokio_timer::clock","tokio_timer::throttle","tokio_timer::timer","Event loop that drives Tokio I/O resources.","tokio_net","poll_read_ready","poll_write_ready","command","tcplistener","socketaddr","tokio_net::tcp","tosocketaddrs","from_std","tcpstream","local_addr","Gets the value of the `IP_TTL` option for this socket.","Sets the value for the `IP_TTL` option on this socket.","A unified `Stream` and `Sink` interface to an underlying…","udpsocket","Returns a future that sends data on the socket to the…","reuniteerror","recv_from","Returns a future that receives a single datagram on the…","Returns a future that receives a single datagram message…","Attempts to put the two \"halves\" of a `UdpSocket` back…","unixdatagram","Receives data from the socket.","Returns the local address that this socket is bound to.","peer_addr","unixlistener","take_error","Returns the value of the `SO_ERROR` option.","incoming","Consumes this listener, returning a stream of the sockets…","tokio_net::uds","unixstream","Creates an unnamed pair of connected sockets.","Shuts down the read, write, or both halves of this…","tokio_net::driver","tokio_net::util","tokio_net::process","tokio_net::signal","tokio_net::signal::unix","tokio_net::tcp::split","tokio_net::udp","tokio_net::udp::split","tokio_net::uds::split","signalkind","Consumes stream, returning the tokio I/O object.","as_raw_fd","Registration","PollEvented","SignalKind","TcpListener","TcpStream","UdpFramed","UdpSocket","ReuniteError","UdpSocketRecvHalf","UdpSocketSendHalf","UnixDatagram","UnixListener","UnixStream","DefaultGuard","ChildStdin","ChildStdout","ChildStderr","Incoming","broadcast","tokio::codec","A codec for frames delimited by a frame head specifying…","An error when the number of bytes read is more than max…","tokio::fs","An error returned when an operation could not be completed…","tokio::net::tcp","An I/O object representing a TCP socket listening for…","An I/O object representing a TCP stream connected to a…","tokio::net","tokio::net::udp","An I/O object representing a UDP socket.","tokio::net::unix","An I/O object representing a Unix datagram socket.","A Unix socket which can accept connections from other Unix…","A structure representing a connected Unix socket.","A future represents an asynchronous computation.","The type of value produced on completion.","Attempt to resolve the future to a final value,…","Attempt to return the contents of the internal buffer,…","Tells this buffer that `amt` bytes have been consumed from…","Attempt to read from the `AsyncRead` into `buf`.","Writes bytes asynchronously.","Attempt to write bytes from `buf` into the object.","Attempt to flush the object, ensuring that any buffered…","Initiates or attempts to shut down this writer, returning…","A stream of values produced asynchronously.","Values yielded by the stream.","Attempt to pull out the next value of this stream,…","size_hint","Returns the bounds on the remaining length of the stream.","tokio::sync::mpsc","tokio::sync","tokio::sync::oneshot","tokio::sync::watch","tokio::timer","Spawns a future on the default executor.","tokio::runtime","Returns a new runtime builder initialized with default…","Set the `Clock` instance that will be used by the runtime.","Create the configured `Runtime`.","runtime","Spawn a future onto the Tokio runtime.","tokio::codec::length_delimited","tokio::io","tokio::net::tcp::split","tokio::net::udp::split","tokio::net::unix::split","tokio::process","tokio::sync::mpsc::error","tokio::sync::oneshot::error","tokio::sync::watch::error","tokio::timer::delay_queue","tokio::timer::timeout","tokio::executor","tokio::runtime::current_thread","errorkind","timeout","receiver","unboundedsender","unboundedreceiver","childstdout","childstderr","readhalf","udpframed","childstdin","writehalf","interval","FutureExt","ErrorKind","StreamExt","Builder","Utilities for encoding and decoding frames.","A simple `Codec` implementation that just ships bytes…","`FramedParts` contains an export of the data of a Framed…","The inner transport used to read bytes to and write bytes to","The codec","The buffer with read but unprocessed data.","write_buf","A buffer with unprocessed data which are not written yet.","A `Stream` of messages decoded from an `AsyncRead`.","A `Sink` of frames encoded to an `AsyncWrite`.","A simple `Codec` implementation that splits up data into…","An error occured while encoding or decoding a line.","MaxLineLengthExceeded","The maximum line length was exceeded.","An IO error occured.","Creates a new `BytesCodec` for shipping around raw bytes.","from_parts","Returns a reference to the underlying codec wrapped by…","codec_mut","Returns a mutable reference to the underlying codec…","Consumes the `Frame`, returning its underlying I/O stream.","into_parts","Consumes the `Frame`, returning its underlying I/O stream,…","Create a new, default, `FramedParts`","Creates a new `FramedRead` with the given `decoder`.","Consumes the `FramedRead`, returning its underlying I/O…","decoder_mut","Creates a new `FramedWrite` with the given `encoder`.","Consumes the `FramedWrite`, returning its underlying I/O…","encoder_mut","length_delimited","Frame a stream of bytes based on a length prefix","Configure length delimited `LengthDelimitedCodec`s.","Creates a new `LengthDelimitedCodec` with the default…","Returns the current max frame setting","set_max_frame_length","Updates the max frame setting.","big_endian","Read the length field as a big endian integer","little_endian","Read the length field as a little endian integer","native_endian","Read the length field as a native endian integer","Sets the max frame length","length_field_length","Sets the number of bytes used to represent the length field","length_field_offset","Sets the number of bytes in the header before the length…","length_adjustment","Delta between the payload length specified in the header…","Sets the number of bytes to skip before reading the payload","new_codec","Create a configured length delimited `LengthDelimitedCodec`","Create a configured length delimited `FramedRead`","new_write","Create a configured length delimited `FramedWrite`","new_framed","Create a configured length delimited `Framed`","Returns a `LinesCodec` for splitting up data into lines.","new_with_max_length","Returns a `LinesCodec` with a maximum line length limit.","max_length","Returns the maximum line length when decoding.","Decoding of frames via buffers.","The type of decoded frames.","The type of unrecoverable frame decoding errors.","Attempts to decode a frame from the provided buffer of…","Trait of helper objects to write out messages as bytes,…","The type of items consumed by the `Encoder`","The type of encoding errors.","Encodes a frame into the buffer provided.","Errors returned by `Executor::spawn`.","Executes futures on the default executor for the current…","Return a new `SpawnError` reflecting a shutdown executor…","Return a new `SpawnError` reflecting an executor at…","Returns `true` if the error reflects a shutdown executor…","Returns `true` if the error reflects an executor at…","Returns a handle to the default executor for the current…","current_thread","Executes futures on the current thread.","RunError","Error returned by the `run` function.","Handle to spawn a future on the corresponding…","Executes a future on the current thread.","Returns an executor that executes futures on the current…","spawn_local","Spawn a future onto the current `CurrentThread` instance.","keep_alive","panic_handler","name_prefix","stack_size","Set the stack size (in bytes) for worker threads.","after_start","Execute function `f` after each thread is started but…","before_stop","Execute function `f` before each thread stops.","shutdown_on_idle","shutdown_now","Executor","A value that executes futures.","Spawns a future object to run on this executor.","A value that spawns futures of a specific type.","Spawns a future to run on this executor.","spawn_with_handle","Spawns a future object to run on this executor, returning…","A reference to an open file on the filesystem.","Options and flags which can be used to configure how a…","A handle to the standard error stream of a process.","A handle to the standard input stream of a process.","A handle to the standard output stream of a process.","create_dir","Creates a new, empty directory at the provided path","create_dir_all","Recursively create a directory and all of its parent…","hard_link","Creates a new hard link on the filesystem.","Creates a future which will open a file for reading and…","Returns a stream over the entries within a directory.","read_link","Reads a symbolic link, returning the file that the link…","remove_dir","Removes an existing, empty directory.","remove_dir_all","Removes a directory at this path, after removing all its…","remove_file","Removes a file from the filesystem.","Rename a file or directory to a new name, replacing the…","Changes the permissions found on a file or a directory.","Constructs a new handle to the standard error of the…","Constructs a new handle to the standard input of the…","Constructs a new handle to the standard output of the…","symlink_metadata","Creates a future that will open a file for writing and…","Attempts to open a file in read-only mode.","Opens a file in write-only mode.","Convert a [`std::fs::File`][std] to a…","Seek to an offset, in bytes, in a stream.","Attempts to sync all OS-internal metadata to disk.","sync_data","This function is similar to `sync_all`, except that it may…","Truncates or extends the underlying file, updating the…","Queries metadata about the underlying file.","try_clone","Create a new `File` instance that shares the same…","Changes the permissions on the underlying file.","Creates a blank new set of options ready for configuration.","See the underlying [`read`] call for details.","See the underlying [`write`] call for details.","See the underlying [`append`] call for details.","See the underlying [`truncate`] call for details.","See the underlying [`create`] call for details.","create_new","See the underlying [`create_new`] call for details.","Opens a file at `path` with the options specified by `self`.","OS-specific functionality.","Unix-specific extensions to primitives in the `tokio_fs`…","Creates a new symbolic link on the filesystem.","The `BufReader` struct adds buffering to any reader.","Wraps a writer and buffers its output.","This struct is generally created by calling [`empty`].…","An async reader which yields one byte over and over and…","An async writer which will move data into the void.","Creates a new empty async reader.","Creates an instance of an async reader that infinitely…","Creates an instance of an async writer which will…","Creates a new `BufReader` with a default buffer capacity.…","Creates a new `BufReader` with the specified buffer…","Gets a reference to the underlying reader.","Gets a mutable reference to the underlying reader.","Gets a pinned mutable reference to the underlying reader.","Consumes this `BufWriter`, returning the underlying reader.","Creates a new `BufWriter` with a default buffer capacity.…","Creates a new `BufWriter` with the specified buffer…","Gets a reference to the underlying writer.","Gets a mutable reference to the underlying writer.","Gets a pinned mutable reference to the underlying writer.","Consumes this `BufWriter`, returning the underlying writer.","Marks async function to be executed by selected runtime.","Marks async function to be executed by runtime, suitable…","An implementation of asynchronous process management for…","This structure mimics the API of [`std::process::Command`]…","Representation of a child process spawned onto an event…","The standard input stream for spawned children.","The standard output stream for spawned children.","The standard error stream for spawned children.","Constructs a new `Command` for launching the program at…","Adds an argument to pass to the program.","Adds multiple arguments to pass to the program.","Inserts or updates an environment variable mapping.","Adds or updates multiple environment variable mappings.","env_remove","Removes an environment variable mapping.","env_clear","Clears the entire environment map for the child process.","current_dir","Sets the working directory for the child process.","Configuration for the child process's standard input…","Configuration for the child process's standard output…","Configuration for the child process's standard error…","Sets the child process's user ID. This translates to a…","Similar to `uid`, but sets the group ID of the child…","Schedules a closure to be run just before the `exec`…","Executes the command as a child process, returning a…","Executes a command as a child process, waiting for it to…","Executes the command as a child process, waiting for it to…","Returns the OS-assigned process identifier associated with…","Forces the child to exit.","Returns a handle for writing to the child's stdin, if it…","Returns a handle for reading from the child's stdout, if…","Returns a handle for reading from the child's stderr, if…","wait_with_output","Returns a future that will resolve to an `Output`,…","Drop this `Child` without killing the underlying process.","Creates a new stream which receives \"ctrl-c\" notifications…","TCP bindings for `tokio`.","Stream returned by the `TcpListener::incoming` function…","Creates a new TcpListener which will be bound to the…","Accept a new incoming connection from this listener.","Create a new TCP listener from the standard library's TCP…","Returns the local address that this listener is bound to.","`TcpStream` split support.","Read half of a `TcpStream`.","Write half of a `TcpStream`.","Opens a TCP connection to a remote host.","Create a new `TcpStream` from a `std::net::TcpStream`.","Returns the local address that this stream is bound to.","Returns the remote address that this stream is connected…","Receives data on the socket from the remote address to…","Gets the value of the `TCP_NODELAY` option on this socket.","set_nodelay","Sets the value of the `TCP_NODELAY` option on this socket.","recv_buffer_size","Gets the value of the `SO_RCVBUF` option on this socket.","set_recv_buffer_size","Sets the value of the `SO_RCVBUF` option on this socket.","send_buffer_size","Gets the value of the `SO_SNDBUF` option on this socket.","set_send_buffer_size","Sets the value of the `SO_SNDBUF` option on this socket.","keepalive","Returns whether keepalive messages are enabled on this…","set_keepalive","Sets whether keepalive messages are enabled to be sent on…","Reads the linger duration for this socket by getting the…","set_linger","Sets the linger duration of this socket by setting the…","Split a `TcpStream` into a read half and a write half,…","UDP bindings for `tokio`.","Create a new `UdpFramed` backed by the given socket and…","Consumes the `Framed`, returning its underlying I/O stream.","This function will create a new UDP socket and attempt to…","Creates a new `UdpSocket` from the previously bound socket…","Split the `UdpSocket` into a receive half and a send half.…","connect","Connects the UDP socket setting the default destination…","Gets the value of the `SO_BROADCAST` option for this socket.","set_broadcast","Sets the value of the `SO_BROADCAST` option for this socket.","multicast_loop_v4","Gets the value of the `IP_MULTICAST_LOOP` option for this…","set_multicast_loop_v4","Sets the value of the `IP_MULTICAST_LOOP` option for this…","multicast_ttl_v4","Gets the value of the `IP_MULTICAST_TTL` option for this…","set_multicast_ttl_v4","Sets the value of the `IP_MULTICAST_TTL` option for this…","multicast_loop_v6","Gets the value of the `IPV6_MULTICAST_LOOP` option for…","set_multicast_loop_v6","Sets the value of the `IPV6_MULTICAST_LOOP` option for…","set_ttl","join_multicast_v4","Executes an operation of the `IP_ADD_MEMBERSHIP` type.","ipv4addr","join_multicast_v6","Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.","ipv6addr","leave_multicast_v4","Executes an operation of the `IP_DROP_MEMBERSHIP` type.","leave_multicast_v6","Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.","`UdpSocket` split support.","The send half after `split`.","The recv half after `split`.","Error indicating two halves were not from the same socket,…","udpsocketsendhalf","udpsocketrecvhalf","Credentials of a process","UID (user ID) of the process","GID (group ID) of the process","Creates a new `UnixDatagram` bound to the specified path.","Consumes a `UnixDatagram` in the standard library and…","Creates a new `UnixDatagram` which is not bound to any…","Connects the socket to the specified address.","Sends data on the socket to the socket's peer.","send_to","Sends data on the socket to the specified address.","Returns the address of this socket's peer.","Shut down the read, write, or both halves of this…","Creates a new `UnixListener` bound to the specified path.","Consumes a `UnixListener` in the standard library and…","Returns the local socket address of this listener.","Accepts a new incoming connection to this listener.","`UnixStream` split support.","Read half of a `UnixStream`.","Write half of a `UnixStream`.","Connects to the socket named by `path`.","Consumes a `UnixStream` in the standard library and…","Returns the socket address of the local half of this…","Returns the socket address of the remote half of this…","peer_cred","Returns effective credentials of the process which called…","Split a `UnixStream` into a read half and a write half,…","A barrier enables multiple threads to synchronize the…","An asynchronous mutual exclusion primitive useful for…","A handle to a held `Mutex`.","Creates a new barrier that can block a given number of…","Does not resolve until all tasks have rendezvoused here.","A multi-producer, single-consumer queue for sending values…","Receive values from the associated `Sender`.","Send values to the associated `Receiver`.","Receive values from the associated `UnboundedSender`.","Send values to the associated `UnboundedReceiver`.","Create a bounded mpsc channel for communicating between…","unbounded_channel","Create an unbounded mpsc channel for communicating between…","try_send","Attempts to send a message on this `Sender`, returning the…","Send a value, waiting until there is capacity.","Attempts to send a message on this `UnboundedSender`…","Channel error types","Error returned by `Receiver`.","Error returned by the `Sender`.","Error returned by `Sender::try_send`.","Error returned by `UnboundedReceiver`.","Error returned by the `UnboundedSender`.","Returned by `UnboundedSender::try_send` when the channel…","Creates a new lock in an unlocked state ready for use.","A future that resolves on acquiring the lock and returns…","A channel for sending a single message between…","Sends a value to the associated `Receiver`.","Receive a value from the associated `Sender`.","Create a new one-shot channel for sending single values…","Oneshot error types","Error returned by the `Future` implementation for…","Error returned by the `try_recv` function on `Receiver`.","Completes this oneshot with a successful result.","Wait for the associated [`Receiver`] handle to drop.","Check if the associated [`Receiver`] handle has been…","Prevent the associated [`Sender`] handle from sending a…","Attempts to receive a value outside of the context of a…","A single-producer, multi-consumer channel that only…","Receives values from the associated `Sender`.","Sends values to the associated `Receiver`.","Returns a reference to the inner value","channel","Create a new watch channel, returning the \"send\" and…","Watch error types","Error produced when sending a value fails.","Returns a reference to the most recently sent value","Attempts to receive the latest value sent via the channel.","Attempts to clone the latest value sent via the channel.","Broadcast a new value via the channel, notifying all…","Completes when all receivers have dropped.","deref_mut","Did the send fail because the channel has been closed?","Did the send fail because the channel was at capacity?","Utilities for tracking time.","A future that completes at a specified instant in time.","Errors encountered by the timer implementation.","Interval","A stream representing notifications at fixed interval","Create a Future that completes at `deadline`.","delay_for","Create a Future that completes in `duration` from now.","A configurable source of time.","Returns an `Instant` corresponding to \"now\".","delay_queue","An entry in `DelayQueue` that has expired and removed.","Token to a value stored in a `DelayQueue`.","Create a new, empty, `DelayQueue`","with_capacity_and_handle","Create a new, empty, `DelayQueue` backed by the specified…","Create a new, empty, `DelayQueue` with the specified…","insert_at","Insert `value` into the queue set to expire at a specific…","Attempt to pull out the next value of the delay queue,…","Insert `value` into the queue set to expire after the…","Remove the item associated with `key` from the queue.","Clears the queue, removing all items.","Returns the number of elements the queue can hold without…","Reserve capacity for at least `additional` more items to…","Returns `true` if there are no items in the queue.","Returns a reference to the inner value.","Returns a mutable reference to the inner value.","Consumes `self` and returns the inner value.","throttle","Allows a future or stream to execute for a maximum amount…","Error returned by `Timeout`.","Create a new `Timeout` that allows `value` to execute for…","Gets a reference to the underlying value in this timeout.","Gets a mutable reference to the underlying value in this…","Consumes this timeout, returning the underlying value.","Create a new `Timeout` that completes when `future`…","Returns the instant at which the future will complete.","is_elapsed","Returns true if the `Delay` has elapsed","Reset the `Delay` instance to a new deadline.","Create an error representing a shutdown timer.","Create an error representing a timer at capacity.","Create a new `Interval` that starts at `at` and yields…","new_interval","Creates new `Interval` that yields with interval of…","Completes when the next instant in the interval has been…","is_terminated","Timeout","Runs the provided future, blocking the current thread…","Run the provided closure with a `MockClock` that starts at…","Turn the internal timer and mock park for the provided…","tokio_test","Sequence a `read` operation.","Sequence a `write` operation.","Poll a future","Returns `true` if the inner future has received a wake…","waker_ref_count","Returns the number of references to the task waker","tokio_test::clock","tokio_test::io","tokio_test::task","MockClock"];
searchIndex["build_tests"]={"doc":E,"i":[],"p":[]};
searchIndex["test_cat"]={"doc":"A cat-like utility that can be used as a subprocess to…","i":[],"p":[]};
searchIndex["tokio"]={"doc":"A runtime for writing reliable, asynchronous, and slim…","i":[[23,"main","tokio",R[555],N,N],[23,"test",E,R[556],N,N],[5,"spawn",E,R[342],N,[[["f"]],["spawn"]]],[0,"clock",E,R[753],N,N],[5,"now","tokio::clock",R[754],N,[[],[R[222]]]],[0,"codec","tokio",R[378],N,N],[0,R[408],R[307],R[409],N,N],[3,R[377],R[349],R[410],N,N],[3,R[122],E,R[309],N,N],[3,R[120],E,R[308],N,N],[3,R[117],R[307],R[379],N,N],[8,"Decoder",E,R[441],N,N],[16,"Item",E,R[442],0,N],[16,"Error",E,R[443],0,N],[10,"decode",E,R[444],0,[[["self"],[R[94]]],[[R[98]],[R[20],[R[98]]]]]],[11,R[105],E,R[114],0,[[["self"],[R[94]]],[[R[98]],[R[20],[R[98]]]]]],[11,R[97],E,R[81],0,[[[T]],[R[97]]]],[8,"Encoder",E,R[445],N,N],[16,"Item",E,R[446],1,N],[16,"Error",E,R[447],1,N],[10,"encode",E,R[448],1,[[["self"],[R[94]]],[R[20]]]],[3,"Framed",E,R[255],N,N],[3,R[115],E,R[380],N,N],[12,"io",E,R[381],2,N],[12,"codec",E,R[382],2,N],[12,"read_buf",E,R[383],2,N],[12,R[384],E,R[385],2,N],[3,R[118],E,R[386],N,N],[3,R[119],E,R[387],N,N],[3,R[120],E,R[308],N,N],[3,R[122],E,R[309],N,N],[3,R[121],E,R[388],N,N],[4,R[116],E,R[389],N,N],[13,R[390],E,R[391],3,N],[13,"Io",E,R[392],3,N],[0,"fs","tokio","Asynchronous filesystem manipulation operations.",N,N],[5,R[488],R[310],R[489],N,[[["p"]]]],[5,R[490],E,R[491],N,[[["p"]]]],[5,R[492],E,R[493],N,[[["q"],["p"]]]],[5,R[215],E,R[211],N,[[["p"]]]],[0,"os",E,R[532],N,N],[0,"unix","tokio::fs::os",R[533],N,N],[5,"symlink","tokio::fs::os::unix",R[534],N,[[["q"],["p"]]]],[5,"read",R[310],R[494],N,[[["p"]]]],[5,"read_dir",E,R[495],N,[[["p"]]]],[5,R[496],E,R[497],N,[[["p"]]]],[5,R[498],E,R[499],N,[[["p"]]]],[5,R[500],E,R[501],N,[[["p"]]]],[5,R[502],E,R[503],N,[[["p"]]]],[5,"rename",E,R[504],N,[[["q"],["p"]]]],[5,R[212],E,R[505],N,[[[R[213]],["p"]]]],[5,R[509],E,R[211],N,[[["p"]]]],[5,"write",E,R[510],N,[[["c"],["p"]]]],[3,"File",E,R[483],N,N],[3,R[216],E,R[484],N,N],[0,"future","tokio","Asynchronous values.",N,N],[5,"err","tokio::future","Create a future that is immediately ready with an error…",N,[[["e"]],[["ready",[R[20]]],[R[20]]]]],[5,"ok",E,"Create a future that is immediately ready with a success…",N,[[[T]],[["ready",[R[20]]],[R[20]]]]],[5,"pending",E,"Creates a future which never resolves, representing a…",N,[[],["pending"]]],[5,"poll_fn",E,"Creates a new future wrapping around a function returning…",N,[[["f"]],["pollfn"]]],[5,"ready",E,"Create a future that is immediately ready with a value.",N,[[[T]],["ready"]]],[8,"Future",E,R[322],N,N],[16,"Output",E,R[323],4,N],[10,"poll",E,R[324],4,[[["pin"],["self"],[R[19]]],["poll"]]],[8,R[374],E,"An extension trait for `Future` that provides a variety of…",N,N],[11,R[363],E,"Creates a new future which allows `self` until `timeout`.",5,[[[R[167]]],[R[363]]]],[0,"io","tokio","Asynchronous I/O.",N,N],[5,"stderr",R[350],R[506],N,[[],["stderr"]]],[5,"stdin",E,R[507],N,[[],["stdin"]]],[5,"stdout",E,R[508],N,[[],["stdout"]]],[3,"Stderr",E,R[485],N,N],[3,"Stdin",E,R[486],N,N],[3,"Stdout",E,R[487],N,N],[5,"split",E,R[16],N,[[[T]]]],[5,"empty",E,R[540],N,[[],["empty"]]],[5,"repeat",E,R[541],N,[[["u8"]],["repeat"]]],[5,"sink",E,R[542],N,[[],["sink"]]],[8,R[74],E,R[18],N,N],[10,R[32],E,R[325],6,[[["pin"],["self"],[R[19]]],[[R[20],["error"]],["poll",[R[20]]]]]],[10,R[33],E,R[326],6,[[["pin"],["self"],[R[1]]]]],[8,R[77],E,R[22],N,N],[11,R[47],E,R[21],7,[[["vec"],["self"],["u8"]],[R[48]]]],[11,R[49],E,R[21],7,[[["self"],["string"]],[R[50]]]],[11,"split",E,R[51],7,[[["u8"]],["split"]]],[11,"lines",E,R[52],7,[[],["lines"]]],[8,R[75],E,R[18],N,N],[11,R[35],E,R[44],8,[[["self"]],["bool"]]],[10,R[34],E,R[327],8,[[["pin"],["self"],[R[19]]],[[R[20],[R[1],"error"]],["poll",[R[20]]]]]],[11,R[36],E,R[45],8,[[["pin"],["self"],[R[19]],["b"]],[[R[20],[R[1],"error"]],["poll",[R[20]]]]]],[8,R[78],E,R[22],N,N],[11,"chain",E,R[53],9,[[["r"]],["chain"]]],[11,"copy",E,R[54],9,[[["self"],["w"]],["copy"]]],[11,"read",E,R[55],9,[[["self"]],["read"]]],[11,R[56],E,R[57],9,[[["self"]],[R[58]]]],[11,R[59],E,R[23],9,[[["self"],["vec"]],[R[60]]]],[11,R[61],E,R[23],9,[[["self"],["string"]],[R[62]]]],[11,"take",E,R[63],9,[[["u64"]],["take"]]],[8,R[76],E,R[328],N,N],[10,R[37],E,R[329],10,[[["pin"],["self"],[R[19]]],[[R[20],[R[1],"error"]],["poll",[R[20]]]]]],[10,R[38],E,R[330],10,[[["pin"],["self"],[R[19]]],[["poll",[R[20]]],[R[20],["error"]]]]],[10,R[39],E,R[331],10,[[["pin"],["self"],[R[19]]],[["poll",[R[20]]],[R[20],["error"]]]]],[11,R[40],E,R[46],10,[[["pin"],["self"],[R[19]],["b"]],[[R[20],[R[1],"error"]],["poll",[R[20]]]]]],[8,R[79],E,R[22],N,N],[11,"write",E,R[64],11,[[["self"]],["write"]]],[11,R[65],E,R[66],11,[[["self"]],[R[67]]]],[11,"flush",E,R[68],11,[[["self"]],["flush"]]],[11,R[24],E,R[69],11,[[["self"]],[R[24]]]],[3,R[70],E,R[535],N,N],[3,R[72],E,R[536],N,N],[3,"Empty",E,R[537],N,N],[3,"Repeat",E,R[538],N,N],[3,"Sink",E,R[539],N,N],[3,"Error",E,"The error type for I/O operations of the [`Read`],…",N,N],[4,R[375],E,"A list specifying general categories of I/O error.",N,N],[13,"NotFound",E,"An entity was not found, often a file.",12,N],[13,"PermissionDenied",E,"The operation lacked the necessary privileges to complete.",12,N],[13,"ConnectionRefused",E,"The connection was refused by the remote server.",12,N],[13,"ConnectionReset",E,"The connection was reset by the remote server.",12,N],[13,"ConnectionAborted",E,"The connection was aborted (terminated) by the remote…",12,N],[13,"NotConnected",E,"The network operation failed because it was not connected…",12,N],[13,"AddrInUse",E,"A socket address could not be bound because the address is…",12,N],[13,"AddrNotAvailable",E,"A nonexistent interface was requested or the requested…",12,N],[13,"BrokenPipe",E,"The operation failed because a pipe was closed.",12,N],[13,"AlreadyExists",E,"An entity already exists, often a file.",12,N],[13,"WouldBlock",E,"The operation needs to block to complete, but the blocking…",12,N],[13,"InvalidInput",E,"A parameter was incorrect.",12,N],[13,"InvalidData",E,"Data not valid for the operation were encountered.",12,N],[13,"TimedOut",E,"The I/O operation's timeout expired, causing it to be…",12,N],[13,"WriteZero",E,R[311],12,N],[13,"Interrupted",E,"This operation was interrupted.",12,N],[13,"Other",E,"Any I/O error not part of this list.",12,N],[13,"UnexpectedEof",E,R[311],12,N],[6,"Result",E,"A specialized `Result` type for I/O operations.",N,N],[0,"net","tokio","TCP/UDP/Unix bindings for `tokio`.",N,N],[3,R[291],R[315],R[313],N,N],[3,R[292],E,R[314],N,N],[3,R[293],E,R[255],N,N],[3,R[294],E,R[317],N,N],[3,R[298],E,R[319],N,N],[3,R[299],E,R[320],N,N],[3,R[300],E,R[321],N,N],[0,"tcp",E,R[592],N,N],[0,"split",R[312],R[598],N,N],[3,R[73],R[351],R[599],N,N],[3,R[80],E,R[600],N,N],[3,R[305],R[312],R[593],N,N],[3,R[291],E,R[313],N,N],[3,R[292],E,R[314],N,N],[0,"udp",R[315],R[625],N,N],[0,"split",R[316],R[659],N,N],[3,R[297],R[352],R[660],N,N],[3,R[296],E,R[661],N,N],[3,R[295],E,R[662],N,N],[12,"0",E,E,13,N],[12,"1",E,E,13,N],[3,R[293],R[316],R[255],N,N],[3,R[294],E,R[317],N,N],[0,"unix",R[315],"Unix domain socket bindings for `tokio` (only available on…",N,N],[0,"split",R[318],R[681],N,N],[3,R[73],R[353],R[682],N,N],[3,R[80],E,R[683],N,N],[3,"UCred",R[318],R[665],N,N],[12,"uid",E,R[666],14,N],[12,"gid",E,R[667],14,N],[3,R[298],E,R[319],N,N],[3,R[299],E,R[320],N,N],[3,R[300],E,R[321],N,N],[0,"prelude","tokio","A \"prelude\" for users of the `tokio` crate.",N,N],[8,"Future","tokio::prelude",R[322],N,N],[16,"Output",E,R[323],4,N],[10,"poll",E,R[324],4,[[["pin"],["self"],[R[19]]],["poll"]]],[8,"Stream",E,R[332],N,N],[16,"Item",E,R[333],15,N],[10,R[110],E,R[334],15,[[["pin"],["self"],[R[19]]],[[R[98]],["poll",[R[98]]]]]],[11,R[335],E,R[336],15,[[["self"]]]],[8,"Sink",E,"A `Sink` is a value into which other values can be sent,…",N,N],[16,"Error",E,"The type of value produced by the sink when an error occurs.",16,N],[10,R[111],E,"Attempts to prepare the `Sink` to receive a value.",16,[[["pin"],["self"],[R[19]]],[["poll",[R[20]]],[R[20]]]]],[10,R[112],E,"Begin the process of sending a value to the sink. Each…",16,[[["pin"],["self"],["item"]],[R[20]]]],[10,R[38],E,"Flush any remaining output from this sink.",16,[[["pin"],["self"],[R[19]]],[["poll",[R[20]]],[R[20]]]]],[10,R[113],E,"Flush any remaining output and close this sink, if…",16,[[["pin"],["self"],[R[19]]],[["poll",[R[20]]],[R[20]]]]],[8,R[74],E,R[18],N,N],[10,R[32],E,R[325],6,[[["pin"],["self"],[R[19]]],[[R[20],["error"]],["poll",[R[20]]]]]],[10,R[33],E,R[326],6,[[["pin"],["self"],[R[1]]]]],[8,R[75],E,R[18],N,N],[11,R[35],E,R[44],8,[[["self"]],["bool"]]],[10,R[34],E,R[327],8,[[["pin"],["self"],[R[19]]],[[R[20],[R[1],"error"]],["poll",[R[20]]]]]],[11,R[36],E,R[45],8,[[["pin"],["self"],[R[19]],["b"]],[[R[20],[R[1],"error"]],["poll",[R[20]]]]]],[8,R[76],E,R[328],N,N],[10,R[37],E,R[329],10,[[["pin"],["self"],[R[19]]],[[R[20],[R[1],"error"]],["poll",[R[20]]]]]],[10,R[38],E,R[330],10,[[["pin"],["self"],[R[19]]],[["poll",[R[20]]],[R[20],["error"]]]]],[10,R[39],E,R[331],10,[[["pin"],["self"],[R[19]]],[["poll",[R[20]]],[R[20],["error"]]]]],[11,R[40],E,R[46],10,[[["pin"],["self"],[R[19]],["b"]],[[R[20],[R[1],"error"]],["poll",[R[20]]]]]],[0,"process","tokio",R[557],N,N],[3,"Child",R[354],R[559],N,N],[3,R[304],E,R[562],N,N],[3,R[302],E,R[560],N,N],[3,R[303],E,R[561],N,N],[3,"Command",E,R[558],N,N],[0,"signal","tokio","Asynchronous signal handling for `tokio`. ctrl-C…",N,N],[5,"ctrl_c","tokio::signal",R[591],N,[[],[["ctrlc"],["error"],[R[20],["ctrlc","error"]]]]],[0,"stream","tokio","A sequence of asynchronous values.",N,N],[8,"Stream","tokio::stream",R[332],N,N],[16,"Item",E,R[333],15,N],[10,R[110],E,R[334],15,[[["pin"],["self"],[R[19]]],[[R[98]],["poll",[R[98]]]]]],[11,R[335],E,R[336],15,[[["self"]]]],[5,"empty",E,"Creates a stream which contains no elements.",N,[[],["empty"]]],[5,"iter",E,"Converts an `Iterator` into a `Stream` which is always…",N,[[["i"]],["iter"]]],[5,"once",E,"Creates a stream of a single element.",N,[[["fut"]],["once"]]],[5,"pending",E,"Creates a stream which never returns any elements.",N,[[],["pending"]]],[5,"poll_fn",E,"Creates a new stream wrapping a function returning…",N,[[["f"]],["pollfn"]]],[5,"repeat",E,"Create a stream which produces the same item repeatedly.",N,[[[T]],["repeat"]]],[5,"unfold",E,"Creates a `Stream` from a seed and a closure returning a…",N,[[[T],["f"]],["unfold"]]],[8,R[376],E,"An extension trait for `Stream` that provides a variety of…",N,N],[11,R[774],E,"Throttle down the stream by enforcing a fixed delay…",17,[[[R[167]]],[R[774]]]],[11,R[363],E,"Creates a new stream which allows `self` until `timeout`.",17,[[[R[167]]],[R[363]]]],[0,"sync","tokio","Future-aware synchronization",N,N],[3,"Barrier",R[338],R[691],N,N],[0,"mpsc",E,R[696],N,N],[0,"error",R[337],R[708],N,N],[3,R[157],R[355],R[711],N,N],[3,R[158],E,R[713],N,N],[3,R[140],E,R[710],N,N],[3,R[160],E,R[712],N,N],[3,R[159],E,R[714],N,N],[3,R[133],E,R[709],N,N],[3,"Sender",R[337],R[698],N,N],[3,R[151],E,R[699],N,N],[3,R[152],E,R[700],N,N],[3,R[139],E,R[697],N,N],[5,R[702],E,R[703],N,[[]]],[5,R[733],E,R[701],N,[[[R[1]]]]],[0,"oneshot",R[338],R[717],N,N],[3,"Sender",R[339],R[718],N,N],[3,R[139],E,R[719],N,N],[0,"error",E,R[721],N,N],[3,R[133],R[356],R[722],N,N],[3,R[161],E,R[723],N,N],[5,R[733],R[339],R[720],N,[[]]],[0,"watch",R[338],R[729],N,N],[3,R[139],R[340],R[730],N,N],[3,"Sender",E,R[731],N,N],[3,"Ref",E,R[732],N,N],[0,"error",E,R[735],N,N],[3,R[140],R[357],R[736],N,N],[5,R[733],R[340],R[734],N,[[[T]]]],[3,"Mutex",R[338],R[692],N,N],[3,R[156],E,R[693],N,N],[0,"timer","tokio",R[745],N,N],[5,"delay",R[341],R[750],N,[[[R[222]]],["delay"]]],[5,R[751],E,R[752],N,[[[R[167]]],["delay"]]],[0,R[755],E,R[219],N,N],[3,R[220],R[358],R[219],N,N],[3,"Expired",E,R[756],N,N],[3,"Key",E,R[757],N,N],[0,R[363],R[341],R[775],N,N],[3,R[793],R[359],R[225],N,N],[3,"Elapsed",E,R[776],N,N],[3,"Delay",R[341],R[746],N,N],[3,R[220],E,R[219],N,N],[3,"Error",E,R[747],N,N],[3,R[748],E,R[749],N,N],[3,R[793],E,R[225],N,N],[0,"executor","tokio","Task execution utilities.",N,N],[3,R[195],R[360],R[450],N,N],[8,R[476],E,R[477],N,N],[10,"spawn",E,R[478],18,[[["self"],["pin",["box"]],["box",["future"]]],[[R[20],[R[178]]],[R[178]]]]],[11,"status",E,R[184],18,[[["self"]],[[R[20],[R[178]]],[R[178]]]]],[3,R[194],E,R[449],N,N],[8,R[203],E,R[479],N,N],[10,"spawn",E,R[480],19,[[["self"],[T]],[[R[20],[R[178]]],[R[178]]]]],[11,"status",E,R[184],19,[[["self"]],[[R[20],[R[178]]],[R[178]]]]],[3,"Spawn",E,"Return value from the `spawn` function.",N,N],[5,"spawn",E,R[342],N,[[["f"]],["spawn"]]],[0,R[347],"tokio","A batteries included runtime for applications using Tokio.",N,N],[3,R[377],R[343],"Builds Tokio Runtime with custom configuration values.",N,N],[3,"Runtime",E,"Handle to the Tokio runtime.",N,N],[3,R[198],E,"Executes futures on the runtime",N,N],[0,R[456],E,"A runtime implementation that runs everything on the…",N,N],[5,"spawn",R[361],R[461],N,[[["f"]]]],[3,R[198],E,R[457],N,N],[3,R[377],E,"Builds a Single-threaded runtime with custom configuration…",N,N],[3,"Handle",E,R[460],N,N],[3,"Runtime",E,"Single-threaded runtime provides a way to start reactor…",N,N],[3,R[458],E,R[459],N,N],[11,"new",E,R[344],20,[[],[R[88]]]],[11,"clock",E,R[345],20,[[["self"],["clock"]],["self"]]],[11,"build",E,R[346],20,[[["self"]],[[R[347]],[R[20],[R[347]]]]]],[11,"spawn",E,"Spawn a future onto the `CurrentThread` runtime instance…",21,[[["self"],["f"]],[[R[178]],[R[20],[R[178]]]]]],[11,"status",E,R[184],21,[[["self"]],[[R[178]],[R[20],[R[178]]]]]],[11,"new",E,"Returns a new runtime initialized with default…",22,[[],[[R[347]],[R[20],[R[347]]]]]],[11,"handle",E,"Get a new handle to spawn futures on the single-threaded…",22,[[["self"]],["handle"]]],[11,"spawn",E,"Spawn a future onto the single-threaded Tokio runtime.",22,[[["self"],["f"]],["self"]]],[11,R[170],E,R[794],22,[[["self"],["f"]]]],[11,"run",E,R[165],22,[[["self"]],[[R[20],[R[172]]],[R[172]]]]],[11,"new",R[343],R[344],23,[[],[R[88]]]],[11,"clock",E,R[345],23,[[["self"],["clock"]],["self"]]],[11,R[466],E,"Sets a callback to handle panics in futures.",23,[[["self"],["f"]],["self"]]],[11,"core_threads",E,"Set the maximum number of worker threads for the…",23,[[["self"],[R[1]]],["self"]]],[11,"blocking_threads",E,"Set the maximum number of concurrent blocking sections in…",23,[[["self"],[R[1]]],["self"]]],[11,R[465],E,"Set the worker thread keep alive duration for threads in…",23,[[["self"],[R[98],[R[167]]],[R[167]]],["self"]]],[11,R[467],E,"Set name prefix of threads spawned by the `Runtime`'s…",23,[[["self"],["string"],["into",["string"]]],["self"]]],[11,R[468],E,R[469],23,[[["self"],[R[1]]],["self"]]],[11,R[470],E,R[471],23,[[["self"],["f"]],["self"]]],[11,R[472],E,R[473],23,[[["self"],["f"]],["self"]]],[11,"build",E,R[346],23,[[["self"]],[[R[20],[R[347]]],[R[347]]]]],[11,"spawn",E,R[348],24,[[["self"],["f"]]]],[11,"new",E,"Create a new runtime instance with default configuration…",25,[[],[R[20]]]],[11,"executor",E,"Return a handle to the runtime's executor.",25,[[["self"]],[R[192]]]],[11,"spawn",E,R[348],25,[[["self"],["f"]],["self"]]],[11,R[170],E,"Run a future to completion on the Tokio runtime.",25,[[["self"],["f"]]]],[11,R[474],E,"Signals the runtime to shutdown once it becomes idle.",25,[[]]],[11,R[475],E,"Signals the runtime to shutdown immediately.",25,[[]]],[11,R[101],R[349],E,26,[[["self"]],[T]]],[11,R[100],E,E,26,[[["self"],[T]]]],[11,"into",E,E,26,[[],[U]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[25],E,E,26,[[[U]],[R[20]]]],[11,R[26],E,E,26,[[],[R[20]]]],[11,R[27],E,E,26,[[["self"]],[T]]],[11,R[29],E,E,26,[[["self"]],[T]]],[11,R[28],E,E,26,[[["self"]],[R[30]]]],[11,"into",R[307],E,27,[[],[U]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[103],E,E,27,[[["self"]],["string"]]],[11,R[25],E,E,27,[[[U]],[R[20]]]],[11,R[26],E,E,27,[[],[R[20]]]],[11,R[27],E,E,27,[[["self"]],[T]]],[11,R[29],E,E,27,[[["self"]],[T]]],[11,R[28],E,E,27,[[["self"]],[R[30]]]],[11,"into",E,E,28,[[],[U]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[25],E,E,28,[[[U]],[R[20]]]],[11,R[26],E,E,28,[[],[R[20]]]],[11,R[27],E,E,28,[[["self"]],[T]]],[11,R[29],E,E,28,[[["self"]],[T]]],[11,R[28],E,E,28,[[["self"]],[R[30]]]],[11,R[101],E,E,29,[[["self"]],[T]]],[11,R[100],E,E,29,[[["self"],[T]]]],[11,"into",E,E,29,[[],[U]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[25],E,E,29,[[[U]],[R[20]]]],[11,R[26],E,E,29,[[],[R[20]]]],[11,R[27],E,E,29,[[["self"]],[T]]],[11,R[29],E,E,29,[[["self"]],[T]]],[11,R[28],E,E,29,[[["self"]],[R[30]]]],[11,"into",E,E,30,[[],[U]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[25],E,E,30,[[[U]],[R[20]]]],[11,R[26],E,E,30,[[],[R[20]]]],[11,R[27],E,E,30,[[["self"]],[T]]],[11,R[29],E,E,30,[[["self"]],[T]]],[11,R[28],E,E,30,[[["self"]],[R[30]]]],[11,R[99],E,E,30,[[["pin"],["s"],[R[19]]],[[R[98],[R[20]]],["poll",[R[98]]]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[25],E,E,2,[[[U]],[R[20]]]],[11,R[26],E,E,2,[[],[R[20]]]],[11,R[27],E,E,2,[[["self"]],[T]]],[11,R[29],E,E,2,[[["self"]],[T]]],[11,R[28],E,E,2,[[["self"]],[R[30]]]],[11,"into",E,E,31,[[],[U]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[25],E,E,31,[[[U]],[R[20]]]],[11,R[26],E,E,31,[[],[R[20]]]],[11,R[27],E,E,31,[[["self"]],[T]]],[11,R[29],E,E,31,[[["self"]],[T]]],[11,R[28],E,E,31,[[["self"]],[R[30]]]],[11,R[99],E,E,31,[[["pin"],["s"],[R[19]]],[[R[98],[R[20]]],["poll",[R[98]]]]]],[11,"into",E,E,32,[[],[U]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[25],E,E,32,[[[U]],[R[20]]]],[11,R[26],E,E,32,[[],[R[20]]]],[11,R[27],E,E,32,[[["self"]],[T]]],[11,R[29],E,E,32,[[["self"]],[T]]],[11,R[28],E,E,32,[[["self"]],[R[30]]]],[11,R[99],E,E,32,[[["pin"],["s"],[R[19]]],[[R[98],[R[20]]],["poll",[R[98]]]]]],[11,R[101],E,E,33,[[["self"]],[T]]],[11,R[100],E,E,33,[[["self"],[T]]]],[11,"into",E,E,33,[[],[U]]],[11,"from",E,E,33,[[[T]],[T]]],[11,R[25],E,E,33,[[[U]],[R[20]]]],[11,R[26],E,E,33,[[],[R[20]]]],[11,R[27],E,E,33,[[["self"]],[T]]],[11,R[29],E,E,33,[[["self"]],[T]]],[11,R[28],E,E,33,[[["self"]],[R[30]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[103],E,E,3,[[["self"]],["string"]]],[11,R[25],E,E,3,[[[U]],[R[20]]]],[11,R[26],E,E,3,[[],[R[20]]]],[11,R[27],E,E,3,[[["self"]],[T]]],[11,R[29],E,E,3,[[["self"]],[T]]],[11,R[28],E,E,3,[[["self"]],[R[30]]]],[11,"into",R[310],E,34,[[],[U]]],[11,"from",E,E,34,[[[T]],[T]]],[11,R[25],E,E,34,[[[U]],[R[20]]]],[11,R[26],E,E,34,[[],[R[20]]]],[11,R[27],E,E,34,[[["self"]],[T]]],[11,R[29],E,E,34,[[["self"]],[T]]],[11,R[28],E,E,34,[[["self"]],[R[30]]]],[11,R[101],E,E,35,[[["self"]],[T]]],[11,R[100],E,E,35,[[["self"],[T]]]],[11,"into",E,E,35,[[],[U]]],[11,"from",E,E,35,[[[T]],[T]]],[11,R[25],E,E,35,[[[U]],[R[20]]]],[11,R[26],E,E,35,[[],[R[20]]]],[11,R[27],E,E,35,[[["self"]],[T]]],[11,R[29],E,E,35,[[["self"]],[T]]],[11,R[28],E,E,35,[[["self"]],[R[30]]]],[11,"into",R[350],E,36,[[],[U]]],[11,"from",E,E,36,[[[T]],[T]]],[11,R[25],E,E,36,[[[U]],[R[20]]]],[11,R[26],E,E,36,[[],[R[20]]]],[11,R[27],E,E,36,[[["self"]],[T]]],[11,R[29],E,E,36,[[["self"]],[T]]],[11,R[28],E,E,36,[[["self"]],[R[30]]]],[11,"into",E,E,37,[[],[U]]],[11,"from",E,E,37,[[[T]],[T]]],[11,R[25],E,E,37,[[[U]],[R[20]]]],[11,R[26],E,E,37,[[],[R[20]]]],[11,R[27],E,E,37,[[["self"]],[T]]],[11,R[29],E,E,37,[[["self"]],[T]]],[11,R[28],E,E,37,[[["self"]],[R[30]]]],[11,"into",E,E,38,[[],[U]]],[11,"from",E,E,38,[[[T]],[T]]],[11,R[25],E,E,38,[[[U]],[R[20]]]],[11,R[26],E,E,38,[[],[R[20]]]],[11,R[27],E,E,38,[[["self"]],[T]]],[11,R[29],E,E,38,[[["self"]],[T]]],[11,R[28],E,E,38,[[["self"]],[R[30]]]],[11,"into",E,E,39,[[],[U]]],[11,"from",E,E,39,[[[T]],[T]]],[11,R[25],E,E,39,[[[U]],[R[20]]]],[11,R[26],E,E,39,[[],[R[20]]]],[11,R[27],E,E,39,[[["self"]],[T]]],[11,R[29],E,E,39,[[["self"]],[T]]],[11,R[28],E,E,39,[[["self"]],[R[30]]]],[11,"into",E,E,40,[[],[U]]],[11,"from",E,E,40,[[[T]],[T]]],[11,R[25],E,E,40,[[[U]],[R[20]]]],[11,R[26],E,E,40,[[],[R[20]]]],[11,R[27],E,E,40,[[["self"]],[T]]],[11,R[29],E,E,40,[[["self"]],[T]]],[11,R[28],E,E,40,[[["self"]],[R[30]]]],[11,"into",E,E,41,[[],[U]]],[11,"from",E,E,41,[[[T]],[T]]],[11,R[25],E,E,41,[[[U]],[R[20]]]],[11,R[26],E,E,41,[[],[R[20]]]],[11,R[27],E,E,41,[[["self"]],[T]]],[11,R[29],E,E,41,[[["self"]],[T]]],[11,R[28],E,E,41,[[["self"]],[R[30]]]],[11,"into",E,E,42,[[],[U]]],[11,"from",E,E,42,[[[T]],[T]]],[11,R[25],E,E,42,[[[U]],[R[20]]]],[11,R[26],E,E,42,[[],[R[20]]]],[11,R[27],E,E,42,[[["self"]],[T]]],[11,R[29],E,E,42,[[["self"]],[T]]],[11,R[28],E,E,42,[[["self"]],[R[30]]]],[11,"into",E,E,43,[[],[U]]],[11,"from",E,E,43,[[[T]],[T]]],[11,R[25],E,E,43,[[[U]],[R[20]]]],[11,R[26],E,E,43,[[],[R[20]]]],[11,R[27],E,E,43,[[["self"]],[T]]],[11,R[29],E,E,43,[[["self"]],[T]]],[11,R[28],E,E,43,[[["self"]],[R[30]]]],[11,"into",E,E,44,[[],[U]]],[11,"from",E,E,44,[[[T]],[T]]],[11,R[103],E,E,44,[[["self"]],["string"]]],[11,R[25],E,E,44,[[[U]],[R[20]]]],[11,R[26],E,E,44,[[],[R[20]]]],[11,R[27],E,E,44,[[["self"]],[T]]],[11,R[29],E,E,44,[[["self"]],[T]]],[11,R[28],E,E,44,[[["self"]],[R[30]]]],[11,R[101],E,E,12,[[["self"]],[T]]],[11,R[100],E,E,12,[[["self"],[T]]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[25],E,E,12,[[[U]],[R[20]]]],[11,R[26],E,E,12,[[],[R[20]]]],[11,R[27],E,E,12,[[["self"]],[T]]],[11,R[29],E,E,12,[[["self"]],[T]]],[11,R[28],E,E,12,[[["self"]],[R[30]]]],[11,"into",R[312],E,45,[[],[U]]],[11,"from",E,E,45,[[[T]],[T]]],[11,R[25],E,E,45,[[[U]],[R[20]]]],[11,R[26],E,E,45,[[],[R[20]]]],[11,R[27],E,E,45,[[["self"]],[T]]],[11,R[29],E,E,45,[[["self"]],[T]]],[11,R[28],E,E,45,[[["self"]],[R[30]]]],[11,"into",E,E,46,[[],[U]]],[11,"from",E,E,46,[[[T]],[T]]],[11,R[25],E,E,46,[[[U]],[R[20]]]],[11,R[26],E,E,46,[[],[R[20]]]],[11,R[27],E,E,46,[[["self"]],[T]]],[11,R[29],E,E,46,[[["self"]],[T]]],[11,R[28],E,E,46,[[["self"]],[R[30]]]],[11,"into",R[316],E,47,[[],[U]]],[11,"from",E,E,47,[[[T]],[T]]],[11,R[25],E,E,47,[[[U]],[R[20]]]],[11,R[26],E,E,47,[[],[R[20]]]],[11,R[27],E,E,47,[[["self"]],[T]]],[11,R[29],E,E,47,[[["self"]],[T]]],[11,R[28],E,E,47,[[["self"]],[R[30]]]],[11,R[99],E,E,47,[[["pin"],["s"],[R[19]]],[[R[98],[R[20]]],["poll",[R[98]]]]]],[11,"into",E,E,48,[[],[U]]],[11,"from",E,E,48,[[[T]],[T]]],[11,R[25],E,E,48,[[[U]],[R[20]]]],[11,R[26],E,E,48,[[],[R[20]]]],[11,R[27],E,E,48,[[["self"]],[T]]],[11,R[29],E,E,48,[[["self"]],[T]]],[11,R[28],E,E,48,[[["self"]],[R[30]]]],[11,"into",R[318],E,49,[[],[U]]],[11,"from",E,E,49,[[[T]],[T]]],[11,R[25],E,E,49,[[[U]],[R[20]]]],[11,R[26],E,E,49,[[],[R[20]]]],[11,R[27],E,E,49,[[["self"]],[T]]],[11,R[29],E,E,49,[[["self"]],[T]]],[11,R[28],E,E,49,[[["self"]],[R[30]]]],[11,"into",E,E,50,[[],[U]]],[11,"from",E,E,50,[[[T]],[T]]],[11,R[25],E,E,50,[[[U]],[R[20]]]],[11,R[26],E,E,50,[[],[R[20]]]],[11,R[27],E,E,50,[[["self"]],[T]]],[11,R[29],E,E,50,[[["self"]],[T]]],[11,R[28],E,E,50,[[["self"]],[R[30]]]],[11,"into",E,E,51,[[],[U]]],[11,"from",E,E,51,[[[T]],[T]]],[11,R[25],E,E,51,[[[U]],[R[20]]]],[11,R[26],E,E,51,[[],[R[20]]]],[11,R[27],E,E,51,[[["self"]],[T]]],[11,R[29],E,E,51,[[["self"]],[T]]],[11,R[28],E,E,51,[[["self"]],[R[30]]]],[11,"into",R[351],E,52,[[],[U]]],[11,"from",E,E,52,[[[T]],[T]]],[11,R[25],E,E,52,[[[U]],[R[20]]]],[11,R[26],E,E,52,[[],[R[20]]]],[11,R[27],E,E,52,[[["self"]],[T]]],[11,R[29],E,E,52,[[["self"]],[T]]],[11,R[28],E,E,52,[[["self"]],[R[30]]]],[11,"into",E,E,53,[[],[U]]],[11,"from",E,E,53,[[[T]],[T]]],[11,R[25],E,E,53,[[[U]],[R[20]]]],[11,R[26],E,E,53,[[],[R[20]]]],[11,R[27],E,E,53,[[["self"]],[T]]],[11,R[29],E,E,53,[[["self"]],[T]]],[11,R[28],E,E,53,[[["self"]],[R[30]]]],[11,"into",R[312],E,54,[[],[U]]],[11,"from",E,E,54,[[[T]],[T]]],[11,R[25],E,E,54,[[[U]],[R[20]]]],[11,R[26],E,E,54,[[],[R[20]]]],[11,R[27],E,E,54,[[["self"]],[T]]],[11,R[29],E,E,54,[[["self"]],[T]]],[11,R[28],E,E,54,[[["self"]],[R[30]]]],[11,R[99],E,E,54,[[["pin"],["s"],[R[19]]],[[R[98],[R[20]]],["poll",[R[98]]]]]],[11,"into",R[352],E,55,[[],[U]]],[11,"from",E,E,55,[[[T]],[T]]],[11,R[25],E,E,55,[[[U]],[R[20]]]],[11,R[26],E,E,55,[[],[R[20]]]],[11,R[27],E,E,55,[[["self"]],[T]]],[11,R[29],E,E,55,[[["self"]],[T]]],[11,R[28],E,E,55,[[["self"]],[R[30]]]],[11,"into",E,E,56,[[],[U]]],[11,"from",E,E,56,[[[T]],[T]]],[11,R[25],E,E,56,[[[U]],[R[20]]]],[11,R[26],E,E,56,[[],[R[20]]]],[11,R[27],E,E,56,[[["self"]],[T]]],[11,R[29],E,E,56,[[["self"]],[T]]],[11,R[28],E,E,56,[[["self"]],[R[30]]]],[11,"into",E,E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[103],E,E,13,[[["self"]],["string"]]],[11,R[25],E,E,13,[[[U]],[R[20]]]],[11,R[26],E,E,13,[[],[R[20]]]],[11,R[27],E,E,13,[[["self"]],[T]]],[11,R[29],E,E,13,[[["self"]],[T]]],[11,R[28],E,E,13,[[["self"]],[R[30]]]],[11,"into",R[353],E,57,[[],[U]]],[11,"from",E,E,57,[[[T]],[T]]],[11,R[25],E,E,57,[[[U]],[R[20]]]],[11,R[26],E,E,57,[[],[R[20]]]],[11,R[27],E,E,57,[[["self"]],[T]]],[11,R[29],E,E,57,[[["self"]],[T]]],[11,R[28],E,E,57,[[["self"]],[R[30]]]],[11,"into",E,E,58,[[],[U]]],[11,"from",E,E,58,[[[T]],[T]]],[11,R[25],E,E,58,[[[U]],[R[20]]]],[11,R[26],E,E,58,[[],[R[20]]]],[11,R[27],E,E,58,[[["self"]],[T]]],[11,R[29],E,E,58,[[["self"]],[T]]],[11,R[28],E,E,58,[[["self"]],[R[30]]]],[11,R[101],R[318],E,14,[[["self"]],[T]]],[11,R[100],E,E,14,[[["self"],[T]]]],[11,"into",E,E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[25],E,E,14,[[[U]],[R[20]]]],[11,R[26],E,E,14,[[],[R[20]]]],[11,R[27],E,E,14,[[["self"]],[T]]],[11,R[29],E,E,14,[[["self"]],[T]]],[11,R[28],E,E,14,[[["self"]],[R[30]]]],[11,"into",R[354],E,59,[[],[U]]],[11,"from",E,E,59,[[[T]],[T]]],[11,R[25],E,E,59,[[[U]],[R[20]]]],[11,R[26],E,E,59,[[],[R[20]]]],[11,R[27],E,E,59,[[["self"]],[T]]],[11,R[29],E,E,59,[[["self"]],[T]]],[11,R[28],E,E,59,[[["self"]],[R[30]]]],[11,R[210],E,E,59,[[["f"],[R[19]],["pin"]],["poll"]]],[11,"into",E,E,60,[[],[U]]],[11,"from",E,E,60,[[[T]],[T]]],[11,R[25],E,E,60,[[[U]],[R[20]]]],[11,R[26],E,E,60,[[],[R[20]]]],[11,R[27],E,E,60,[[["self"]],[T]]],[11,R[29],E,E,60,[[["self"]],[T]]],[11,R[28],E,E,60,[[["self"]],[R[30]]]],[11,"into",E,E,61,[[],[U]]],[11,"from",E,E,61,[[[T]],[T]]],[11,R[25],E,E,61,[[[U]],[R[20]]]],[11,R[26],E,E,61,[[],[R[20]]]],[11,R[27],E,E,61,[[["self"]],[T]]],[11,R[29],E,E,61,[[["self"]],[T]]],[11,R[28],E,E,61,[[["self"]],[R[30]]]],[11,"into",E,E,62,[[],[U]]],[11,"from",E,E,62,[[[T]],[T]]],[11,R[25],E,E,62,[[[U]],[R[20]]]],[11,R[26],E,E,62,[[],[R[20]]]],[11,R[27],E,E,62,[[["self"]],[T]]],[11,R[29],E,E,62,[[["self"]],[T]]],[11,R[28],E,E,62,[[["self"]],[R[30]]]],[11,"into",E,E,63,[[],[U]]],[11,"from",E,E,63,[[[T]],[T]]],[11,R[25],E,E,63,[[[U]],[R[20]]]],[11,R[26],E,E,63,[[],[R[20]]]],[11,R[27],E,E,63,[[["self"]],[T]]],[11,R[29],E,E,63,[[["self"]],[T]]],[11,R[28],E,E,63,[[["self"]],[R[30]]]],[11,"into",R[338],E,64,[[],[U]]],[11,"from",E,E,64,[[[T]],[T]]],[11,R[25],E,E,64,[[[U]],[R[20]]]],[11,R[26],E,E,64,[[],[R[20]]]],[11,R[27],E,E,64,[[["self"]],[T]]],[11,R[29],E,E,64,[[["self"]],[T]]],[11,R[28],E,E,64,[[["self"]],[R[30]]]],[11,"into",R[355],E,65,[[],[U]]],[11,"from",E,E,65,[[[T]],[T]]],[11,R[103],E,E,65,[[["self"]],["string"]]],[11,R[25],E,E,65,[[[U]],[R[20]]]],[11,R[26],E,E,65,[[],[R[20]]]],[11,R[27],E,E,65,[[["self"]],[T]]],[11,R[29],E,E,65,[[["self"]],[T]]],[11,R[28],E,E,65,[[["self"]],[R[30]]]],[11,"into",E,E,66,[[],[U]]],[11,"from",E,E,66,[[[T]],[T]]],[11,R[103],E,E,66,[[["self"]],["string"]]],[11,R[25],E,E,66,[[[U]],[R[20]]]],[11,R[26],E,E,66,[[],[R[20]]]],[11,R[27],E,E,66,[[["self"]],[T]]],[11,R[29],E,E,66,[[["self"]],[T]]],[11,R[28],E,E,66,[[["self"]],[R[30]]]],[11,"into",E,E,67,[[],[U]]],[11,"from",E,E,67,[[[T]],[T]]],[11,R[103],E,E,67,[[["self"]],["string"]]],[11,R[25],E,E,67,[[[U]],[R[20]]]],[11,R[26],E,E,67,[[],[R[20]]]],[11,R[27],E,E,67,[[["self"]],[T]]],[11,R[29],E,E,67,[[["self"]],[T]]],[11,R[28],E,E,67,[[["self"]],[R[30]]]],[11,"into",E,E,68,[[],[U]]],[11,"from",E,E,68,[[[T]],[T]]],[11,R[103],E,E,68,[[["self"]],["string"]]],[11,R[25],E,E,68,[[[U]],[R[20]]]],[11,R[26],E,E,68,[[],[R[20]]]],[11,R[27],E,E,68,[[["self"]],[T]]],[11,R[29],E,E,68,[[["self"]],[T]]],[11,R[28],E,E,68,[[["self"]],[R[30]]]],[11,"into",E,E,69,[[],[U]]],[11,"from",E,E,69,[[[T]],[T]]],[11,R[103],E,E,69,[[["self"]],["string"]]],[11,R[25],E,E,69,[[[U]],[R[20]]]],[11,R[26],E,E,69,[[],[R[20]]]],[11,R[27],E,E,69,[[["self"]],[T]]],[11,R[29],E,E,69,[[["self"]],[T]]],[11,R[28],E,E,69,[[["self"]],[R[30]]]],[11,"into",E,E,70,[[],[U]]],[11,"from",E,E,70,[[[T]],[T]]],[11,R[103],E,E,70,[[["self"]],["string"]]],[11,R[25],E,E,70,[[[U]],[R[20]]]],[11,R[26],E,E,70,[[],[R[20]]]],[11,R[27],E,E,70,[[["self"]],[T]]],[11,R[29],E,E,70,[[["self"]],[T]]],[11,R[28],E,E,70,[[["self"]],[R[30]]]],[11,R[101],R[337],E,71,[[["self"]],[T]]],[11,R[100],E,E,71,[[["self"],[T]]]],[11,"into",E,E,71,[[],[U]]],[11,"from",E,E,71,[[[T]],[T]]],[11,R[25],E,E,71,[[[U]],[R[20]]]],[11,R[26],E,E,71,[[],[R[20]]]],[11,R[27],E,E,71,[[["self"]],[T]]],[11,R[29],E,E,71,[[["self"]],[T]]],[11,R[28],E,E,71,[[["self"]],[R[30]]]],[11,"into",E,E,72,[[],[U]]],[11,"from",E,E,72,[[[T]],[T]]],[11,R[25],E,E,72,[[[U]],[R[20]]]],[11,R[26],E,E,72,[[],[R[20]]]],[11,R[27],E,E,72,[[["self"]],[T]]],[11,R[29],E,E,72,[[["self"]],[T]]],[11,R[28],E,E,72,[[["self"]],[R[30]]]],[11,R[99],E,E,72,[[["pin"],["s"],[R[19]]],[[R[98],[R[20]]],["poll",[R[98]]]]]],[11,R[101],E,E,73,[[["self"]],[T]]],[11,R[100],E,E,73,[[["self"],[T]]]],[11,"into",E,E,73,[[],[U]]],[11,"from",E,E,73,[[[T]],[T]]],[11,R[25],E,E,73,[[[U]],[R[20]]]],[11,R[26],E,E,73,[[],[R[20]]]],[11,R[27],E,E,73,[[["self"]],[T]]],[11,R[29],E,E,73,[[["self"]],[T]]],[11,R[28],E,E,73,[[["self"]],[R[30]]]],[11,"into",E,E,74,[[],[U]]],[11,"from",E,E,74,[[[T]],[T]]],[11,R[25],E,E,74,[[[U]],[R[20]]]],[11,R[26],E,E,74,[[],[R[20]]]],[11,R[27],E,E,74,[[["self"]],[T]]],[11,R[29],E,E,74,[[["self"]],[T]]],[11,R[28],E,E,74,[[["self"]],[R[30]]]],[11,R[99],E,E,74,[[["pin"],["s"],[R[19]]],[[R[98],[R[20]]],["poll",[R[98]]]]]],[11,"into",R[339],E,75,[[],[U]]],[11,"from",E,E,75,[[[T]],[T]]],[11,R[25],E,E,75,[[[U]],[R[20]]]],[11,R[26],E,E,75,[[],[R[20]]]],[11,R[27],E,E,75,[[["self"]],[T]]],[11,R[29],E,E,75,[[["self"]],[T]]],[11,R[28],E,E,75,[[["self"]],[R[30]]]],[11,"into",E,E,76,[[],[U]]],[11,"from",E,E,76,[[[T]],[T]]],[11,R[25],E,E,76,[[[U]],[R[20]]]],[11,R[26],E,E,76,[[],[R[20]]]],[11,R[27],E,E,76,[[["self"]],[T]]],[11,R[29],E,E,76,[[["self"]],[T]]],[11,R[28],E,E,76,[[["self"]],[R[30]]]],[11,R[210],E,E,76,[[["f"],[R[19]],["pin"]],["poll"]]],[11,"into",R[356],E,77,[[],[U]]],[11,"from",E,E,77,[[[T]],[T]]],[11,R[103],E,E,77,[[["self"]],["string"]]],[11,R[25],E,E,77,[[[U]],[R[20]]]],[11,R[26],E,E,77,[[],[R[20]]]],[11,R[27],E,E,77,[[["self"]],[T]]],[11,R[29],E,E,77,[[["self"]],[T]]],[11,R[28],E,E,77,[[["self"]],[R[30]]]],[11,"into",E,E,78,[[],[U]]],[11,"from",E,E,78,[[[T]],[T]]],[11,R[103],E,E,78,[[["self"]],["string"]]],[11,R[25],E,E,78,[[[U]],[R[20]]]],[11,R[26],E,E,78,[[],[R[20]]]],[11,R[27],E,E,78,[[["self"]],[T]]],[11,R[29],E,E,78,[[["self"]],[T]]],[11,R[28],E,E,78,[[["self"]],[R[30]]]],[11,R[101],R[340],E,79,[[["self"]],[T]]],[11,R[100],E,E,79,[[["self"],[T]]]],[11,"into",E,E,79,[[],[U]]],[11,"from",E,E,79,[[[T]],[T]]],[11,R[25],E,E,79,[[[U]],[R[20]]]],[11,R[26],E,E,79,[[],[R[20]]]],[11,R[27],E,E,79,[[["self"]],[T]]],[11,R[29],E,E,79,[[["self"]],[T]]],[11,R[28],E,E,79,[[["self"]],[R[30]]]],[11,R[99],E,E,79,[[["pin"],["s"],[R[19]]],[[R[98],[R[20]]],["poll",[R[98]]]]]],[11,"into",E,E,80,[[],[U]]],[11,"from",E,E,80,[[[T]],[T]]],[11,R[25],E,E,80,[[[U]],[R[20]]]],[11,R[26],E,E,80,[[],[R[20]]]],[11,R[27],E,E,80,[[["self"]],[T]]],[11,R[29],E,E,80,[[["self"]],[T]]],[11,R[28],E,E,80,[[["self"]],[R[30]]]],[11,"into",E,E,81,[[],[U]]],[11,"from",E,E,81,[[[T]],[T]]],[11,R[25],E,E,81,[[[U]],[R[20]]]],[11,R[26],E,E,81,[[],[R[20]]]],[11,R[27],E,E,81,[[["self"]],[T]]],[11,R[29],E,E,81,[[["self"]],[T]]],[11,R[28],E,E,81,[[["self"]],[R[30]]]],[11,"load",E,E,81,[[["self"]]]],[11,"load",E,E,81,[[["self"]],["dynguard"]]],[11,"into",R[357],E,82,[[],[U]]],[11,"from",E,E,82,[[[T]],[T]]],[11,R[103],E,E,82,[[["self"]],["string"]]],[11,R[25],E,E,82,[[[U]],[R[20]]]],[11,R[26],E,E,82,[[],[R[20]]]],[11,R[27],E,E,82,[[["self"]],[T]]],[11,R[29],E,E,82,[[["self"]],[T]]],[11,R[28],E,E,82,[[["self"]],[R[30]]]],[11,"into",R[338],E,83,[[],[U]]],[11,"from",E,E,83,[[[T]],[T]]],[11,R[25],E,E,83,[[[U]],[R[20]]]],[11,R[26],E,E,83,[[],[R[20]]]],[11,R[27],E,E,83,[[["self"]],[T]]],[11,R[29],E,E,83,[[["self"]],[T]]],[11,R[28],E,E,83,[[["self"]],[R[30]]]],[11,"into",E,E,84,[[],[U]]],[11,"from",E,E,84,[[[T]],[T]]],[11,R[103],E,E,84,[[["self"]],["string"]]],[11,R[25],E,E,84,[[[U]],[R[20]]]],[11,R[26],E,E,84,[[],[R[20]]]],[11,R[27],E,E,84,[[["self"]],[T]]],[11,R[29],E,E,84,[[["self"]],[T]]],[11,R[28],E,E,84,[[["self"]],[R[30]]]],[11,"load",E,E,84,[[["self"]]]],[11,"load",E,E,84,[[["self"]],["dynguard"]]],[11,"into",R[341],E,85,[[],[U]]],[11,"from",E,E,85,[[[T]],[T]]],[11,R[25],E,E,85,[[[U]],[R[20]]]],[11,R[26],E,E,85,[[],[R[20]]]],[11,R[27],E,E,85,[[["self"]],[T]]],[11,R[29],E,E,85,[[["self"]],[T]]],[11,R[28],E,E,85,[[["self"]],[R[30]]]],[11,R[99],E,E,85,[[["pin"],["s"],[R[19]]],[[R[98],[R[20]]],["poll",[R[98]]]]]],[11,"into",R[358],E,86,[[],[U]]],[11,"from",E,E,86,[[[T]],[T]]],[11,R[25],E,E,86,[[[U]],[R[20]]]],[11,R[26],E,E,86,[[],[R[20]]]],[11,R[27],E,E,86,[[["self"]],[T]]],[11,R[29],E,E,86,[[["self"]],[T]]],[11,R[28],E,E,86,[[["self"]],[R[30]]]],[11,R[101],E,E,87,[[["self"]],[T]]],[11,R[100],E,E,87,[[["self"],[T]]]],[11,"into",E,E,87,[[],[U]]],[11,"from",E,E,87,[[[T]],[T]]],[11,R[25],E,E,87,[[[U]],[R[20]]]],[11,R[26],E,E,87,[[],[R[20]]]],[11,R[27],E,E,87,[[["self"]],[T]]],[11,R[29],E,E,87,[[["self"]],[T]]],[11,R[28],E,E,87,[[["self"]],[R[30]]]],[11,"into",R[341],E,88,[[],[U]]],[11,"from",E,E,88,[[[T]],[T]]],[11,R[25],E,E,88,[[[U]],[R[20]]]],[11,R[26],E,E,88,[[],[R[20]]]],[11,R[27],E,E,88,[[["self"]],[T]]],[11,R[29],E,E,88,[[["self"]],[T]]],[11,R[28],E,E,88,[[["self"]],[R[30]]]],[11,R[210],E,E,88,[[["f"],[R[19]],["pin"]],["poll"]]],[11,R[99],E,E,88,[[["pin"],["s"],[R[19]]],[[R[98],[R[20]]],["poll",[R[98]]]]]],[11,"into",R[359],E,89,[[],[U]]],[11,"from",E,E,89,[[[T]],[T]]],[11,R[103],E,E,89,[[["self"]],["string"]]],[11,R[25],E,E,89,[[[U]],[R[20]]]],[11,R[26],E,E,89,[[],[R[20]]]],[11,R[27],E,E,89,[[["self"]],[T]]],[11,R[29],E,E,89,[[["self"]],[T]]],[11,R[28],E,E,89,[[["self"]],[R[30]]]],[11,"into",R[341],E,90,[[],[U]]],[11,"from",E,E,90,[[[T]],[T]]],[11,R[25],E,E,90,[[[U]],[R[20]]]],[11,R[26],E,E,90,[[],[R[20]]]],[11,R[27],E,E,90,[[["self"]],[T]]],[11,R[29],E,E,90,[[["self"]],[T]]],[11,R[28],E,E,90,[[["self"]],[R[30]]]],[11,"into",E,E,91,[[],[U]]],[11,"from",E,E,91,[[[T]],[T]]],[11,R[103],E,E,91,[[["self"]],["string"]]],[11,R[25],E,E,91,[[[U]],[R[20]]]],[11,R[26],E,E,91,[[],[R[20]]]],[11,R[27],E,E,91,[[["self"]],[T]]],[11,R[29],E,E,91,[[["self"]],[T]]],[11,R[28],E,E,91,[[["self"]],[R[30]]]],[11,"into",E,E,92,[[],[U]]],[11,"from",E,E,92,[[[T]],[T]]],[11,R[25],E,E,92,[[[U]],[R[20]]]],[11,R[26],E,E,92,[[],[R[20]]]],[11,R[27],E,E,92,[[["self"]],[T]]],[11,R[29],E,E,92,[[["self"]],[T]]],[11,R[28],E,E,92,[[["self"]],[R[30]]]],[11,R[101],R[360],E,93,[[["self"]],[T]]],[11,R[100],E,E,93,[[["self"],[T]]]],[11,"into",E,E,93,[[],[U]]],[11,"from",E,E,93,[[[T]],[T]]],[11,R[25],E,E,93,[[[U]],[R[20]]]],[11,R[26],E,E,93,[[],[R[20]]]],[11,R[27],E,E,93,[[["self"]],[T]]],[11,R[29],E,E,93,[[["self"]],[T]]],[11,R[28],E,E,93,[[["self"]],[R[30]]]],[11,"into",E,E,94,[[],[U]]],[11,"from",E,E,94,[[[T]],[T]]],[11,R[103],E,E,94,[[["self"]],["string"]]],[11,R[25],E,E,94,[[[U]],[R[20]]]],[11,R[26],E,E,94,[[],[R[20]]]],[11,R[27],E,E,94,[[["self"]],[T]]],[11,R[29],E,E,94,[[["self"]],[T]]],[11,R[28],E,E,94,[[["self"]],[R[30]]]],[11,"into",E,E,95,[[],[U]]],[11,"from",E,E,95,[[[T]],[T]]],[11,R[25],E,E,95,[[[U]],[R[20]]]],[11,R[26],E,E,95,[[],[R[20]]]],[11,R[27],E,E,95,[[["self"]],[T]]],[11,R[29],E,E,95,[[["self"]],[T]]],[11,R[28],E,E,95,[[["self"]],[R[30]]]],[11,"into",R[343],E,23,[[],[U]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[25],E,E,23,[[[U]],[R[20]]]],[11,R[26],E,E,23,[[],[R[20]]]],[11,R[27],E,E,23,[[["self"]],[T]]],[11,R[29],E,E,23,[[["self"]],[T]]],[11,R[28],E,E,23,[[["self"]],[R[30]]]],[11,"into",E,E,25,[[],[U]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[25],E,E,25,[[[U]],[R[20]]]],[11,R[26],E,E,25,[[],[R[20]]]],[11,R[27],E,E,25,[[["self"]],[T]]],[11,R[29],E,E,25,[[["self"]],[T]]],[11,R[28],E,E,25,[[["self"]],[R[30]]]],[11,R[101],E,E,24,[[["self"]],[T]]],[11,R[100],E,E,24,[[["self"],[T]]]],[11,"into",E,E,24,[[],[U]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[25],E,E,24,[[[U]],[R[20]]]],[11,R[26],E,E,24,[[],[R[20]]]],[11,R[27],E,E,24,[[["self"]],[T]]],[11,R[29],E,E,24,[[["self"]],[T]]],[11,R[28],E,E,24,[[["self"]],[R[30]]]],[11,R[101],R[361],E,96,[[["self"]],[T]]],[11,R[100],E,E,96,[[["self"],[T]]]],[11,"into",E,E,96,[[],[U]]],[11,"from",E,E,96,[[[T]],[T]]],[11,R[25],E,E,96,[[[U]],[R[20]]]],[11,R[26],E,E,96,[[],[R[20]]]],[11,R[27],E,E,96,[[["self"]],[T]]],[11,R[29],E,E,96,[[["self"]],[T]]],[11,R[28],E,E,96,[[["self"]],[R[30]]]],[11,"into",E,E,20,[[],[U]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[25],E,E,20,[[[U]],[R[20]]]],[11,R[26],E,E,20,[[],[R[20]]]],[11,R[27],E,E,20,[[["self"]],[T]]],[11,R[29],E,E,20,[[["self"]],[T]]],[11,R[28],E,E,20,[[["self"]],[R[30]]]],[11,R[101],E,E,21,[[["self"]],[T]]],[11,R[100],E,E,21,[[["self"],[T]]]],[11,"into",E,E,21,[[],[U]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[25],E,E,21,[[[U]],[R[20]]]],[11,R[26],E,E,21,[[],[R[20]]]],[11,R[27],E,E,21,[[["self"]],[T]]],[11,R[29],E,E,21,[[["self"]],[T]]],[11,R[28],E,E,21,[[["self"]],[R[30]]]],[11,"into",E,E,22,[[],[U]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[25],E,E,22,[[[U]],[R[20]]]],[11,R[26],E,E,22,[[],[R[20]]]],[11,R[27],E,E,22,[[["self"]],[T]]],[11,R[29],E,E,22,[[["self"]],[T]]],[11,R[28],E,E,22,[[["self"]],[R[30]]]],[11,"into",E,E,97,[[],[U]]],[11,"from",E,E,97,[[[T]],[T]]],[11,R[103],E,E,97,[[["self"]],["string"]]],[11,R[25],E,E,97,[[[U]],[R[20]]]],[11,R[26],E,E,97,[[],[R[20]]]],[11,R[27],E,E,97,[[["self"]],[T]]],[11,R[29],E,E,97,[[["self"]],[T]]],[11,R[28],E,E,97,[[["self"]],[R[30]]]],[11,"from",R[350],"Converts a [`NulError`] into a [`io::Error`].",44,[[["nulerror"]],["error"]]],[11,"from",E,"Converts an [`ErrorKind`] into an [`Error`].",44,[[[R[362]]],["error"]]],[11,"from",E,E,44,[[["intoinnererror"]],["error"]]],[11,"hash",E,E,12,[[["self"],["__h"]]]],[11,"eq",E,E,12,[[["self"],[R[362]]],["bool"]]],[11,"description",E,E,44,[[["self"]],["str"]]],[11,"cause",E,E,44,[[["self"]],[[R[98],["error"]],["error"]]]],[11,"source",E,E,44,[[["self"]],[["error"],[R[98],["error"]]]]],[11,"fmt",E,E,44,[[["self"],[R[43]]],[[R[20],["error"]],["error"]]]],[11,"cmp",E,E,12,[[["self"],[R[362]]],[R[109]]]],[11,"clone",E,E,12,[[["self"]],[R[362]]]],[11,"fmt",E,E,44,[[["self"],[R[43]]],[[R[20],["error"]],["error"]]]],[11,"fmt",E,E,12,[[["self"],[R[43]]],[[R[20],["error"]],["error"]]]],[11,R[108],E,E,12,[[["self"],[R[362]]],[[R[109]],[R[98],[R[109]]]]]],[11,R[792],R[341],E,92,[[["self"]],["bool"]]],[11,"clone",R[358],E,87,[[["self"]],["key"]]],[11,R[148],R[341],E,85,[[],[R[221]]]],[11,"fmt",E,E,91,[[["self"],[R[43]]],[[R[20],["error"]],["error"]]]],[11,"fmt",R[359],E,89,[[["self"],[R[43]]],[[R[20],["error"]],["error"]]]],[11,"poll",R[341],E,88,[[[R[19]],[R[363]],["pin",[R[363]]]],["poll"]]],[11,"poll",E,E,90,[[["delay"],["pin",["delay"]],[R[19]]],["poll"]]],[11,"from",R[350],E,44,[[["elapsed"]],["error"]]],[11,R[110],R[341],E,88,[[[R[19]],[R[363]],["pin",[R[363]]]],[["poll",[R[98]]],[R[98]]]]],[11,R[110],E,E,92,[[["pin",[R[373]]],[R[373]],[R[19]]],[["poll",[R[98]]],[R[98]]]]],[11,R[110],E,E,85,[[["pin",[R[221]]],[R[19]],[R[221]]],[["poll",[R[98]]],[R[98]]]]],[11,"fmt",E,E,85,[[["self"],[R[43]]],[[R[20],["error"]],["error"]]]],[11,"fmt",R[358],E,87,[[["self"],[R[43]]],[[R[20],["error"]],["error"]]]],[11,"fmt",E,E,86,[[["self"],[R[43]]],[[R[20],["error"]],["error"]]]],[11,"fmt",R[341],E,91,[[["self"],[R[43]]],[[R[20],["error"]],["error"]]]],[11,"fmt",E,E,90,[[["self"],[R[43]]],[[R[20],["error"]],["error"]]]],[11,"fmt",E,E,88,[[["self"],[R[43]]],[[R[20],["error"]],["error"]]]],[11,"fmt",E,E,92,[[["self"],[R[43]]],[[R[20],["error"]],["error"]]]],[11,"fmt",R[359],E,89,[[["self"],[R[43]]],[[R[20],["error"]],["error"]]]],[11,"clone",R[337],E,73,[[["self"]],[R[365]]]],[11,"clone",E,E,71,[[["self"]],["sender"]]],[11,"clone",R[340],E,79,[[["self"]],[R[364]]]],[11,R[148],R[338],E,83,[[],["mutex"]]],[11,"fmt",R[356],E,78,[[["self"],[R[43]]],[[R[20],["error"]],["error"]]]],[11,"fmt",R[357],E,82,[[["self"],[R[43]]],[[R[20],["error"]],["error"]]]],[11,"fmt",R[355],E,66,[[["self"],[R[43]]],[[R[20],["error"]],["error"]]]],[11,"fmt",E,E,65,[[["self"],[R[43]]],[[R[20],["error"]],["error"]]]],[11,"fmt",E,E,70,[[["self"],[R[43]]],[[R[20],["error"]],["error"]]]],[11,"fmt",R[338],E,84,[[["self"],[R[43]]],[[R[20],["error"]],["error"]]]],[11,"fmt",R[355],E,68,[[["self"],[R[43]]],[[R[20],["error"]],["error"]]]],[11,"fmt",E,E,67,[[["self"],[R[43]]],[[R[20],["error"]],["error"]]]],[11,"fmt",E,E,69,[[["self"],[R[43]]],[[R[20],["error"]],["error"]]]],[11,"fmt",R[356],E,77,[[["self"],[R[43]]],[[R[20],["error"]],["error"]]]],[11,"poll",R[339],E,76,[[["pin",[R[364]]],[R[19]],[R[364]]],["poll"]]],[11,"from",R[355],E,69,[[],[R[131]]]],[11,"from",R[338],E,83,[[[T]],["mutex"]]],[11,"from",R[355],E,65,[[],[R[128]]]],[11,"deref",R[338],E,84,[[["self"]]]],[11,"deref",R[340],E,81,[[["self"]],[T]]],[11,R[111],R[337],E,73,[[[R[365]],["pin",[R[365]]],[R[19]]],[[R[20]],["poll",[R[20]]]]]],[11,R[112],E,E,73,[[[R[365]],["pin",[R[365]]],[T]],[R[20]]]],[11,R[38],E,E,73,[[[R[365]],["pin",[R[365]]],[R[19]]],[[R[20]],["poll",[R[20]]]]]],[11,R[113],E,E,73,[[[R[365]],["pin",[R[365]]],[R[19]]],[[R[20]],["poll",[R[20]]]]]],[11,R[111],R[340],E,80,[[["pin",["sender"]],["sender"],[R[19]]],[["poll",[R[20]]],[R[20]]]]],[11,R[112],E,E,80,[[["pin",["sender"]],["sender"],[T]],[R[20]]]],[11,R[38],E,E,80,[[["pin",["sender"]],["sender"],[R[19]]],[["poll",[R[20]]],[R[20]]]]],[11,R[113],E,E,80,[[["pin",["sender"]],["sender"],[R[19]]],[["poll",[R[20]]],[R[20]]]]],[11,R[111],R[337],E,71,[[["pin",["sender"]],["sender"],[R[19]]],[["poll",[R[20]]],[R[20]]]]],[11,R[112],E,E,71,[[["pin",["sender"]],["sender"],[T]],[R[20]]]],[11,R[38],E,E,71,[[["pin",["sender"]],["sender"],[R[19]]],[["poll",[R[20]]],[R[20]]]]],[11,R[113],E,E,71,[[["pin",["sender"]],["sender"],[R[19]]],[["poll",[R[20]]],[R[20]]]]],[11,R[110],R[340],E,79,[[[R[364]],["pin",[R[364]]],[R[19]]],[["poll",[R[98]]],[R[98]]]]],[11,R[110],R[337],E,72,[[[R[19]],["pin",[R[366]]],[R[366]]],[["poll",[R[98]]],[R[98]]]]],[11,R[110],E,E,74,[[[R[19]],[R[364]],["pin",[R[364]]]],[["poll",[R[98]]],[R[98]]]]],[11,"drop",R[339],E,76,[[["self"]]]],[11,"drop",R[340],E,79,[[["self"]]]],[11,"drop",R[339],E,75,[[["self"]]]],[11,"drop",R[340],E,80,[[["self"]]]],[11,"drop",R[338],E,84,[[["self"]]]],[11,R[742],E,E,84,[[["self"]]]],[11,"fmt",R[355],E,67,[[["self"],[R[43]]],[[R[20],["error"]],["error"]]]],[11,"fmt",R[356],E,78,[[["self"],[R[43]]],[[R[20],["error"]],["error"]]]],[11,"fmt",R[337],E,74,[[["self"],[R[43]]],[[R[20],["error"]],["error"]]]],[11,"fmt",R[338],E,64,[[["self"],[R[43]]],[[R[20],["error"]],["error"]]]],[11,"fmt",R[337],E,71,[[["self"],[R[43]]],[[R[20],["error"]],["error"]]]],[11,"fmt",R[340],E,79,[[["self"],[R[43]]],[[R[20],["error"]],["error"]]]],[11,"fmt",R[355],E,66,[[["self"],[R[43]]],[[R[20],["error"]],["error"]]]],[11,"fmt",R[338],E,84,[[["self"],[R[43]]],[[R[20],["error"]],["error"]]]],[11,"fmt",R[339],E,75,[[["self"],[R[43]]],[[R[20],["error"]],["error"]]]],[11,"fmt",R[340],E,80,[[["self"],[R[43]]],[[R[20],["error"]],["error"]]]],[11,"fmt",R[355],E,70,[[["self"],[R[43]]],[[R[20],["error"]],["error"]]]],[11,"fmt",R[337],E,73,[[["self"],[R[43]]],[[R[20],["error"]],["error"]]]],[11,"fmt",R[340],E,81,[[["self"],[R[43]]],[[R[20],["error"]],["error"]]]],[11,"fmt",R[338],E,83,[[["self"],[R[43]]],[[R[20],["error"]],["error"]]]],[11,"fmt",R[356],E,77,[[["self"],[R[43]]],[[R[20],["error"]],["error"]]]],[11,"fmt",R[355],E,69,[[["self"],[R[43]]],[[R[20],["error"]],["error"]]]],[11,"fmt",R[339],E,76,[[["self"],[R[43]]],[[R[20],["error"]],["error"]]]],[11,"fmt",R[355],E,68,[[["self"],[R[43]]],[[R[20],["error"]],["error"]]]],[11,"fmt",R[337],E,72,[[["self"],[R[43]]],[[R[20],["error"]],["error"]]]],[11,"fmt",R[357],E,82,[[["self"],[R[43]]],[[R[20],["error"]],["error"]]]],[11,"fmt",R[355],E,65,[[["self"],[R[43]]],[[R[20],["error"]],["error"]]]],[11,"spawn",R[360],E,93,[[["self"],[T]],[[R[20],[R[178]]],[R[178]]]]],[11,"status",E,E,93,[[["self"]],[[R[20],[R[178]]],[R[178]]]]],[11,"spawn",R[361],E,96,[[["self"],["f"]],[[R[20],[R[178]]],[R[178]]]]],[11,"clone",E,E,96,[[["self"]],[R[192]]]],[11,"clone",R[360],E,93,[[["self"]],[R[191]]]],[11,"fmt",E,E,94,[[["self"],[R[43]]],[[R[20],["error"]],["error"]]]],[11,"spawn",R[361],E,96,[[["self"],["pin",["box"]],["box",["future"]]],[[R[20],[R[178]]],[R[178]]]]],[11,"spawn",R[360],E,93,[[["self"],["pin",["box"]],["box",["future"]]],[[R[20],[R[178]]],[R[178]]]]],[11,"status",E,E,93,[[["self"]],[[R[20],[R[178]]],[R[178]]]]],[11,"fmt",R[361],E,96,[[["self"],[R[43]]],[[R[20],["error"]],["error"]]]],[11,"fmt",R[360],E,93,[[["self"],[R[43]]],[[R[20],["error"]],["error"]]]],[11,"fmt",E,E,94,[[["self"],[R[43]]],[[R[20],["error"]],["error"]]]],[11,"eq",R[307],E,33,[[["self"],[R[107]]],["bool"]]],[11,"ne",E,E,33,[[["self"],[R[107]]],["bool"]]],[11,"eq",E,E,29,[[["self"],[R[106]]],["bool"]]],[11,"ne",E,E,29,[[["self"],[R[106]]],["bool"]]],[11,R[110],E,E,31,[[[R[90]],[R[19]],["pin",[R[90]]]],[[R[98]],["poll",[R[98]]]]]],[11,R[110],E,E,32,[[["pin",[R[92]]],[R[92]],[R[19]]],[["poll",[R[98]]],[R[98]]]]],[11,R[110],E,E,30,[[[R[97]],["pin",[R[97]]],[R[19]]],[[R[98]],["poll",[R[98]]]]]],[11,"clone",R[349],E,26,[[["self"]],[R[88]]]],[11,"clone",R[307],E,29,[[["self"]],[R[106]]]],[11,"clone",E,E,33,[[["self"]],[R[107]]]],[11,R[111],E,E,30,[[[R[97]],["pin",[R[97]]],[R[19]]],[[R[20]],["poll",[R[20]]]]]],[11,R[112],E,E,30,[[[R[97]],["pin",[R[97]]],["i"]],[R[20]]]],[11,R[38],E,E,30,[[[R[97]],["pin",[R[97]]],[R[19]]],[[R[20]],["poll",[R[20]]]]]],[11,R[113],E,E,30,[[[R[97]],["pin",[R[97]]],[R[19]]],[[R[20]],["poll",[R[20]]]]]],[11,R[111],E,E,32,[[[R[19]],["pin",[R[92]]],[R[92]]],[[R[20]],["poll",[R[20]]]]]],[11,R[112],E,E,32,[[["i"],["pin",[R[92]]],[R[92]]],[R[20]]]],[11,R[38],E,E,32,[[[R[19]],["pin",[R[92]]],[R[92]]],[[R[20]],["poll",[R[20]]]]]],[11,R[113],E,E,32,[[[R[19]],["pin",[R[92]]],[R[92]]],[[R[20]],["poll",[R[20]]]]]],[11,R[111],E,E,31,[[[R[90]],[R[19]],["pin",[R[90]]]],[["poll",[R[20]]],[R[20]]]]],[11,R[112],E,E,31,[[[R[90]],["i"],["pin",[R[90]]]],[R[20]]]],[11,R[38],E,E,31,[[[R[90]],[R[19]],["pin",[R[90]]]],[["poll",[R[20]]],[R[20]]]]],[11,R[113],E,E,31,[[[R[90]],[R[19]],["pin",[R[90]]]],[["poll",[R[20]]],[R[20]]]]],[11,R[148],E,E,29,[[],[R[106]]]],[11,R[148],E,E,33,[[],[R[107]]]],[11,R[148],E,E,28,[[],[R[91]]]],[11,R[148],R[349],E,26,[[],[R[88]]]],[11,"hash",R[307],E,33,[[["self"],["__h"]]]],[11,"hash",E,E,29,[[["self"],["__h"]]]],[11,"fmt",E,E,3,[[["self"],[R[43]]],[[R[20],["error"]],["error"]]]],[11,"fmt",E,E,27,[[["self"],[R[43]]],[[R[20],["error"]],["error"]]]],[11,R[108],E,E,33,[[["self"],[R[107]]],[[R[109]],[R[98],[R[109]]]]]],[11,"lt",E,E,33,[[["self"],[R[107]]],["bool"]]],[11,"le",E,E,33,[[["self"],[R[107]]],["bool"]]],[11,"gt",E,E,33,[[["self"],[R[107]]],["bool"]]],[11,"ge",E,E,33,[[["self"],[R[107]]],["bool"]]],[11,R[108],E,E,29,[[["self"],[R[106]]],[[R[109]],[R[98],[R[109]]]]]],[11,"lt",E,E,29,[[["self"],[R[106]]],["bool"]]],[11,"le",E,E,29,[[["self"],[R[106]]],["bool"]]],[11,"gt",E,E,29,[[["self"],[R[106]]],["bool"]]],[11,"ge",E,E,29,[[["self"],[R[106]]],["bool"]]],[11,"decode",E,E,29,[[["self"],[R[94]]],[["error"],[R[20],[R[98],"error"]],[R[98],[R[94]]]]]],[11,"decode",E,E,33,[[["self"],[R[94]]],[[R[104]],[R[20],[R[98],R[104]]],[R[98],["string"]]]]],[11,R[105],E,E,33,[[["self"],[R[94]]],[[R[104]],[R[20],[R[98],R[104]]],[R[98],["string"]]]]],[11,"decode",E,E,28,[[["self"],[R[94]]],[["error"],[R[20],[R[98],"error"]],[R[98],[R[94]]]]]],[11,"from",E,E,3,[[["error"]],[R[104]]]],[11,"cmp",E,E,33,[[["self"],[R[107]]],[R[109]]]],[11,"cmp",E,E,29,[[["self"],[R[106]]],[R[109]]]],[11,"encode",E,E,33,[[["self"],["string"],[R[94]]],[[R[104]],[R[20],[R[104]]]]]],[11,"encode",E,E,28,[[["self"],["bytes"],[R[94]]],[[R[20],["error"]],["error"]]]],[11,"encode",E,E,29,[[["self"],["bytes"],[R[94]]],[[R[20],["error"]],["error"]]]],[11,"fmt",E,E,2,[[["self"],[R[43]]],[[R[20],["error"]],["error"]]]],[11,"fmt",E,E,3,[[["self"],[R[43]]],[[R[20],["error"]],["error"]]]],[11,"fmt",E,E,31,[[["self"],[R[43]]],[[R[20],["error"]],["error"]]]],[11,"fmt",E,E,30,[[["self"],[R[43]]],[[R[20],["error"]],["error"]]]],[11,"fmt",E,E,29,[[["self"],[R[43]]],[[R[20],["error"]],["error"]]]],[11,"fmt",E,E,27,[[["self"],[R[43]]],[[R[20],["error"]],["error"]]]],[11,"fmt",R[349],E,26,[[["self"],[R[43]]],[[R[20],["error"]],["error"]]]],[11,"fmt",R[307],E,28,[[["self"],[R[43]]],[[R[20],["error"]],["error"]]]],[11,"fmt",E,E,33,[[["self"],[R[43]]],[[R[20],["error"]],["error"]]]],[11,"fmt",E,E,32,[[["self"],[R[43]]],[[R[20],["error"]],["error"]]]],[11,R[32],R[350],E,39,[[[R[19]],["pin",[R[42]]],[R[42]]],[[R[20],["error"]],["poll",[R[20]]]]]],[11,R[33],E,E,39,[[[R[1]],["pin",[R[42]]],[R[42]]]]],[11,R[32],E,E,41,[[["pin",["empty"]],["empty"],[R[19]]],[[R[20],["error"]],["poll",[R[20]]]]]],[11,R[33],E,E,41,[[["pin",["empty"]],["empty"],[R[1]]]]],[11,R[32],E,E,40,[[[R[41]],["pin",[R[41]]],[R[19]]],[[R[20],["error"]],["poll",[R[20]]]]]],[11,R[33],E,E,40,[[[R[41]],["pin",[R[41]]],[R[1]]]]],[11,R[37],E,E,39,[[[R[19]],[R[42]],["pin",[R[42]]]],[[R[20],[R[1],"error"]],["poll",[R[20]]]]]],[11,R[38],E,E,39,[[[R[19]],["pin",[R[42]]],[R[42]]],[["poll",[R[20]]],[R[20],["error"]]]]],[11,R[39],E,E,39,[[[R[19]],["pin",[R[42]]],[R[42]]],[["poll",[R[20]]],[R[20],["error"]]]]],[11,R[37],E,E,40,[[[R[19]],[R[41]],["pin",[R[41]]]],[[R[20],[R[1],"error"]],["poll",[R[20]]]]]],[11,R[38],E,E,40,[[[R[41]],["pin",[R[41]]],[R[19]]],[["poll",[R[20]]],[R[20],["error"]]]]],[11,R[39],E,E,40,[[[R[41]],["pin",[R[41]]],[R[19]]],[["poll",[R[20]]],[R[20],["error"]]]]],[11,R[37],E,E,43,[[[R[19]],["pin",["sink"]],["sink"]],[[R[20],[R[1],"error"]],["poll",[R[20]]]]]],[11,R[38],E,E,43,[[["pin",["sink"]],[R[19]],["sink"]],[["poll",[R[20]]],[R[20],["error"]]]]],[11,R[39],E,E,43,[[["pin",["sink"]],[R[19]],["sink"]],[["poll",[R[20]]],[R[20],["error"]]]]],[11,R[34],E,E,42,[[["pin",["repeat"]],[R[19]],["repeat"]],[[R[20],[R[1],"error"]],["poll",[R[20]]]]]],[11,R[34],E,E,40,[[[R[19]],[R[41]],["pin",[R[41]]]],[[R[20],[R[1],"error"]],["poll",[R[20]]]]]],[11,R[35],E,E,40,[[["self"]],["bool"]]],[11,R[34],E,E,39,[[[R[19]],[R[42]],["pin",[R[42]]]],[[R[20],[R[1],"error"]],["poll",[R[20]]]]]],[11,R[35],E,E,39,[[["self"]],["bool"]]],[11,R[34],E,E,41,[[["pin",["empty"]],["empty"],[R[19]]],[[R[20],[R[1],"error"]],["poll",[R[20]]]]]],[11,"fmt",E,E,43,[[["self"],[R[43]]],[[R[20],["error"]],["error"]]]],[11,"fmt",E,E,40,[[["self"],[R[43]]],[[R[20],["error"]],["error"]]]],[11,"fmt",E,E,41,[[["self"],[R[43]]],[[R[20],["error"]],["error"]]]],[11,"fmt",E,E,39,[[["self"],[R[43]]],[[R[20],["error"]],["error"]]]],[11,"fmt",E,E,42,[[["self"],[R[43]]],[[R[20],["error"]],["error"]]]],[11,"clone",R[310],E,35,[[["self"]],[R[214]]]],[11,R[148],E,E,35,[[],[R[214]]]],[11,R[34],E,E,34,[[["pin",["file"]],[R[19]],["file"]],[[R[20],[R[1],"error"]],["poll",[R[20]]]]]],[11,R[34],R[350],E,37,[[[R[19]],["pin",["stdin"]],["stdin"]],[[R[20],[R[1],"error"]],["poll",[R[20]]]]]],[11,"from",R[310],E,35,[[[R[214]]],[R[214]]]],[11,"from",E,E,34,[[["file"]],["file"]]],[11,R[37],R[350],E,36,[[["pin",["stderr"]],["stderr"],[R[19]]],[[R[20],[R[1],"error"]],["poll",[R[20]]]]]],[11,R[38],E,E,36,[[["pin",["stderr"]],["stderr"],[R[19]]],[["poll",[R[20]]],[R[20],["error"]]]]],[11,R[39],E,E,36,[[["pin",["stderr"]],["stderr"],[R[19]]],[["poll",[R[20]]],[R[20],["error"]]]]],[11,R[37],E,E,38,[[["stdout"],[R[19]],["pin",["stdout"]]],[[R[20],[R[1],"error"]],["poll",[R[20]]]]]],[11,R[38],E,E,38,[[[R[19]],["stdout"],["pin",["stdout"]]],[["poll",[R[20]]],[R[20],["error"]]]]],[11,R[39],E,E,38,[[[R[19]],["stdout"],["pin",["stdout"]]],[["poll",[R[20]]],[R[20],["error"]]]]],[11,R[37],R[310],E,34,[[["pin",["file"]],[R[19]],["file"]],[[R[20],[R[1],"error"]],["poll",[R[20]]]]]],[11,R[38],E,E,34,[[["pin",["file"]],[R[19]],["file"]],[["poll",[R[20]]],[R[20],["error"]]]]],[11,R[39],E,E,34,[[["pin",["file"]],[R[19]],["file"]],[["poll",[R[20]]],[R[20],["error"]]]]],[11,"fmt",R[350],E,37,[[["self"],[R[43]]],[[R[20],["error"]],["error"]]]],[11,"fmt",R[310],E,35,[[["self"],[R[43]]],[[R[20],["error"]],["error"]]]],[11,"fmt",E,E,34,[[["self"],[R[43]]],[[R[20],["error"]],["error"]]]],[11,"fmt",R[350],E,38,[[["self"],[R[43]]],[[R[20],["error"]],["error"]]]],[11,"fmt",E,E,36,[[["self"],[R[43]]],[[R[20],["error"]],["error"]]]],[11,R[34],R[354],E,62,[[[R[367]],[R[19]],["pin",[R[367]]]],[[R[20],[R[1],"error"]],["poll",[R[20]]]]]],[11,R[35],R[312],E,46,[[["self"]],["bool"]]],[11,R[34],E,E,46,[[[R[19]],["pin",[R[251]]],[R[251]]],[[R[20],[R[1],"error"]],["poll",[R[20]]]]]],[11,R[36],E,E,46,[[[R[19]],["b"],["pin",[R[251]]],[R[251]]],[[R[20],[R[1],"error"]],["poll",[R[20]]]]]],[11,R[34],R[354],E,60,[[["pin",[R[368]]],[R[19]],[R[368]]],[[R[20],[R[1],"error"]],["poll",[R[20]]]]]],[11,R[35],R[351],E,52,[[["self"]],["bool"]]],[11,R[34],E,E,52,[[[R[19]],["pin",[R[369]]],[R[369]]],[[R[20],[R[1],"error"]],["poll",[R[20]]]]]],[11,R[36],E,E,52,[[[R[19]],["b"],["pin",[R[369]]],[R[369]]],[[R[20],[R[1],"error"]],["poll",[R[20]]]]]],[11,R[35],R[318],E,51,[[["self"]],["bool"]]],[11,R[34],E,E,51,[[[R[19]],["pin",[R[273]]],[R[273]]],[[R[20],[R[1],"error"]],["poll",[R[20]]]]]],[11,R[36],E,E,51,[[[R[19]],["pin",[R[273]]],["b"],[R[273]]],[[R[20],[R[1],"error"]],["poll",[R[20]]]]]],[11,R[35],R[353],E,57,[[["self"]],["bool"]]],[11,R[34],E,E,57,[[["pin",[R[369]]],[R[19]],[R[369]]],[[R[20],[R[1],"error"]],["poll",[R[20]]]]]],[11,R[36],E,E,57,[[["pin",[R[369]]],[R[19]],["b"],[R[369]]],[[R[20],[R[1],"error"]],["poll",[R[20]]]]]],[11,R[110],R[316],E,47,[[[R[19]],["pin",[R[370]]],[R[370]]],[["poll",[R[98]]],[R[98]]]]],[11,R[110],R[312],E,54,[[[R[270]],[R[19]],["pin",[R[270]]]],[["poll",[R[98]]],[R[98]]]]],[11,"fmt",R[352],E,13,[[["self"],[R[43]]],[[R[20],["error"]],["error"]]]],[11,"poll",R[354],E,59,[[[R[19]],["child"],["pin",["child"]]],["poll"]]],[11,R[111],R[316],E,47,[[[R[19]],["pin",[R[370]]],[R[370]]],[[R[20]],["poll",[R[20]]]]]],[11,R[112],E,E,47,[[["pin",[R[370]]],[R[370]]],[R[20]]]],[11,R[38],E,E,47,[[[R[19]],["pin",[R[370]]],[R[370]]],[[R[20]],["poll",[R[20]]]]]],[11,R[113],E,E,47,[[[R[19]],["pin",[R[370]]],[R[370]]],[[R[20]],["poll",[R[20]]]]]],[11,R[37],R[354],E,61,[[[R[371]],[R[19]],["pin",[R[371]]]],[[R[20],[R[1],"error"]],["poll",[R[20]]]]]],[11,R[38],E,E,61,[[[R[371]],["pin",[R[371]]],[R[19]]],[["poll",[R[20]]],[R[20],["error"]]]]],[11,R[39],E,E,61,[[[R[371]],["pin",[R[371]]],[R[19]]],[["poll",[R[20]]],[R[20],["error"]]]]],[11,R[37],R[312],E,46,[[[R[19]],["pin",[R[251]]],[R[251]]],[[R[20],[R[1],"error"]],["poll",[R[20]]]]]],[11,R[38],E,E,46,[[["pin",[R[251]]],[R[251]],[R[19]]],[["poll",[R[20]]],[R[20],["error"]]]]],[11,R[39],E,E,46,[[["pin",[R[251]]],[R[251]],[R[19]]],[["poll",[R[20]]],[R[20],["error"]]]]],[11,R[40],E,E,46,[[[R[19]],["b"],["pin",[R[251]]],[R[251]]],[[R[20],[R[1],"error"]],["poll",[R[20]]]]]],[11,R[37],R[353],E,58,[[["pin",[R[372]]],[R[19]],[R[372]]],[[R[20],[R[1],"error"]],["poll",[R[20]]]]]],[11,R[38],E,E,58,[[[R[19]],["pin",[R[372]]],[R[372]]],[["poll",[R[20]]],[R[20],["error"]]]]],[11,R[39],E,E,58,[[[R[19]],["pin",[R[372]]],[R[372]]],[["poll",[R[20]]],[R[20],["error"]]]]],[11,R[40],E,E,58,[[["pin",[R[372]]],[R[19]],["b"],[R[372]]],[[R[20],[R[1],"error"]],["poll",[R[20]]]]]],[11,R[37],R[351],E,53,[[[R[19]],["pin",[R[372]]],[R[372]]],[[R[20],[R[1],"error"]],["poll",[R[20]]]]]],[11,R[38],E,E,53,[[["pin",[R[372]]],[R[372]],[R[19]]],[["poll",[R[20]]],[R[20],["error"]]]]],[11,R[39],E,E,53,[[["pin",[R[372]]],[R[372]],[R[19]]],[["poll",[R[20]]],[R[20],["error"]]]]],[11,R[40],E,E,53,[[[R[19]],["pin",[R[372]]],[R[372]],["b"]],[[R[20],[R[1],"error"]],["poll",[R[20]]]]]],[11,R[37],R[318],E,51,[[[R[19]],["pin",[R[273]]],[R[273]]],[[R[20],[R[1],"error"]],["poll",[R[20]]]]]],[11,R[38],E,E,51,[[["pin",[R[273]]],[R[273]],[R[19]]],[["poll",[R[20]]],[R[20],["error"]]]]],[11,R[39],E,E,51,[[["pin",[R[273]]],[R[273]],[R[19]]],[["poll",[R[20]]],[R[20],["error"]]]]],[11,R[40],E,E,51,[[[R[19]],["pin",[R[273]]],["b"],[R[273]]],[[R[20],[R[1],"error"]],["poll",[R[20]]]]]],[11,"fmt",R[351],E,52,[[["self"],[R[43]]],[[R[20],["error"]],["error"]]]],[11,"fmt",R[316],E,47,[[["self"],[R[43]]],[[R[20],["error"]],["error"]]]],[11,"fmt",R[354],E,63,[[["self"],[R[43]]],[[R[20],["error"]],["error"]]]],[11,"fmt",R[351],E,53,[[["self"],[R[43]]],[[R[20],["error"]],["error"]]]],[11,"fmt",R[353],E,58,[[["self"],[R[43]]],[[R[20],["error"]],["error"]]]],[11,"fmt",R[354],E,61,[[["self"],[R[43]]],[[R[20],["error"]],["error"]]]],[11,"fmt",R[312],E,45,[[["self"],[R[43]]],[[R[20],["error"]],["error"]]]],[11,"fmt",R[352],E,55,[[["self"],[R[43]]],[[R[20],["error"]],["error"]]]],[11,"fmt",R[316],E,48,[[["self"],[R[43]]],[[R[20],["error"]],["error"]]]],[11,"fmt",R[354],E,62,[[["self"],[R[43]]],[[R[20],["error"]],["error"]]]],[11,"fmt",R[352],E,56,[[["self"],[R[43]]],[[R[20],["error"]],["error"]]]],[11,"fmt",R[318],E,50,[[["self"],[R[43]]],[[R[20],["error"]],["error"]]]],[11,"fmt",E,E,51,[[["self"],[R[43]]],[[R[20],["error"]],["error"]]]],[11,"fmt",R[312],E,54,[[["self"],[R[43]]],[[R[20],["error"]],["error"]]]],[11,"fmt",R[353],E,57,[[["self"],[R[43]]],[[R[20],["error"]],["error"]]]],[11,"fmt",R[318],E,49,[[["self"],[R[43]]],[[R[20],["error"]],["error"]]]],[11,"fmt",R[352],E,13,[[["self"],[R[43]]],[[R[20],["error"]],["error"]]]],[11,"fmt",R[312],E,46,[[["self"],[R[43]]],[[R[20],["error"]],["error"]]]],[11,"fmt",R[354],E,59,[[["self"],[R[43]]],[[R[20],["error"]],["error"]]]],[11,"fmt",R[318],E,14,[[["self"],[R[43]]],[[R[20],["error"]],["error"]]]],[11,"fmt",R[354],E,60,[[["self"],[R[43]]],[[R[20],["error"]],["error"]]]],[11,"eq",R[318],E,14,[[["self"],["ucred"]],["bool"]]],[11,"ne",E,E,14,[[["self"],["ucred"]],["bool"]]],[11,R[25],E,R[286],50,[[[R[267]]],[[R[267]],["error"],[R[20],[R[267],"error"]]]]],[11,R[25],R[312],R[286],46,[[[R[251]]],[[R[20],[R[251]]],[R[251]]]]],[11,R[25],R[318],R[286],51,[[[R[273]]],[[R[273]],["error"],[R[20],[R[273],"error"]]]]],[11,R[25],R[312],R[286],45,[[[R[246]]],[[R[20],[R[246]]],[R[246]]]]],[11,R[25],R[316],R[286],48,[[[R[256]]],[[R[20],[R[256]]],[R[256]]]]],[11,R[25],R[318],R[286],49,[[[R[263]]],[[R[20],[R[263]]],[R[263]]]]],[11,"clone",E,E,14,[[["self"]],["ucred"]]],[11,"hash",E,E,14,[[["self"],["__h"]]]],[11,"from",R[354],E,63,[[[R[245]]],[R[245]]]],[11,R[287],E,E,62,[[["self"]],["i32"]]],[11,R[287],R[318],E,51,[[["self"]],["i32"]]],[11,R[287],R[354],E,61,[[["self"]],["i32"]]],[11,R[287],R[316],E,48,[[["self"]],["i32"]]],[11,R[287],R[354],E,60,[[["self"]],["i32"]]],[11,R[287],R[318],E,50,[[["self"]],["i32"]]],[11,R[287],R[312],E,45,[[["self"]],["i32"]]],[11,R[287],E,E,46,[[["self"]],["i32"]]],[11,R[287],R[318],E,49,[[["self"]],["i32"]]],[11,"as_ref",R[352],E,56,[[["self"]],[R[256]]]],[11,"as_ref",R[351],E,53,[[["self"]],[R[251]]]],[11,"as_ref",R[353],E,57,[[["self"]],[R[273]]]],[11,"as_ref",E,E,58,[[["self"]],[R[273]]]],[11,"as_ref",R[352],E,55,[[["self"]],[R[256]]]],[11,"as_ref",R[351],E,52,[[["self"]],[R[251]]]],[11,R[148],R[361],E,20,[[],["self"]]],[11,R[148],R[343],E,23,[[],["self"]]],[11,"clone",R[361],E,21,[[["self"]],["handle"]]],[11,"clone",R[343],E,24,[[["self"]],[R[192]]]],[11,"fmt",R[360],E,95,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",R[361],E,20,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",E,E,22,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",E,E,21,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",E,E,97,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",R[343],E,23,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",E,E,24,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",E,E,25,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",R[361],E,97,[[["self"],[R[43]]],[R[20]]]],[11,"source",E,E,97,[[["self"]],[["error"],[R[98],["error"]]]]],[11,"spawn",R[343],E,24,[[["self"],["pin",["box"]],["box",["future"]]],[[R[20],[R[178]]],[R[178]]]]],[11,"spawn",R[361],E,21,[[["self"],[T]],[[R[20],[R[178]]],[R[178]]]]],[11,"spawn",R[343],E,24,[[["self"],[T]],[[R[20],[R[178]]],[R[178]]]]],[11,"new",R[349],R[87],26,[[],[R[88]]]],[11,R[415],E,R[416],26,[[["self"]],[R[88]]]],[11,R[417],E,R[418],26,[[["self"]],[R[88]]]],[11,R[419],E,R[420],26,[[["self"]],[R[88]]]],[11,R[89],E,R[421],26,[[["self"],[R[1]]],[R[88]]]],[11,R[422],E,R[423],26,[[["self"],[R[1]]],[R[88]]]],[11,R[424],E,R[425],26,[[["self"],[R[1]]],[R[88]]]],[11,R[426],E,R[427],26,[[["self"],["isize"]],[R[88]]]],[11,"num_skip",E,R[428],26,[[["self"],[R[1]]],[R[88]]]],[11,R[429],E,R[430],26,[[["self"]],[R[91]]]],[11,"new_read",E,R[431],26,[[["self"],[T]],[[R[91]],[R[90],[R[91]]]]]],[11,R[432],E,R[433],26,[[["self"],[T]],[[R[92],[R[91]]],[R[91]]]]],[11,R[434],E,R[435],26,[[["self"],[T]],[[R[97],[R[91]]],[R[91]]]]],[11,"new",R[307],R[411],28,[[],[R[91]]]],[11,R[88],E,R[87],28,[[],[R[88]]]],[11,R[89],E,R[412],28,[[["self"]],[R[1]]]],[11,R[413],E,R[414],28,[[["self"],[R[1]]]]],[11,"new",E,R[393],29,[[],[R[106]]]],[11,"new",E,R[81],30,[[[U],[T]],[R[97]]]],[11,R[394],E,R[81],30,[[[R[82]]],[R[97]]]],[11,R[13],E,R[83],30,[[["self"]],[T]]],[11,R[14],E,R[84],30,[[["self"]],[T]]],[11,"codec",E,R[395],30,[[["self"]],[U]]],[11,R[396],E,R[397],30,[[["self"]],[U]]],[11,R[11],E,R[398],30,[[],[T]]],[11,R[399],E,R[400],30,[[],[R[82]]]],[11,"new",E,R[401],2,[[[U],[T]],[R[82]]]],[11,"new",E,R[402],31,[[["d"],[T]],[R[90]]]],[11,R[13],E,R[83],31,[[["self"]],[T]]],[11,R[14],E,R[84],31,[[["self"]],[T]]],[11,R[11],E,R[403],31,[[],[T]]],[11,"decoder",E,R[85],31,[[["self"]],["d"]]],[11,R[404],E,R[86],31,[[["self"]],["d"]]],[11,"new",E,R[405],32,[[[T],["e"]],[R[92]]]],[11,R[13],E,R[83],32,[[["self"]],[T]]],[11,R[14],E,R[84],32,[[["self"]],[T]]],[11,R[11],E,R[406],32,[[],[T]]],[11,"encoder",E,R[85],32,[[["self"]],["e"]]],[11,R[407],E,R[86],32,[[["self"]],["e"]]],[11,"new",E,R[436],33,[[],[R[107]]]],[11,R[437],E,R[438],33,[[[R[1]]],[R[107]]]],[11,R[439],E,R[440],33,[[["self"]],[R[1]]]],[11,"open",R[310],R[511],34,[[["p"]]]],[11,"create",E,R[512],34,[[["p"]]]],[11,R[250],E,R[513],34,[[["file"]],["file"]]],[11,"seek",E,R[514],34,[[["seekfrom"],["self"]]]],[11,"sync_all",E,R[515],34,[[["self"]]]],[11,R[516],E,R[517],34,[[["self"]]]],[11,"set_len",E,R[518],34,[[["u64"],["self"]]]],[11,R[215],E,R[519],34,[[["self"]]]],[11,R[520],E,R[521],34,[[["self"]]]],[11,R[212],E,R[522],34,[[["self"],[R[213]]]]],[11,"new",E,R[523],35,[[],[R[214]]]],[11,"read",E,R[524],35,[[["self"],["bool"]],[R[214]]]],[11,"write",E,R[525],35,[[["self"],["bool"]],[R[214]]]],[11,"append",E,R[526],35,[[["self"],["bool"]],[R[214]]]],[11,"truncate",E,R[527],35,[[["self"],["bool"]],[R[214]]]],[11,"create",E,R[528],35,[[["self"],["bool"]],[R[214]]]],[11,R[529],E,R[530],35,[[["self"],["bool"]],[R[214]]]],[11,"open",E,R[531],35,[[["self"],["p"]]]],[11,"new",R[350],R[543],39,[[["r"]],[R[42]]]],[11,R[12],E,R[544],39,[[[R[1]],["r"]],[R[42]]]],[11,R[13],E,R[545],39,[[["self"]],["r"]]],[11,R[14],E,R[546],39,[[["self"]],["r"]]],[11,R[10],E,R[547],39,[[["pin",[R[42]]],[R[42]]],[["pin"],["r"]]]],[11,R[11],E,R[548],39,[[],["r"]]],[11,"buffer",E,R[15],39,[[["self"]]]],[11,"new",E,R[549],40,[[["w"]],[R[41]]]],[11,R[12],E,R[550],40,[[["w"],[R[1]]],[R[41]]]],[11,R[13],E,R[551],40,[[["self"]],["w"]]],[11,R[14],E,R[552],40,[[["self"]],["w"]]],[11,R[10],E,R[553],40,[[[R[41]],["pin",[R[41]]]],[["pin"],["w"]]]],[11,R[11],E,R[554],40,[[],["w"]]],[11,"buffer",E,R[15],40,[[["self"]]]],[11,"new",E,"Creates a new I/O error from a known kind of error as well…",44,[[[R[362]],["e"]],["error"]]],[11,"last_os_error",E,"Returns an error representing the last OS error which…",44,[[],["error"]]],[11,"from_raw_os_error",E,"Creates a new instance of an `Error` from a particular OS…",44,[[["i32"]],["error"]]],[11,"raw_os_error",E,"Returns the OS error that this error represents (if any).",44,[[["self"]],[[R[98],["i32"]],["i32"]]]],[11,R[13],E,"Returns a reference to the inner error wrapped by this…",44,[[["self"]],[["error"],[R[98],["error"]]]]],[11,R[14],E,"Returns a mutable reference to the inner error wrapped by…",44,[[["self"]],[["error"],[R[98],["error"]]]]],[11,R[11],E,"Consumes the `Error`, returning its inner error (if any).",44,[[],[[R[98],["box"]],["box",["error"]]]]],[11,"kind",E,"Returns the corresponding `ErrorKind` for this error.",44,[[["self"]],[R[362]]]],[11,"bind",R[312],R[594],45,[[["a"]]]],[11,"accept",E,R[595],45,[[["self"]]]],[11,R[250],E,R[596],45,[[[R[246]],["handle"]],[[R[20],[R[246],"error"]],[R[246]],["error"]]]],[11,R[252],E,R[597],45,[[["self"]],[[R[247]],[R[20],[R[247],"error"]],["error"]]]],[11,R[270],E,R[271],45,[[],[R[270]]]],[11,"ttl",E,R[253],45,[[["self"]],[["u32"],["error"],[R[20],["u32","error"]]]]],[11,R[648],E,R[254],45,[[["self"],["u32"]],[[R[20],["error"]],["error"]]]],[11,R[631],E,R[601],46,[[["a"]]]],[11,R[250],E,R[602],46,[[[R[251]],["handle"]],[["error"],[R[20],[R[251],"error"]],[R[251]]]]],[11,R[252],E,R[603],46,[[["self"]],[[R[247]],[R[20],[R[247],"error"]],["error"]]]],[11,R[266],E,R[604],46,[[["self"]],[[R[247]],[R[20],[R[247],"error"]],["error"]]]],[11,"peek",E,R[605],46,[[["self"]]]],[11,R[24],E,R[275],46,[[["self"],[R[24]]],[[R[20],["error"]],["error"]]]],[11,"nodelay",E,R[606],46,[[["self"]],[[R[20],["bool","error"]],["error"],["bool"]]]],[11,R[607],E,R[608],46,[[["self"],["bool"]],[[R[20],["error"]],["error"]]]],[11,R[609],E,R[610],46,[[["self"]],[["error"],[R[1]],[R[20],[R[1],"error"]]]]],[11,R[611],E,R[612],46,[[["self"],[R[1]]],[[R[20],["error"]],["error"]]]],[11,R[613],E,R[614],46,[[["self"]],[["error"],[R[1]],[R[20],[R[1],"error"]]]]],[11,R[615],E,R[616],46,[[["self"],[R[1]]],[[R[20],["error"]],["error"]]]],[11,R[617],E,R[618],46,[[["self"]],[[R[20],[R[98],"error"]],[R[98],[R[167]]],["error"]]]],[11,R[619],E,R[620],46,[[["self"],[R[98],[R[167]]],[R[167]]],[[R[20],["error"]],["error"]]]],[11,"ttl",E,R[253],46,[[["self"]],[["u32"],["error"],[R[20],["u32","error"]]]]],[11,R[648],E,R[254],46,[[["self"],["u32"]],[[R[20],["error"]],["error"]]]],[11,"linger",E,R[621],46,[[["self"]],[[R[20],[R[98],"error"]],[R[98],[R[167]]],["error"]]]],[11,R[622],E,R[623],46,[[["self"],[R[98],[R[167]]],[R[167]]],[[R[20],["error"]],["error"]]]],[11,"split",E,R[624],46,[[["self"]]]],[11,"new",R[316],R[626],47,[[["c"],[R[256]]],[R[370]]]],[11,R[13],E,R[83],47,[[["self"]],[R[256]]]],[11,R[14],E,R[84],47,[[["self"]],[R[256]]]],[11,R[11],E,R[627],47,[[],[R[256]]]],[11,"bind",E,R[628],48,[[["a"]]]],[11,R[250],E,R[629],48,[[[R[256]],["handle"]],[[R[20],[R[256],"error"]],[R[256]],["error"]]]],[11,"split",E,R[630],48,[[]]],[11,R[252],E,R[265],48,[[["self"]],[[R[247]],[R[20],[R[247],"error"]],["error"]]]],[11,R[631],E,R[632],48,[[["self"],["a"]]]],[11,"send",E,R[257],48,[[["self"]]]],[11,"recv",E,R[261],48,[[["self"]]]],[11,R[673],E,R[257],48,[[["a"],["self"]]]],[11,R[259],E,R[260],48,[[["self"]]]],[11,R[306],E,R[633],48,[[["self"]],[[R[20],["bool","error"]],["error"],["bool"]]]],[11,R[634],E,R[635],48,[[["self"],["bool"]],[[R[20],["error"]],["error"]]]],[11,R[636],E,R[637],48,[[["self"]],[[R[20],["bool","error"]],["error"],["bool"]]]],[11,R[638],E,R[639],48,[[["self"],["bool"]],[[R[20],["error"]],["error"]]]],[11,R[640],E,R[641],48,[[["self"]],[["u32"],["error"],[R[20],["u32","error"]]]]],[11,R[642],E,R[643],48,[[["self"],["u32"]],[[R[20],["error"]],["error"]]]],[11,R[644],E,R[645],48,[[["self"]],[[R[20],["bool","error"]],["error"],["bool"]]]],[11,R[646],E,R[647],48,[[["self"],["bool"]],[[R[20],["error"]],["error"]]]],[11,"ttl",E,R[253],48,[[["self"]],[["u32"],["error"],[R[20],["u32","error"]]]]],[11,R[648],E,R[254],48,[[["self"],["u32"]],[[R[20],["error"]],["error"]]]],[11,R[649],E,R[650],48,[[["self"],[R[651]]],[[R[20],["error"]],["error"]]]],[11,R[652],E,R[653],48,[[["self"],[R[654]],["u32"]],[[R[20],["error"]],["error"]]]],[11,R[655],E,R[656],48,[[["self"],[R[651]]],[[R[20],["error"]],["error"]]]],[11,R[657],E,R[658],48,[[["self"],[R[654]],["u32"]],[[R[20],["error"]],["error"]]]],[11,"bind",R[318],R[668],49,[[["p"]],[[R[20],[R[263],"error"]],["error"],[R[263]]]]],[11,"pair",E,R[274],49,[[],[[R[20],["error"]],["error"]]]],[11,R[250],E,R[669],49,[[[R[263]],["handle"]],[[R[20],[R[263],"error"]],["error"],[R[263]]]]],[11,"unbound",E,R[670],49,[[],[[R[20],[R[263],"error"]],["error"],[R[263]]]]],[11,R[631],E,R[671],49,[[["self"],["p"]],[[R[20],["error"]],["error"]]]],[11,"send",E,R[672],49,[[["self"]]]],[11,"recv",E,R[264],49,[[["self"]]]],[11,R[673],E,R[674],49,[[["p"],["self"]]]],[11,R[259],E,R[264],49,[[["self"]]]],[11,R[252],E,R[265],49,[[["self"]],[[R[20],[R[247],"error"]],["error"],[R[247]]]]],[11,R[266],E,R[675],49,[[["self"]],[[R[20],[R[247],"error"]],["error"],[R[247]]]]],[11,R[268],E,R[269],49,[[["self"]],[[R[98],["error"]],["error"],[R[20],[R[98],"error"]]]]],[11,R[24],E,R[676],49,[[["self"],[R[24]]],[[R[20],["error"]],["error"]]]],[11,"bind",E,R[677],50,[[["p"]],[[R[267]],["error"],[R[20],[R[267],"error"]]]]],[11,R[250],E,R[678],50,[[[R[267]],["handle"]],[[R[267]],["error"],[R[20],[R[267],"error"]]]]],[11,R[252],E,R[679],50,[[["self"]],[[R[20],[R[247],"error"]],["error"],[R[247]]]]],[11,R[268],E,R[269],50,[[["self"]],[[R[98],["error"]],["error"],[R[20],[R[98],"error"]]]]],[11,"accept",E,R[680],50,[[["self"]]]],[11,R[270],E,R[271],50,[[],[R[270]]]],[11,R[631],E,R[684],51,[[["p"]]]],[11,R[250],E,R[685],51,[[[R[273]],["handle"]],[[R[273]],["error"],[R[20],[R[273],"error"]]]]],[11,"pair",E,R[274],51,[[],[["error"],[R[20],["error"]]]]],[11,R[252],E,R[686],51,[[["self"]],[[R[20],[R[247],"error"]],["error"],[R[247]]]]],[11,R[266],E,R[687],51,[[["self"]],[[R[20],[R[247],"error"]],["error"],[R[247]]]]],[11,R[688],E,R[689],51,[[["self"]],[["ucred"],["error"],[R[20],["ucred","error"]]]]],[11,R[268],E,R[269],51,[[["self"]],[[R[98],["error"]],["error"],[R[20],[R[98],"error"]]]]],[11,R[24],E,R[275],51,[[["self"],[R[24]]],[[R[20],["error"]],["error"]]]],[11,"split",E,R[690],51,[[["self"]]]],[11,"reunite",R[352],R[262],55,[[[R[664]]],[[R[258]],[R[256]],[R[20],[R[256],R[258]]]]]],[11,R[673],E,R[257],55,[[[R[247]],["self"]]]],[11,"send",E,R[257],55,[[["self"]]]],[11,"reunite",E,R[262],56,[[[R[663]]],[[R[258]],[R[256]],[R[20],[R[256],R[258]]]]]],[11,R[259],E,R[260],56,[[["self"]]]],[11,"recv",E,R[261],56,[[["self"]]]],[11,"id",R[354],R[583],59,[[["self"]],["u32"]]],[11,"kill",E,R[584],59,[[["self"]],[[R[20],["error"]],["error"]]]],[11,"stdin",E,R[585],59,[[["self"]],[R[98]]]],[11,"stdout",E,R[586],59,[[["self"]],[R[98]]]],[11,"stderr",E,R[587],59,[[["self"]],[R[98]]]],[11,R[588],E,R[589],59,[[]]],[11,"forget",E,R[590],59,[[]]],[11,"new",E,R[563],63,[[["s"]],[R[245]]]],[11,"arg",E,R[564],63,[[["self"],["s"]],[R[245]]]],[11,"args",E,R[565],63,[[["self"],["i"]],[R[245]]]],[11,"env",E,R[566],63,[[["self"],["k"],["v"]],[R[245]]]],[11,"envs",E,R[567],63,[[["self"],["i"]],[R[245]]]],[11,R[568],E,R[569],63,[[["self"],["k"]],[R[245]]]],[11,R[570],E,R[571],63,[[["self"]],[R[245]]]],[11,R[572],E,R[573],63,[[["self"],["p"]],[R[245]]]],[11,"stdin",E,R[574],63,[[["self"],[T]],[R[245]]]],[11,"stdout",E,R[575],63,[[["self"],[T]],[R[245]]]],[11,"stderr",E,R[576],63,[[["self"],[T]],[R[245]]]],[11,"uid",E,R[577],63,[[["self"],["u32"]],[R[245]]]],[11,"gid",E,R[578],63,[[["self"],["u32"]],[R[245]]]],[11,"pre_exec",E,R[579],63,[[["self"],["f"]],[R[245]]]],[11,"spawn",E,R[580],63,[[["self"]],[[R[20],["child","error"]],["child"],["error"]]]],[11,"status",E,R[581],63,[[["self"]]]],[11,"output",E,R[582],63,[[["self"]]]],[11,"new",R[338],R[694],64,[[[R[1]]],["barrier"]]],[11,"wait",E,R[695],64,[[["self"]]]],[11,R[11],R[355],R[149],65,[[],[T]]],[11,R[138],E,R[743],65,[[["self"]],["bool"]]],[11,"is_full",E,R[744],65,[[["self"]],["bool"]]],[11,R[11],E,R[149],69,[[],[T]]],[11,R[704],R[337],R[705],71,[[["self"],[T]],[[R[20],[R[128]]],[R[128]]]]],[11,"send",E,R[706],71,[[[T],["self"]]]],[11,"recv",E,R[129],72,[[["self"]]]],[11,"close",E,R[130],72,[[["self"]]]],[11,R[704],E,R[707],73,[[["self"],[T]],[[R[20],[R[131]]],[R[131]]]]],[11,"recv",E,R[129],74,[[["self"]]]],[11,"close",E,R[130],74,[[["self"]]]],[11,"send",R[339],R[724],75,[[[T]],[R[20]]]],[11,"closed",E,R[725],75,[[["self"]]]],[11,R[138],E,R[726],75,[[["self"]],["bool"]]],[11,"close",E,R[727],76,[[["self"]]]],[11,"try_recv",E,R[728],76,[[["self"]],[[R[20],[R[135]]],[R[135]]]]],[11,R[13],R[340],R[737],79,[[["self"]],["ref"]]],[11,"recv_ref",E,R[738],79,[[["self"]]]],[11,"recv",E,R[739],79,[[["self"]]]],[11,R[306],E,R[740],80,[[["self"],[T]],[[R[20],[R[142]]],[R[142]]]]],[11,"closed",E,R[741],80,[[["self"]]]],[11,"new",R[338],R[715],83,[[[T]],["mutex"]]],[11,"lock",E,R[716],83,[[["self"]]]],[11,"new",R[341],R[758],85,[[],[R[221]]]],[11,R[759],E,R[760],85,[[[R[1]],["handle"]],[R[221]]]],[11,R[12],E,R[761],85,[[[R[1]]],[R[221]]]],[11,R[762],E,R[763],85,[[["self"],[T],[R[222]]],["key"]]],[11,R[110],E,R[764],85,[[["self"],[R[19]]],[["poll",[R[98]]],[R[98],[R[20]]]]]],[11,"insert",E,R[765],85,[[["self"],[T],[R[167]]],["key"]]],[11,"remove",E,R[766],85,[[["self"],["key"]],["expired"]]],[11,"reset_at",E,R[223],85,[[["self"],["key"],[R[222]]]]],[11,"reset",E,R[223],85,[[["self"],["key"],[R[167]]]]],[11,"clear",E,R[767],85,[[["self"]]]],[11,"capacity",E,R[768],85,[[["self"]],[R[1]]]],[11,"reserve",E,R[769],85,[[["self"],[R[1]]]]],[11,"is_empty",E,R[770],85,[[["self"]],["bool"]]],[11,R[13],R[358],R[771],86,[[["self"]],[T]]],[11,R[14],E,R[772],86,[[["self"]],[T]]],[11,R[11],E,R[773],86,[[],[T]]],[11,"new",R[341],R[777],88,[[[T],[R[167]]],[R[363]]]],[11,R[13],E,R[778],88,[[["self"]],[T]]],[11,R[14],E,R[779],88,[[["self"]],[T]]],[11,R[11],E,R[780],88,[[],[T]]],[11,"new_at",E,R[781],88,[[[T],[R[222]]],[R[363]]]],[11,"deadline",E,R[782],90,[[["self"]],[R[222]]]],[11,R[783],E,R[784],90,[[["self"]],["bool"]]],[11,"reset",E,R[785],90,[[["self"],[R[222]]]]],[11,R[24],E,R[786],91,[[],["error"]]],[11,R[232],E,R[235],91,[[["self"]],["bool"]]],[11,R[233],E,R[787],91,[[],["error"]]],[11,R[234],E,R[235],91,[[["self"]],["bool"]]],[11,"new",E,R[788],92,[[[R[167]],[R[222]]],[R[373]]]],[11,R[789],E,R[790],92,[[[R[167]]],[R[373]]]],[11,"next",E,R[791],92,[[["self"]]]],[11,"current",R[360],R[455],93,[[],[R[191]]]],[11,R[481],E,R[482],18,[[["self"],["fut"]],[[R[20],[R[189],R[178]]],[R[189]],[R[178]]]]],[11,R[24],E,R[451],94,[[],[R[178]]]],[11,R[233],E,R[452],94,[[],[R[178]]]],[11,R[232],E,R[453],94,[[["self"]],["bool"]]],[11,R[234],E,R[454],94,[[["self"]],["bool"]]],[11,"current",R[361],R[462],96,[[],[R[192]]]],[11,R[463],E,R[464],96,[[["self"],["box",["future"]],["pin",["box"]]],[[R[20],[R[178]]],[R[178]]]]]],"p":[[8,"Decoder"],[8,"Encoder"],[3,R[115]],[4,R[116]],[8,"Future"],[8,R[374]],[8,R[74]],[8,R[77]],[8,R[75]],[8,R[78]],[8,R[76]],[8,R[79]],[4,R[375]],[3,R[295]],[3,"UCred"],[8,"Stream"],[8,"Sink"],[8,R[376]],[8,R[476]],[8,R[203]],[3,R[377]],[3,"Handle"],[3,"Runtime"],[3,R[377]],[3,R[198]],[3,"Runtime"],[3,R[377]],[3,R[122]],[3,R[120]],[3,R[117]],[3,"Framed"],[3,R[118]],[3,R[119]],[3,R[121]],[3,"File"],[3,R[216]],[3,"Stderr"],[3,"Stdin"],[3,"Stdout"],[3,R[70]],[3,R[72]],[3,"Empty"],[3,"Repeat"],[3,"Sink"],[3,"Error"],[3,R[291]],[3,R[292]],[3,R[293]],[3,R[294]],[3,R[298]],[3,R[299]],[3,R[300]],[3,R[73]],[3,R[80]],[3,R[305]],[3,R[297]],[3,R[296]],[3,R[73]],[3,R[80]],[3,"Child"],[3,R[304]],[3,R[302]],[3,R[303]],[3,"Command"],[3,"Barrier"],[3,R[157]],[3,R[158]],[3,R[140]],[3,R[160]],[3,R[159]],[3,R[133]],[3,"Sender"],[3,R[151]],[3,R[152]],[3,R[139]],[3,"Sender"],[3,R[139]],[3,R[133]],[3,R[161]],[3,R[139]],[3,"Sender"],[3,"Ref"],[3,R[140]],[3,"Mutex"],[3,R[156]],[3,R[220]],[3,"Expired"],[3,"Key"],[3,R[793]],[3,"Elapsed"],[3,"Delay"],[3,"Error"],[3,R[748]],[3,R[195]],[3,R[194]],[3,"Spawn"],[3,R[198]],[3,R[458]]]};
searchIndex["tokio_codec"]={"doc":R[378],"i":[[3,R[117],R[93],R[379],N,N],[3,"Framed",E,R[255],N,N],[3,R[115],E,R[380],N,N],[12,"io",E,R[381],0,N],[12,"codec",E,R[382],0,N],[12,"read_buf",E,R[383],0,N],[12,R[384],E,R[385],0,N],[3,R[118],E,R[386],N,N],[3,R[119],E,R[387],N,N],[3,R[121],E,R[388],N,N],[4,R[116],E,R[389],N,N],[13,R[390],E,R[391],1,N],[13,"Io",E,R[392],1,N],[11,"new",E,R[393],2,[[],[R[106]]]],[11,"new",E,R[81],3,[[[U],[T]],[R[97]]]],[11,R[394],E,R[81],3,[[[R[82]]],[R[97]]]],[11,R[13],E,R[83],3,[[["self"]],[T]]],[11,R[14],E,R[84],3,[[["self"]],[T]]],[11,"codec",E,R[395],3,[[["self"]],[U]]],[11,R[396],E,R[397],3,[[["self"]],[U]]],[11,R[11],E,R[398],3,[[],[T]]],[11,R[399],E,R[400],3,[[],[R[82]]]],[11,"new",E,R[401],0,[[[U],[T]],[R[82]]]],[11,"new",E,R[402],4,[[["d"],[T]],[R[90]]]],[11,R[13],E,R[83],4,[[["self"]],[T]]],[11,R[14],E,R[84],4,[[["self"]],[T]]],[11,R[11],E,R[403],4,[[],[T]]],[11,"decoder",E,R[85],4,[[["self"]],["d"]]],[11,R[404],E,R[86],4,[[["self"]],["d"]]],[11,"new",E,R[405],5,[[[T],["e"]],[R[92]]]],[11,R[13],E,R[83],5,[[["self"]],[T]]],[11,R[14],E,R[84],5,[[["self"]],[T]]],[11,R[11],E,R[406],5,[[],[T]]],[11,"encoder",E,R[85],5,[[["self"]],["e"]]],[11,R[407],E,R[86],5,[[["self"]],["e"]]],[0,R[408],E,R[409],N,N],[3,R[377],R[102],R[410],N,N],[3,R[122],E,R[309],N,N],[3,R[120],E,R[308],N,N],[11,"new",E,R[411],6,[[],["self"]]],[11,R[88],E,R[87],6,[[],[R[88]]]],[11,R[89],E,R[412],6,[[["self"]],[R[1]]]],[11,R[413],E,R[414],6,[[["self"],[R[1]]]]],[11,"new",E,R[87],7,[[],[R[88]]]],[11,R[415],E,R[416],7,[[["self"]],["self"]]],[11,R[417],E,R[418],7,[[["self"]],["self"]]],[11,R[419],E,R[420],7,[[["self"]],["self"]]],[11,R[89],E,R[421],7,[[["self"],[R[1]]],["self"]]],[11,R[422],E,R[423],7,[[["self"],[R[1]]],["self"]]],[11,R[424],E,R[425],7,[[["self"],[R[1]]],["self"]]],[11,R[426],E,R[427],7,[[["self"],["isize"]],["self"]]],[11,"num_skip",E,R[428],7,[[["self"],[R[1]]],["self"]]],[11,R[429],E,R[430],7,[[["self"]],[R[91]]]],[11,"new_read",E,R[431],7,[[["self"],[T]],[[R[90],[R[91]]],[R[91]]]]],[11,R[432],E,R[433],7,[[["self"],[T]],[[R[91]],[R[92],[R[91]]]]]],[11,R[434],E,R[435],7,[[["self"],[T]],[[R[91]],[R[97],[R[91]]]]]],[11,"new",R[93],R[436],8,[[],[R[107]]]],[11,R[437],E,R[438],8,[[[R[1]]],["self"]]],[11,R[439],E,R[440],8,[[["self"]],[R[1]]]],[8,"Decoder",E,R[441],N,N],[16,"Item",E,R[442],9,N],[16,"Error",E,R[443],9,N],[10,"decode",E,R[444],9,[[["self"],[R[94]]],[[R[20],[R[98]]],[R[98]]]]],[11,R[105],E,R[114],9,[[["self"],[R[94]]],[[R[20],[R[98]]],[R[98]]]]],[11,R[97],E,R[81],9,[[[R[95]],["sized"],[R[96]]],[[R[95]],[R[96]],["sized"],[R[97]]]]],[8,"Encoder",E,R[445],N,N],[16,"Item",E,R[446],10,N],[16,"Error",E,R[447],10,N],[10,"encode",E,R[448],10,[[["self"],[R[94]]],[R[20]]]],[11,R[101],E,E,2,[[["self"]],[T]]],[11,R[100],E,E,2,[[["self"],[T]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[25],E,E,2,[[[U]],[R[20]]]],[11,R[26],E,E,2,[[],[R[20]]]],[11,R[27],E,E,2,[[["self"]],[T]]],[11,R[29],E,E,2,[[["self"]],[T]]],[11,R[28],E,E,2,[[["self"]],[R[30]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[25],E,E,3,[[[U]],[R[20]]]],[11,R[26],E,E,3,[[],[R[20]]]],[11,R[27],E,E,3,[[["self"]],[T]]],[11,R[29],E,E,3,[[["self"]],[T]]],[11,R[28],E,E,3,[[["self"]],[R[30]]]],[11,R[99],E,E,3,[[["pin"],["s"],[R[19]]],[["poll",[R[98]]],[R[98],[R[20]]]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[25],E,E,0,[[[U]],[R[20]]]],[11,R[26],E,E,0,[[],[R[20]]]],[11,R[27],E,E,0,[[["self"]],[T]]],[11,R[29],E,E,0,[[["self"]],[T]]],[11,R[28],E,E,0,[[["self"]],[R[30]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[25],E,E,4,[[[U]],[R[20]]]],[11,R[26],E,E,4,[[],[R[20]]]],[11,R[27],E,E,4,[[["self"]],[T]]],[11,R[29],E,E,4,[[["self"]],[T]]],[11,R[28],E,E,4,[[["self"]],[R[30]]]],[11,R[99],E,E,4,[[["pin"],["s"],[R[19]]],[["poll",[R[98]]],[R[98],[R[20]]]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[25],E,E,5,[[[U]],[R[20]]]],[11,R[26],E,E,5,[[],[R[20]]]],[11,R[27],E,E,5,[[["self"]],[T]]],[11,R[29],E,E,5,[[["self"]],[T]]],[11,R[28],E,E,5,[[["self"]],[R[30]]]],[11,R[99],E,E,5,[[["pin"],["s"],[R[19]]],[["poll",[R[98]]],[R[98],[R[20]]]]]],[11,R[101],E,E,8,[[["self"]],[T]]],[11,R[100],E,E,8,[[["self"],[T]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[25],E,E,8,[[[U]],[R[20]]]],[11,R[26],E,E,8,[[],[R[20]]]],[11,R[27],E,E,8,[[["self"]],[T]]],[11,R[29],E,E,8,[[["self"]],[T]]],[11,R[28],E,E,8,[[["self"]],[R[30]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[103],E,E,1,[[["self"]],["string"]]],[11,R[25],E,E,1,[[[U]],[R[20]]]],[11,R[26],E,E,1,[[],[R[20]]]],[11,R[27],E,E,1,[[["self"]],[T]]],[11,R[29],E,E,1,[[["self"]],[T]]],[11,R[28],E,E,1,[[["self"]],[R[30]]]],[11,R[101],R[102],E,7,[[["self"]],[T]]],[11,R[100],E,E,7,[[["self"],[T]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[25],E,E,7,[[[U]],[R[20]]]],[11,R[26],E,E,7,[[],[R[20]]]],[11,R[27],E,E,7,[[["self"]],[T]]],[11,R[29],E,E,7,[[["self"]],[T]]],[11,R[28],E,E,7,[[["self"]],[R[30]]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[103],E,E,11,[[["self"]],["string"]]],[11,R[25],E,E,11,[[[U]],[R[20]]]],[11,R[26],E,E,11,[[],[R[20]]]],[11,R[27],E,E,11,[[["self"]],[T]]],[11,R[29],E,E,11,[[["self"]],[T]]],[11,R[28],E,E,11,[[["self"]],[R[30]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[25],E,E,6,[[[U]],[R[20]]]],[11,R[26],E,E,6,[[],[R[20]]]],[11,R[27],E,E,6,[[["self"]],[T]]],[11,R[29],E,E,6,[[["self"]],[T]]],[11,R[28],E,E,6,[[["self"]],[R[30]]]],[11,"decode",R[93],E,2,[[["self"],[R[94]]],[[R[98],[R[94]]],["error"],[R[20],[R[98],"error"]]]]],[11,"decode",R[102],E,6,[[["self"],[R[94]]],[[R[98],[R[94]]],[R[20],[R[98]]]]]],[11,"decode",R[93],E,8,[[["self"],[R[94]]],[[R[98],["string"]],[R[20],[R[98],R[104]]],[R[104]]]]],[11,R[105],E,E,8,[[["self"],[R[94]]],[[R[98],["string"]],[R[20],[R[98],R[104]]],[R[104]]]]],[11,"encode",E,E,2,[[["self"],["bytes"],[R[94]]],[["error"],[R[20],["error"]]]]],[11,"encode",R[102],E,6,[[["self"],["bytes"],[R[94]]],[["error"],[R[20],["error"]]]]],[11,"encode",R[93],E,8,[[["self"],["string"],[R[94]]],[[R[20],[R[104]]],[R[104]]]]],[11,R[148],E,E,2,[[],[R[106]]]],[11,R[148],R[102],E,6,[[],["self"]]],[11,R[148],E,E,7,[[],["self"]]],[11,R[148],R[93],E,8,[[],["self"]]],[11,"clone",E,E,2,[[["self"]],[R[106]]]],[11,"clone",R[102],E,7,[[["self"]],[R[88]]]],[11,"clone",R[93],E,8,[[["self"]],[R[107]]]],[11,R[108],E,E,2,[[["self"],[R[106]]],[[R[98],[R[109]]],[R[109]]]]],[11,"lt",E,E,2,[[["self"],[R[106]]],["bool"]]],[11,"le",E,E,2,[[["self"],[R[106]]],["bool"]]],[11,"gt",E,E,2,[[["self"],[R[106]]],["bool"]]],[11,"ge",E,E,2,[[["self"],[R[106]]],["bool"]]],[11,R[108],E,E,8,[[["self"],[R[107]]],[[R[98],[R[109]]],[R[109]]]]],[11,"lt",E,E,8,[[["self"],[R[107]]],["bool"]]],[11,"le",E,E,8,[[["self"],[R[107]]],["bool"]]],[11,"gt",E,E,8,[[["self"],[R[107]]],["bool"]]],[11,"ge",E,E,8,[[["self"],[R[107]]],["bool"]]],[11,"eq",E,E,2,[[["self"],[R[106]]],["bool"]]],[11,"ne",E,E,2,[[["self"],[R[106]]],["bool"]]],[11,"eq",E,E,8,[[["self"],[R[107]]],["bool"]]],[11,"ne",E,E,8,[[["self"],[R[107]]],["bool"]]],[11,"cmp",E,E,2,[[["self"],[R[106]]],[R[109]]]],[11,"cmp",E,E,8,[[["self"],[R[107]]],[R[109]]]],[11,"from",E,E,1,[[["error"]],[R[104]]]],[11,"hash",E,E,2,[[["self"],["__h"]]]],[11,"hash",E,E,8,[[["self"],["__h"]]]],[11,"fmt",E,E,2,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",E,E,3,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",E,E,0,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",E,E,4,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",E,E,5,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",R[102],E,7,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",E,E,6,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",E,E,11,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",R[93],E,8,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",E,E,1,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",R[102],E,11,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",R[93],E,1,[[["self"],[R[43]]],[R[20]]]],[11,R[110],E,E,3,[[["pin"],["self"],[R[19]]],[["poll",[R[98]]],[R[98]]]]],[11,R[110],E,E,4,[[["pin"],["self"],[R[19]]],[["poll",[R[98]]],[R[98]]]]],[11,R[110],E,E,5,[[["pin"],["self"],[R[19]]],[["poll",[R[98]]],[R[98]]]]],[11,R[111],E,E,3,[[["pin"],["self"],[R[19]]],[["poll",[R[20]]],[R[20]]]]],[11,R[112],E,E,3,[[["pin"],["self"],["i"]],[R[20]]]],[11,R[38],E,E,3,[[["pin"],["self"],[R[19]]],[["poll",[R[20]]],[R[20]]]]],[11,R[113],E,E,3,[[["pin"],["self"],[R[19]]],[["poll",[R[20]]],[R[20]]]]],[11,R[111],E,E,4,[[["pin"],["self"],[R[19]]],[["poll",[R[20]]],[R[20]]]]],[11,R[112],E,E,4,[[["pin"],["self"],["i"]],[R[20]]]],[11,R[38],E,E,4,[[["pin"],["self"],[R[19]]],[["poll",[R[20]]],[R[20]]]]],[11,R[113],E,E,4,[[["pin"],["self"],[R[19]]],[["poll",[R[20]]],[R[20]]]]],[11,R[111],E,E,5,[[["pin"],["self"],[R[19]]],[["poll",[R[20]]],[R[20]]]]],[11,R[112],E,E,5,[[["pin"],["self"],["i"]],[R[20]]]],[11,R[38],E,E,5,[[["pin"],["self"],[R[19]]],[["poll",[R[20]]],[R[20]]]]],[11,R[113],E,E,5,[[["pin"],["self"],[R[19]]],[["poll",[R[20]]],[R[20]]]]],[11,R[105],E,R[114],9,[[["self"],[R[94]]],[[R[20],[R[98]]],[R[98]]]]],[11,R[97],E,R[81],9,[[[R[95]],["sized"],[R[96]]],[[R[95]],[R[96]],["sized"],[R[97]]]]]],"p":[[3,R[115]],[4,R[116]],[3,R[117]],[3,"Framed"],[3,R[118]],[3,R[119]],[3,R[120]],[3,R[377]],[3,R[121]],[8,"Decoder"],[8,"Encoder"],[3,R[122]]]};
searchIndex["tokio_executor"]={"doc":"Task execution related traits and utilities.","i":[[3,R[204],R[164],"The handle to a remote future returned by `remote_handle`.",N,N],[3,"Enter",E,"Represents an executor context.",N,N],[3,R[205],E,"An error returned by `enter` if an execution scope has…",N,N],[3,R[194],E,R[449],N,N],[3,R[195],E,R[450],N,N],[5,"enter",E,"Marks the current thread as being within the dynamic…",N,[[],[[R[20],["enter",R[163]]],["enter"],[R[163]]]]],[5,"spawn",E,"Submits a future for execution on the default executor --…",N,[[[T]]]],[5,R[217],E,"Set the default executor for the duration of the closure",N,[[["f"],[T]],["r"]]],[11,R[170],E,"Blocks the thread on the specified future, returning the…",0,[[["self"],["future"]]]],[11,R[24],E,R[451],1,[[],["self"]]],[11,R[233],E,R[452],1,[[],["self"]]],[11,R[232],E,R[453],1,[[["self"]],["bool"]]],[11,R[234],E,R[454],1,[[["self"]],["bool"]]],[11,"current",E,R[455],2,[[],[R[191]]]],[0,"park",E,"Abstraction over blocking and unblocking the current thread.",N,N],[3,R[196],R[185],"Blocks the current thread using a condition variable.",N,N],[3,R[180],E,R[181],N,N],[3,R[206],E,"Unblocks a thread that was blocked by `ParkThread`.",N,N],[8,"Park",E,"Block the current thread.",N,N],[16,"Unpark",E,"Unpark handle type for the `Park` implementation.",3,N],[16,"Error",E,"Error returned by `park`",3,N],[10,"unpark",E,"Get a new `Unpark` handle associated with this `Park`…",3,[[["self"]]]],[10,"park",E,"Block the current thread unless or until the token is…",3,[[["self"]],[R[20]]]],[10,R[190],E,"Park the current thread for at most `duration`.",3,[[["self"],[R[167]]],[R[20]]]],[8,"Unpark",E,"Unblock a thread blocked by the associated [`Park`]…",N,N],[10,"unpark",E,"Unblock a thread that is blocked by the associated `Park`…",4,[[["self"]]]],[11,"new",E,"Create a new `ParkThread` handle for the current thread.",5,[[],["parkthread"]]],[0,R[179],R[164],"Thread pool for blocking operations",N,N],[3,"Blocking",R[186],"Result of a blocking operation running on the blocking…",N,N],[5,"run",E,"Run the provided function on a threadpool dedicated to…",N,[[["f"]],[R[179]]]],[0,R[456],R[164],"A single-threaded executor which executes tasks on the…",N,N],[3,R[197],R[187],"Executes tasks on the current thread",N,N],[3,R[198],E,R[457],N,N],[3,"Turn",E,"Returned by the `turn` function.",N,N],[3,"Entered",E,"A `CurrentThread` instance bound to a supplied execution…",N,N],[3,R[458],E,R[459],N,N],[3,R[199],E,"Error returned by the `run_timeout` function.",N,N],[3,R[207],E,"Error returned by the `turn` function.",N,N],[3,R[200],E,"Error returned by the `block_on` function.",N,N],[3,"Handle",E,R[460],N,N],[5,"block_on_all",E,"Run the executor bootstrapping the execution with the…",N,[[["f"]]]],[5,"spawn",E,R[461],N,[[["f"]]]],[11,"has_polled",E,"`true` if any futures were polled at all and `false`…",6,[[["self"]],["bool"]]],[11,"new",E,"Create a new instance of `CurrentThread`.",7,[[],["self"]]],[11,"new_with_park",E,"Create a new instance of `CurrentThread` backed by the…",7,[[["p"]],["self"]]],[11,"is_idle",E,"Returns `true` if the executor is currently idle.",7,[[["self"]],["bool"]]],[11,"spawn",E,R[169],7,[[["self"],["f"]],["self"]]],[11,R[170],E,R[171],7,[[["self"],["f"]]]],[11,"run",E,R[165],7,[[["self"]],[[R[20],[R[172]]],[R[172]]]]],[11,R[173],E,R[165],7,[[["self"],[R[167]]],[[R[20],[R[166]]],[R[166]]]]],[11,"turn",E,R[174],7,[[["self"],[R[98],[R[167]]],[R[167]]],[[R[20],["turn",R[168]]],["turn"],[R[168]]]]],[11,R[229],E,R[175],7,[[["self"]],["p"]]],[11,R[176],E,R[177],7,[[["self"]],["p"]]],[11,"handle",E,"Get a new handle to spawn futures on the executor",7,[[["self"]],["handle"]]],[11,"spawn",E,R[169],8,[[["self"],["f"]],["self"]]],[11,R[170],E,R[171],8,[[["self"],["f"]]]],[11,"run",E,R[165],8,[[["self"]],[[R[20],[R[172]]],[R[172]]]]],[11,R[173],E,R[165],8,[[["self"],[R[167]]],[[R[20],[R[166]]],[R[166]]]]],[11,"turn",E,R[174],8,[[["self"],[R[98],[R[167]]],[R[167]]],[[R[20],["turn",R[168]]],["turn"],[R[168]]]]],[11,R[229],E,R[175],8,[[["self"]],["p"]]],[11,R[176],E,R[177],8,[[["self"]],["p"]]],[11,"spawn",E,"Spawn a future onto the `CurrentThread` instance…",9,[[["self"],["f"]],[[R[20],[R[178]]],[R[178]]]]],[11,"status",E,R[184],9,[[["self"]],[[R[20],[R[178]]],[R[178]]]]],[11,"current",E,R[462],10,[[],[R[192]]]],[11,R[463],E,R[464],10,[[["self"],["box",["future"]],["pin",["box"]]],[[R[20],[R[178]]],[R[178]]]]],[11,"is_timeout",E,"Returns `true` if the error was caused by the operation…",11,[[["self"]],["bool"]]],[11,R[11],E,"Returns the error yielded by the future being blocked on",12,[[],[R[98]]]],[0,R[183],R[164],"A work-stealing based thread pool for executing futures.",N,N],[3,R[208],R[182],"Error raised by `blocking`.",N,N],[3,R[377],E,"Builds a thread pool with custom configuration values.",N,N],[3,"Sender",E,"Submit futures to the associated thread pool for execution.",N,N],[3,"Shutdown",E,"Future that resolves when the thread pool is shutdown.",N,N],[3,R[202],E,"Work-stealing based thread pool for executing futures.",N,N],[3,"Worker",E,"Thread worker",N,N],[3,"WorkerId",E,"Identifies a thread pool worker.",N,N],[5,R[179],E,"Enter a blocking section of code.",N,[[["f"]],[["poll",[R[20]]],[R[20],["blockingerror"]]]]],[0,"park",E,"Thread parking utilities.",N,N],[3,R[201],R[188],"Parks the thread.",N,N],[3,R[209],E,"Unparks threads that were parked by `DefaultPark`.",N,N],[3,R[180],E,R[181],N,N],[11,"new",E,"Creates a new `DefaultPark` instance.",13,[[],["defaultpark"]]],[11,"new",R[182],"Returns a new thread pool builder initialized with default…",14,[[],[R[88]]]],[11,"pool_size",E,"Set the maximum number of worker threads for the thread…",14,[[["self"],[R[1]]],["self"]]],[11,"max_blocking",E,"Set the maximum number of concurrent blocking sections.",14,[[["self"],[R[1]]],["self"]]],[11,R[465],E,"Set the thread keep alive duration",14,[[["self"],[R[98],[R[167]]],[R[167]]],["self"]]],[11,R[466],E,"Sets a callback to be triggered when a panic during a…",14,[[["self"],["f"]],["self"]]],[11,R[467],E,"Set name prefix of threads spawned by the scheduler",14,[[["self"],["string"],["into",["string"]]],["self"]]],[11,R[468],E,R[469],14,[[["self"],[R[1]]],["self"]]],[11,"around_worker",E,"Execute function `f` on each worker thread.",14,[[["self"],["f"]],["self"]]],[11,R[470],E,R[471],14,[[["self"],["f"]],["self"]]],[11,R[472],E,R[473],14,[[["self"],["f"]],["self"]]],[11,"custom_park",E,"Customize the `park` instance used by each worker thread.",14,[[["self"],["f"]],["self"]]],[11,"build",E,"Create the configured `ThreadPool`.",14,[[["self"]],[R[183]]]],[11,"spawn",E,"Spawn a future onto the thread pool",15,[[["self"],["f"]],[[R[20],[R[178]]],[R[178]]]]],[11,"wait",E,"Wait for the shutdown to complete",16,[[]]],[11,"new",E,"Create a new `ThreadPool` with default values.",17,[[],[R[183]]]],[11,"spawn",E,"Spawn a future onto the thread pool.",17,[[["self"],["f"]]]],[11,"sender",E,"Return a reference to the sender handle",17,[[["self"]],["sender"]]],[11,"sender_mut",E,"Return a mutable reference to the sender handle",17,[[["self"]],["sender"]]],[11,R[474],E,"Shutdown the pool once it becomes idle.",17,[[],[R[24]]]],[11,R[24],E,"Shutdown the pool",17,[[],[R[24]]]],[11,R[475],E,"Shutdown the pool immediately",17,[[],[R[24]]]],[11,"id",E,"Returns a reference to the worker's identifier.",18,[[["self"]],[R[193]]]],[11,"run",E,"Run the worker",18,[[["self"]]]],[11,"to_usize",E,"Returns this identifier represented as an integer.",19,[[["self"]],[R[1]]]],[8,R[476],R[164],R[477],N,N],[10,"spawn",E,R[478],20,[[["self"],["pin",["box"]],["box",["future"]]],[[R[20],[R[178]]],[R[178]]]]],[11,"status",E,R[184],20,[[["self"]],[[R[20],[R[178]]],[R[178]]]]],[8,R[203],E,R[479],N,N],[10,"spawn",E,R[480],21,[[["self"],[T]],[[R[20],[R[178]]],[R[178]]]]],[11,"status",E,R[184],21,[[["self"]],[[R[20],[R[178]]],[R[178]]]]],[11,"into",E,E,22,[[],[U]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[25],E,E,22,[[[U]],[R[20]]]],[11,R[26],E,E,22,[[],[R[20]]]],[11,R[27],E,E,22,[[["self"]],[T]]],[11,R[29],E,E,22,[[["self"]],[T]]],[11,R[28],E,E,22,[[["self"]],[R[30]]]],[11,R[210],E,E,22,[[["f"],[R[19]],["pin"]],["poll"]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[25],E,E,0,[[[U]],[R[20]]]],[11,R[26],E,E,0,[[],[R[20]]]],[11,R[27],E,E,0,[[["self"]],[T]]],[11,R[29],E,E,0,[[["self"]],[T]]],[11,R[28],E,E,0,[[["self"]],[R[30]]]],[11,"into",E,E,23,[[],[U]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[103],E,E,23,[[["self"]],["string"]]],[11,R[25],E,E,23,[[[U]],[R[20]]]],[11,R[26],E,E,23,[[],[R[20]]]],[11,R[27],E,E,23,[[["self"]],[T]]],[11,R[29],E,E,23,[[["self"]],[T]]],[11,R[28],E,E,23,[[["self"]],[R[30]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[103],E,E,1,[[["self"]],["string"]]],[11,R[25],E,E,1,[[[U]],[R[20]]]],[11,R[26],E,E,1,[[],[R[20]]]],[11,R[27],E,E,1,[[["self"]],[T]]],[11,R[29],E,E,1,[[["self"]],[T]]],[11,R[28],E,E,1,[[["self"]],[R[30]]]],[11,R[101],E,E,2,[[["self"]],[T]]],[11,R[100],E,E,2,[[["self"],[T]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[25],E,E,2,[[[U]],[R[20]]]],[11,R[26],E,E,2,[[],[R[20]]]],[11,R[27],E,E,2,[[["self"]],[T]]],[11,R[29],E,E,2,[[["self"]],[T]]],[11,R[28],E,E,2,[[["self"]],[R[30]]]],[11,"into",R[185],E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[25],E,E,5,[[[U]],[R[20]]]],[11,R[26],E,E,5,[[],[R[20]]]],[11,R[27],E,E,5,[[["self"]],[T]]],[11,R[29],E,E,5,[[["self"]],[T]]],[11,R[28],E,E,5,[[["self"]],[R[30]]]],[11,"into",E,E,24,[[],[U]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[25],E,E,24,[[[U]],[R[20]]]],[11,R[26],E,E,24,[[],[R[20]]]],[11,R[27],E,E,24,[[["self"]],[T]]],[11,R[29],E,E,24,[[["self"]],[T]]],[11,R[28],E,E,24,[[["self"]],[R[30]]]],[11,R[101],E,E,25,[[["self"]],[T]]],[11,R[100],E,E,25,[[["self"],[T]]]],[11,"into",E,E,25,[[],[U]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[25],E,E,25,[[[U]],[R[20]]]],[11,R[26],E,E,25,[[],[R[20]]]],[11,R[27],E,E,25,[[["self"]],[T]]],[11,R[29],E,E,25,[[["self"]],[T]]],[11,R[28],E,E,25,[[["self"]],[R[30]]]],[11,"into",R[186],E,26,[[],[U]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[25],E,E,26,[[[U]],[R[20]]]],[11,R[26],E,E,26,[[],[R[20]]]],[11,R[27],E,E,26,[[["self"]],[T]]],[11,R[29],E,E,26,[[["self"]],[T]]],[11,R[28],E,E,26,[[["self"]],[R[30]]]],[11,R[210],E,E,26,[[["f"],[R[19]],["pin"]],["poll"]]],[11,"into",R[187],E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[25],E,E,7,[[[U]],[R[20]]]],[11,R[26],E,E,7,[[],[R[20]]]],[11,R[27],E,E,7,[[["self"]],[T]]],[11,R[29],E,E,7,[[["self"]],[T]]],[11,R[28],E,E,7,[[["self"]],[R[30]]]],[11,R[101],E,E,10,[[["self"]],[T]]],[11,R[100],E,E,10,[[["self"],[T]]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[25],E,E,10,[[[U]],[R[20]]]],[11,R[26],E,E,10,[[],[R[20]]]],[11,R[27],E,E,10,[[["self"]],[T]]],[11,R[29],E,E,10,[[["self"]],[T]]],[11,R[28],E,E,10,[[["self"]],[R[30]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[25],E,E,6,[[[U]],[R[20]]]],[11,R[26],E,E,6,[[],[R[20]]]],[11,R[27],E,E,6,[[["self"]],[T]]],[11,R[29],E,E,6,[[["self"]],[T]]],[11,R[28],E,E,6,[[["self"]],[R[30]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[25],E,E,8,[[[U]],[R[20]]]],[11,R[26],E,E,8,[[],[R[20]]]],[11,R[27],E,E,8,[[["self"]],[T]]],[11,R[29],E,E,8,[[["self"]],[T]]],[11,R[28],E,E,8,[[["self"]],[R[30]]]],[11,"into",E,E,27,[[],[U]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[103],E,E,27,[[["self"]],["string"]]],[11,R[25],E,E,27,[[[U]],[R[20]]]],[11,R[26],E,E,27,[[],[R[20]]]],[11,R[27],E,E,27,[[["self"]],[T]]],[11,R[29],E,E,27,[[["self"]],[T]]],[11,R[28],E,E,27,[[["self"]],[R[30]]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[103],E,E,11,[[["self"]],["string"]]],[11,R[25],E,E,11,[[[U]],[R[20]]]],[11,R[26],E,E,11,[[],[R[20]]]],[11,R[27],E,E,11,[[["self"]],[T]]],[11,R[29],E,E,11,[[["self"]],[T]]],[11,R[28],E,E,11,[[["self"]],[R[30]]]],[11,"into",E,E,28,[[],[U]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[103],E,E,28,[[["self"]],["string"]]],[11,R[25],E,E,28,[[[U]],[R[20]]]],[11,R[26],E,E,28,[[],[R[20]]]],[11,R[27],E,E,28,[[["self"]],[T]]],[11,R[29],E,E,28,[[["self"]],[T]]],[11,R[28],E,E,28,[[["self"]],[R[30]]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[103],E,E,12,[[["self"]],["string"]]],[11,R[25],E,E,12,[[[U]],[R[20]]]],[11,R[26],E,E,12,[[],[R[20]]]],[11,R[27],E,E,12,[[["self"]],[T]]],[11,R[29],E,E,12,[[["self"]],[T]]],[11,R[28],E,E,12,[[["self"]],[R[30]]]],[11,R[101],E,E,9,[[["self"]],[T]]],[11,R[100],E,E,9,[[["self"],[T]]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[25],E,E,9,[[[U]],[R[20]]]],[11,R[26],E,E,9,[[],[R[20]]]],[11,R[27],E,E,9,[[["self"]],[T]]],[11,R[29],E,E,9,[[["self"]],[T]]],[11,R[28],E,E,9,[[["self"]],[R[30]]]],[11,"into",R[182],E,29,[[],[U]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[103],E,E,29,[[["self"]],["string"]]],[11,R[25],E,E,29,[[[U]],[R[20]]]],[11,R[26],E,E,29,[[],[R[20]]]],[11,R[27],E,E,29,[[["self"]],[T]]],[11,R[29],E,E,29,[[["self"]],[T]]],[11,R[28],E,E,29,[[["self"]],[R[30]]]],[11,"into",E,E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[25],E,E,14,[[[U]],[R[20]]]],[11,R[26],E,E,14,[[],[R[20]]]],[11,R[27],E,E,14,[[["self"]],[T]]],[11,R[29],E,E,14,[[["self"]],[T]]],[11,R[28],E,E,14,[[["self"]],[R[30]]]],[11,R[101],E,E,15,[[["self"]],[T]]],[11,R[100],E,E,15,[[["self"],[T]]]],[11,"into",E,E,15,[[],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[25],E,E,15,[[[U]],[R[20]]]],[11,R[26],E,E,15,[[],[R[20]]]],[11,R[27],E,E,15,[[["self"]],[T]]],[11,R[29],E,E,15,[[["self"]],[T]]],[11,R[28],E,E,15,[[["self"]],[R[30]]]],[11,"into",E,E,16,[[],[U]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[25],E,E,16,[[[U]],[R[20]]]],[11,R[26],E,E,16,[[],[R[20]]]],[11,R[27],E,E,16,[[["self"]],[T]]],[11,R[29],E,E,16,[[["self"]],[T]]],[11,R[28],E,E,16,[[["self"]],[R[30]]]],[11,"into",E,E,17,[[],[U]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[25],E,E,17,[[[U]],[R[20]]]],[11,R[26],E,E,17,[[],[R[20]]]],[11,R[27],E,E,17,[[["self"]],[T]]],[11,R[29],E,E,17,[[["self"]],[T]]],[11,R[28],E,E,17,[[["self"]],[R[30]]]],[11,"into",E,E,18,[[],[U]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[25],E,E,18,[[[U]],[R[20]]]],[11,R[26],E,E,18,[[],[R[20]]]],[11,R[27],E,E,18,[[["self"]],[T]]],[11,R[29],E,E,18,[[["self"]],[T]]],[11,R[28],E,E,18,[[["self"]],[R[30]]]],[11,R[101],E,E,19,[[["self"]],[T]]],[11,R[100],E,E,19,[[["self"],[T]]]],[11,"into",E,E,19,[[],[U]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[25],E,E,19,[[[U]],[R[20]]]],[11,R[26],E,E,19,[[],[R[20]]]],[11,R[27],E,E,19,[[["self"]],[T]]],[11,R[29],E,E,19,[[["self"]],[T]]],[11,R[28],E,E,19,[[["self"]],[R[30]]]],[11,"into",R[188],E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[25],E,E,13,[[[U]],[R[20]]]],[11,R[26],E,E,13,[[],[R[20]]]],[11,R[27],E,E,13,[[["self"]],[T]]],[11,R[29],E,E,13,[[["self"]],[T]]],[11,R[28],E,E,13,[[["self"]],[R[30]]]],[11,"into",E,E,30,[[],[U]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[25],E,E,30,[[[U]],[R[20]]]],[11,R[26],E,E,30,[[],[R[20]]]],[11,R[27],E,E,30,[[["self"]],[T]]],[11,R[29],E,E,30,[[["self"]],[T]]],[11,R[28],E,E,30,[[["self"]],[R[30]]]],[11,"into",E,E,31,[[],[U]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[103],E,E,31,[[["self"]],["string"]]],[11,R[25],E,E,31,[[[U]],[R[20]]]],[11,R[26],E,E,31,[[],[R[20]]]],[11,R[27],E,E,31,[[["self"]],[T]]],[11,R[29],E,E,31,[[["self"]],[T]]],[11,R[28],E,E,31,[[["self"]],[R[30]]]],[11,"poll",R[164],E,22,[[["pin",[R[189]]],[R[189]],[R[19]]],["poll"]]],[11,"fmt",E,E,22,[[["self"],[R[43]]],[[R[20],["error"]],["error"]]]],[11,"spawn",E,E,2,[[["self"],["pin",["box"]],["box",["future"]]],[[R[20],[R[178]]],[R[178]]]]],[11,"status",E,E,2,[[["self"]],[[R[20],[R[178]]],[R[178]]]]],[11,"spawn",R[187],E,7,[[["self"],["pin",["box"]],["box",["future"]]],[[R[20],[R[178]]],[R[178]]]]],[11,"spawn",E,E,10,[[["self"],["pin",["box"]],["box",["future"]]],[[R[20],[R[178]]],[R[178]]]]],[11,"status",R[182],E,15,[[["self"]],[[R[20],[R[178]]],[R[178]]]]],[11,"spawn",E,E,15,[[["self"],["pin",["box"]],["box",["future"]]],[[R[20],[R[178]]],[R[178]]]]],[11,"unpark",R[185],E,5,[[["self"]]]],[11,"park",E,E,5,[[["self"]],[R[20]]]],[11,R[190],E,E,5,[[["self"],[R[167]]],[R[20]]]],[11,"unpark",R[188],E,13,[[["self"]]]],[11,"park",E,E,13,[[["self"]],[R[20]]]],[11,R[190],E,E,13,[[["self"],[R[167]]],[R[20]]]],[11,"unpark",R[185],E,25,[[["self"]]]],[11,"unpark",R[188],E,30,[[["self"]]]],[11,"spawn",R[164],E,2,[[["self"],[T]],[[R[20],[R[178]]],[R[178]]]]],[11,"status",E,E,2,[[["self"]],[[R[20],[R[178]]],[R[178]]]]],[11,"spawn",R[187],E,7,[[["self"],[T]],[[R[20],[R[178]]],[R[178]]]]],[11,"spawn",E,E,10,[[["self"],["f"]],[[R[20],[R[178]]],[R[178]]]]],[11,"status",R[182],E,15,[[["self"]],[[R[20],[R[178]]],[R[178]]]]],[11,"spawn",E,E,15,[[["self"],[T]],[[R[20],[R[178]]],[R[178]]]]],[11,"drop",R[164],E,0,[[["self"]]]],[11,"drop",R[187],E,7,[[["self"]]]],[11,"drop",R[182],E,17,[[["self"]]]],[11,"drop",E,E,18,[[["self"]]]],[11,R[148],R[185],E,5,[[],["self"]]],[11,R[148],R[187],E,7,[[],["self"]]],[11,R[148],R[188],E,13,[[],["self"]]],[11,R[148],R[182],E,14,[[],["self"]]],[11,R[148],E,E,17,[[],["self"]]],[11,"clone",R[164],E,2,[[["self"]],[R[191]]]],[11,"clone",R[185],E,25,[[["self"]],["unparkthread"]]],[11,"clone",R[187],E,10,[[["self"]],[R[192]]]],[11,"clone",E,E,9,[[["self"]],["handle"]]],[11,"clone",R[182],E,15,[[["self"]],["sender"]]],[11,"clone",E,E,19,[[["self"]],[R[193]]]],[11,"eq",E,E,19,[[["self"],[R[193]]],["bool"]]],[11,"ne",E,E,19,[[["self"],[R[193]]],["bool"]]],[11,"from",R[187],E,11,[[[R[163]]],["self"]]],[11,"from",E,E,12,[[[R[163]]],["self"]]],[11,"hash",R[182],E,19,[[["self"],["__h"]]]],[11,"fmt",R[164],E,23,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",E,E,0,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",E,E,1,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",E,E,2,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",R[185],E,5,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",E,E,24,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",E,E,25,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",R[186],E,26,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",R[187],E,10,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",E,E,6,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",E,E,27,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",E,E,11,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",E,E,28,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",E,E,12,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",E,E,7,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",E,E,8,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",E,E,9,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",R[188],E,13,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",E,E,30,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",E,E,31,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",R[182],E,29,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",E,E,14,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",E,E,15,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",E,E,16,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",E,E,17,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",E,E,18,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",E,E,19,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",R[164],E,23,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",E,E,1,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",R[187],E,27,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",E,E,11,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",E,E,28,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",E,E,12,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",R[188],E,31,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",R[182],E,29,[[["self"],[R[43]]],[R[20]]]],[11,"poll",R[186],E,26,[[["pin"],["self"],[R[19]]],["poll"]]],[11,"poll",R[182],E,16,[[["pin"],["self"],[R[19]]],["poll"]]],[11,"forget",R[164],"Drops this handle without canceling the underlying future.",22,[[]]],[11,"status",E,R[184],20,[[["self"]],[[R[20],[R[178]]],[R[178]]]]],[11,R[481],E,R[482],20,[[["self"],["fut"]],[[R[189]],[R[178]],[R[20],[R[189],R[178]]]]]],[11,"status",E,R[184],21,[[["self"]],[[R[20],[R[178]]],[R[178]]]]]],"p":[[3,"Enter"],[3,R[194]],[3,R[195]],[8,"Park"],[8,"Unpark"],[3,R[196]],[3,"Turn"],[3,R[197]],[3,"Entered"],[3,"Handle"],[3,R[198]],[3,R[199]],[3,R[200]],[3,R[201]],[3,R[377]],[3,"Sender"],[3,"Shutdown"],[3,R[202]],[3,"Worker"],[3,"WorkerId"],[8,R[476]],[8,R[203]],[3,R[204]],[3,R[205]],[3,R[180]],[3,R[206]],[3,"Blocking"],[3,R[458]],[3,R[207]],[3,R[208]],[3,R[209]],[3,R[180]]]};
searchIndex["tokio_fs"]={"doc":"Asynchronous file and standard stream adaptation.","i":[[3,"File","tokio_fs",R[483],N,N],[3,R[216],E,R[484],N,N],[3,"DirEntry",E,"Entries returned by the [`ReadDir`] stream.",N,N],[3,"ReadDir",E,"Stream of the entries in a directory.",N,N],[3,"Stderr",E,R[485],N,N],[3,"Stdin",E,R[486],N,N],[3,"Stdout",E,R[487],N,N],[5,R[488],E,R[489],N,[[["asref",["path"]],["path"]]]],[5,R[490],E,R[491],N,[[["asref",["path"]],["path"]]]],[5,R[492],E,R[493],N,[[["asref",["path"]],["path"]]]],[5,R[215],E,R[211],N,[[["p"]]]],[5,"read",E,R[494],N,[[["p"]]]],[5,"read_dir",E,R[495],N,[[["p"]]]],[5,R[496],E,R[497],N,[[["asref",["path"]],["path"]]]],[5,R[498],E,R[499],N,[[["asref",["path"]],["path"]]]],[5,R[500],E,R[501],N,[[["asref",["path"]],["path"]]]],[5,R[502],E,R[503],N,[[["asref",["path"]],["path"]]]],[5,"rename",E,R[504],N,[[["asref",["path"]],["path"]]]],[5,R[212],E,R[505],N,[[["asref",["path"]],["path"],[R[213]]]]],[5,"stderr",E,R[506],N,[[],["stderr"]]],[5,"stdin",E,R[507],N,[[],["stdin"]]],[5,"stdout",E,R[508],N,[[],["stdout"]]],[5,R[509],E,R[211],N,[[["p"]]]],[5,"write",E,R[510],N,[[["unpin"],["p"],["asref"]]]],[11,"open",E,R[511],0,[[["p"]]]],[11,"create",E,R[512],0,[[["p"]]]],[11,R[250],E,R[513],0,[[["file"]],["file"]]],[11,"seek",E,R[514],0,[[["seekfrom"],["self"]]]],[11,"sync_all",E,R[515],0,[[["self"]]]],[11,R[516],E,R[517],0,[[["self"]]]],[11,"set_len",E,R[518],0,[[["u64"],["self"]]]],[11,R[215],E,R[519],0,[[["self"]]]],[11,R[520],E,R[521],0,[[["self"]]]],[11,R[212],E,R[522],0,[[["self"],[R[213]]]]],[11,"new",E,R[523],1,[[],[R[214]]]],[11,"read",E,R[524],1,[[["self"],["bool"]],[R[214]]]],[11,"write",E,R[525],1,[[["self"],["bool"]],[R[214]]]],[11,"append",E,R[526],1,[[["self"],["bool"]],[R[214]]]],[11,"truncate",E,R[527],1,[[["self"],["bool"]],[R[214]]]],[11,"create",E,R[528],1,[[["self"],["bool"]],[R[214]]]],[11,R[529],E,R[530],1,[[["self"],["bool"]],[R[214]]]],[11,"open",E,R[531],1,[[["self"],["p"]]]],[0,"os",E,R[532],N,N],[0,"unix","tokio_fs::os",R[533],N,N],[5,"symlink","tokio_fs::os::unix",R[534],N,[[["asref",["path"]],["path"]]]],[11,"path","tokio_fs","Returns the full path to the file that this entry…",2,[[["self"]],["pathbuf"]]],[11,"file_name",E,"Returns the bare file name of this directory entry without…",2,[[["self"]],["osstring"]]],[11,R[215],E,"Return the metadata for the file that this entry points at.",2,[[["self"]]]],[11,"file_type",E,"Return the file type for the file that this entry points at.",2,[[["self"]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[25],E,E,0,[[[U]],[R[20]]]],[11,R[26],E,E,0,[[],[R[20]]]],[11,R[27],E,E,0,[[["self"]],[T]]],[11,R[29],E,E,0,[[["self"]],[T]]],[11,R[28],E,E,0,[[["self"]],[R[30]]]],[11,R[101],E,E,1,[[["self"]],[T]]],[11,R[100],E,E,1,[[["self"],[T]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[25],E,E,1,[[[U]],[R[20]]]],[11,R[26],E,E,1,[[],[R[20]]]],[11,R[27],E,E,1,[[["self"]],[T]]],[11,R[29],E,E,1,[[["self"]],[T]]],[11,R[28],E,E,1,[[["self"]],[R[30]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[25],E,E,2,[[[U]],[R[20]]]],[11,R[26],E,E,2,[[],[R[20]]]],[11,R[27],E,E,2,[[["self"]],[T]]],[11,R[29],E,E,2,[[["self"]],[T]]],[11,R[28],E,E,2,[[["self"]],[R[30]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[25],E,E,3,[[[U]],[R[20]]]],[11,R[26],E,E,3,[[],[R[20]]]],[11,R[27],E,E,3,[[["self"]],[T]]],[11,R[29],E,E,3,[[["self"]],[T]]],[11,R[28],E,E,3,[[["self"]],[R[30]]]],[11,R[99],E,E,3,[[["pin"],["s"],[R[19]]],[["poll",[R[98]]],[R[98],[R[20]]]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[25],E,E,4,[[[U]],[R[20]]]],[11,R[26],E,E,4,[[],[R[20]]]],[11,R[27],E,E,4,[[["self"]],[T]]],[11,R[29],E,E,4,[[["self"]],[T]]],[11,R[28],E,E,4,[[["self"]],[R[30]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[25],E,E,5,[[[U]],[R[20]]]],[11,R[26],E,E,5,[[],[R[20]]]],[11,R[27],E,E,5,[[["self"]],[T]]],[11,R[29],E,E,5,[[["self"]],[T]]],[11,R[28],E,E,5,[[["self"]],[R[30]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[25],E,E,6,[[[U]],[R[20]]]],[11,R[26],E,E,6,[[],[R[20]]]],[11,R[27],E,E,6,[[["self"]],[T]]],[11,R[29],E,E,6,[[["self"]],[T]]],[11,R[28],E,E,6,[[["self"]],[R[30]]]],[11,R[148],E,E,1,[[],["self"]]],[11,"clone",E,E,1,[[["self"]],[R[214]]]],[11,"from",E,E,0,[[["file"]],["self"]]],[11,"from",E,E,1,[[[R[214]]],[R[214]]]],[11,"fmt",E,E,0,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",E,E,1,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",E,E,3,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",E,E,2,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",E,E,4,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",E,E,5,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",E,E,6,[[["self"],[R[43]]],[R[20]]]],[11,"ino",E,E,2,[[["self"]],["u64"]]],[11,R[34],E,E,0,[[["self"],["pin"],[R[19]]],[[R[20],[R[1]]],["poll",[R[20]]]]]],[11,R[34],E,E,5,[[["self"],["pin"],[R[19]]],[[R[20],[R[1]]],["poll",[R[20]]]]]],[11,R[37],E,E,0,[[["self"],["pin"],[R[19]]],[[R[20],[R[1]]],["poll",[R[20]]]]]],[11,R[38],E,E,0,[[["pin"],["self"],[R[19]]],[[R[20],["error"]],["poll",[R[20]]]]]],[11,R[39],E,E,0,[[["pin"],["self"],[R[19]]],[[R[20],["error"]],["poll",[R[20]]]]]],[11,R[37],E,E,4,[[["self"],["pin"],[R[19]]],[[R[20],[R[1]]],["poll",[R[20]]]]]],[11,R[38],E,E,4,[[["pin"],["self"],[R[19]]],[[R[20],["error"]],["poll",[R[20]]]]]],[11,R[39],E,E,4,[[["pin"],["self"],[R[19]]],[[R[20],["error"]],["poll",[R[20]]]]]],[11,R[37],E,E,6,[[["self"],["pin"],[R[19]]],[[R[20],[R[1]]],["poll",[R[20]]]]]],[11,R[38],E,E,6,[[["pin"],["self"],[R[19]]],[[R[20],["error"]],["poll",[R[20]]]]]],[11,R[39],E,E,6,[[["pin"],["self"],[R[19]]],[[R[20],["error"]],["poll",[R[20]]]]]],[11,R[110],E,E,3,[[["pin"],["self"],[R[19]]],[["poll",[R[98]]],[R[98]]]]]],"p":[[3,"File"],[3,R[216]],[3,"DirEntry"],[3,"ReadDir"],[3,"Stderr"],[3,"Stdin"],[3,"Stdout"]]};
searchIndex["tokio_io"]={"doc":"Core I/O traits and combinators when working with Tokio.","i":[[8,"Buf",R[17],"Read bytes from a buffer.",N,N],[10,"remaining",E,"Returns the number of bytes between the current position…",0,[[["self"]],[R[1]]]],[10,"bytes",E,"Returns a slice starting at the current position and of…",0,[[["self"]]]],[11,"bytes_vec",E,"Fills `dst` with potentially multiple slices starting at…",0,[[["self"]],[R[1]]]],[10,"advance",E,"Advance the internal cursor of the Buf",0,[[["self"],[R[1]]]]],[11,"has_remaining",E,"Returns true if there are any more bytes to consume",0,[[["self"]],["bool"]]],[11,"copy_to_slice",E,"Copies bytes from `self` into `dst`.",0,[[["self"]]]],[11,"get_u8",E,"Gets an unsigned 8 bit integer from `self`.",0,[[["self"]],["u8"]]],[11,"get_i8",E,"Gets a signed 8 bit integer from `self`.",0,[[["self"]],["i8"]]],[11,"get_u16_be",E,"Gets an unsigned 16 bit integer from `self` in big-endian…",0,[[["self"]],["u16"]]],[11,"get_u16_le",E,"Gets an unsigned 16 bit integer from `self` in…",0,[[["self"]],["u16"]]],[11,"get_i16_be",E,"Gets a signed 16 bit integer from `self` in big-endian…",0,[[["self"]],["i16"]]],[11,"get_i16_le",E,"Gets a signed 16 bit integer from `self` in little-endian…",0,[[["self"]],["i16"]]],[11,"get_u32_be",E,R[0],0,[[["self"]],["u32"]]],[11,"get_u32_le",E,R[0],0,[[["self"]],["u32"]]],[11,"get_i32_be",E,"Gets a signed 32 bit integer from `self` in big-endian…",0,[[["self"]],["i32"]]],[11,"get_i32_le",E,"Gets a signed 32 bit integer from `self` in little-endian…",0,[[["self"]],["i32"]]],[11,"get_u64_be",E,"Gets an unsigned 64 bit integer from `self` in big-endian…",0,[[["self"]],["u64"]]],[11,"get_u64_le",E,"Gets an unsigned 64 bit integer from `self` in…",0,[[["self"]],["u64"]]],[11,"get_i64_be",E,"Gets a signed 64 bit integer from `self` in big-endian…",0,[[["self"]],["i64"]]],[11,"get_i64_le",E,"Gets a signed 64 bit integer from `self` in little-endian…",0,[[["self"]],["i64"]]],[11,"get_uint_be",E,"Gets an unsigned n-byte integer from `self` in big-endian…",0,[[["self"],[R[1]]],["u64"]]],[11,"get_uint_le",E,"Gets an unsigned n-byte integer from `self` in…",0,[[["self"],[R[1]]],["u64"]]],[11,"get_int_be",E,"Gets a signed n-byte integer from `self` in big-endian…",0,[[["self"],[R[1]]],["i64"]]],[11,"get_int_le",E,"Gets a signed n-byte integer from `self` in little-endian…",0,[[["self"],[R[1]]],["i64"]]],[11,"get_f32_be",E,R[2],0,[[["self"]],["f32"]]],[11,"get_f32_le",E,R[2],0,[[["self"]],["f32"]]],[11,"get_f64_be",E,R[3],0,[[["self"]],["f64"]]],[11,"get_f64_le",E,R[3],0,[[["self"]],["f64"]]],[11,"collect",E,"Transforms a `Buf` into a concrete buffer.",0,[[],["b"]]],[11,"take",E,"Creates an adaptor which will read at most `limit` bytes…",0,[[[R[1]]],["take"]]],[11,"chain",E,"Creates an adaptor which will chain this buffer with…",0,[[[U]],["chain"]]],[11,R[8],E,"Creates a \"by reference\" adaptor for this instance of `Buf`.",0,[[["self"]],["self"]]],[11,R[4],E,"Creates an adaptor which implements the `Read` trait for…",0,[[],[R[4]]]],[11,"iter",E,"Returns an iterator over the bytes contained by the buffer.",0,[[],["iter"]]],[8,"BufMut",E,"A trait for values that provide sequential write access to…",N,N],[10,"remaining_mut",E,"Returns the number of bytes that can be written from the…",1,[[["self"]],[R[1]]]],[10,"advance_mut",E,"Advance the internal cursor of the BufMut",1,[[["self"],[R[1]]]]],[11,"has_remaining_mut",E,"Returns true if there is space in `self` for more bytes.",1,[[["self"]],["bool"]]],[10,"bytes_mut",E,"Returns a mutable slice starting at the current BufMut…",1,[[["self"]]]],[11,"bytes_vec_mut",E,"Fills `dst` with potentially multiple mutable slices…",1,[[["self"]],[R[1]]]],[11,"put",E,R[5],1,[[["self"],[T]]]],[11,"put_slice",E,R[5],1,[[["self"]]]],[11,"put_u8",E,"Writes an unsigned 8 bit integer to `self`.",1,[[["self"],["u8"]]]],[11,"put_i8",E,"Writes a signed 8 bit integer to `self`.",1,[[["self"],["i8"]]]],[11,"put_u16_be",E,"Writes an unsigned 16 bit integer to `self` in big-endian…",1,[[["self"],["u16"]]]],[11,"put_u16_le",E,"Writes an unsigned 16 bit integer to `self` in…",1,[[["self"],["u16"]]]],[11,"put_i16_be",E,"Writes a signed 16 bit integer to `self` in big-endian…",1,[[["self"],["i16"]]]],[11,"put_i16_le",E,"Writes a signed 16 bit integer to `self` in little-endian…",1,[[["self"],["i16"]]]],[11,"put_u32_be",E,"Writes an unsigned 32 bit integer to `self` in big-endian…",1,[[["self"],["u32"]]]],[11,"put_u32_le",E,"Writes an unsigned 32 bit integer to `self` in…",1,[[["self"],["u32"]]]],[11,"put_i32_be",E,"Writes a signed 32 bit integer to `self` in big-endian…",1,[[["self"],["i32"]]]],[11,"put_i32_le",E,"Writes a signed 32 bit integer to `self` in little-endian…",1,[[["self"],["i32"]]]],[11,"put_u64_be",E,"Writes an unsigned 64 bit integer to `self` in the…",1,[[["self"],["u64"]]]],[11,"put_u64_le",E,"Writes an unsigned 64 bit integer to `self` in…",1,[[["self"],["u64"]]]],[11,"put_i64_be",E,"Writes a signed 64 bit integer to `self` in the big-endian…",1,[[["self"],["i64"]]]],[11,"put_i64_le",E,"Writes a signed 64 bit integer to `self` in little-endian…",1,[[["self"],["i64"]]]],[11,"put_uint_be",E,"Writes an unsigned n-byte integer to `self` in big-endian…",1,[[["self"],["u64"],[R[1]]]]],[11,"put_uint_le",E,"Writes an unsigned n-byte integer to `self` in the…",1,[[["self"],["u64"],[R[1]]]]],[11,"put_int_be",E,"Writes a signed n-byte integer to `self` in big-endian…",1,[[["self"],["i64"],[R[1]]]]],[11,"put_int_le",E,"Writes a signed n-byte integer to `self` in little-endian…",1,[[["self"],["i64"],[R[1]]]]],[11,"put_f32_be",E,R[6],1,[[["self"],["f32"]]]],[11,"put_f32_le",E,R[6],1,[[["self"],["f32"]]]],[11,"put_f64_be",E,R[7],1,[[["self"],["f64"]]]],[11,"put_f64_le",E,R[7],1,[[["self"],["f64"]]]],[11,R[8],E,"Creates a \"by reference\" adaptor for this instance of…",1,[[["self"]],["self"]]],[11,R[9],E,"Creates an adaptor which implements the `Write` trait for…",1,[[],[R[9]]]],[3,R[70],E,R[535],N,N],[3,R[71],E,"Wraps a type that is [`AsyncWrite`] and [`AsyncRead`], and…",N,N],[3,R[72],E,R[536],N,N],[3,"Copy",E,"A future that asynchronously copies the entire contents of…",N,N],[3,"Empty",E,R[537],N,N],[3,"Repeat",E,R[538],N,N],[3,"Sink",E,R[539],N,N],[5,"copy",E,"Asynchronously copies the entire contents of a reader into…",N,[[["r"],["w"]],[["copy"],["sized"]]]],[5,"empty",E,R[540],N,[[],["empty"]]],[5,"repeat",E,R[541],N,[[["u8"]],["repeat"]]],[5,"sink",E,R[542],N,[[],["sink"]]],[11,"new",E,R[543],2,[[["r"]],["self"]]],[11,R[12],E,R[544],2,[[[R[1]],["r"]],["self"]]],[11,R[13],E,R[545],2,[[["self"]],["r"]]],[11,R[14],E,R[546],2,[[["self"]],["r"]]],[11,R[10],E,R[547],2,[[["pin"],["self"]],[["pin"],["r"]]]],[11,R[11],E,R[548],2,[[],["r"]]],[11,"buffer",E,R[15],2,[[["self"]]]],[11,"new",E,"Wrap a type in both [`BufWriter`] and [`BufReader`].",3,[[["rw"]],["bufstream"]]],[11,R[13],E,"Gets a reference to the underlying I/O object.",3,[[["self"]],["rw"]]],[11,R[14],E,"Gets a mutable reference to the underlying I/O object.",3,[[["self"]],["rw"]]],[11,R[10],E,"Gets a pinned mutable reference to the underlying I/O…",3,[[["pin"],["self"]],[["rw"],["pin"]]]],[11,R[11],E,"Consumes this `BufStream`, returning the underlying I/O…",3,[[],["rw"]]],[11,"new",E,R[549],4,[[["w"]],["self"]]],[11,R[12],E,R[550],4,[[["w"],[R[1]]],["self"]]],[11,R[13],E,R[551],4,[[["self"]],["w"]]],[11,R[14],E,R[552],4,[[["self"]],["w"]]],[11,R[10],E,R[553],4,[[["pin"],["self"]],[["pin"],["w"]]]],[11,R[11],E,R[554],4,[[],["w"]]],[11,"buffer",E,R[15],4,[[["self"]]]],[0,"split",E,R[16],N,N],[3,R[73],R[31],"The readable half of a value returned from `split`.",N,N],[3,R[80],E,"The writable half of a value returned from `split`.",N,N],[5,"split",E,R[16],N,[[[T]]]],[11,"unsplit",E,"Reunite with a previously split `WriteHalf`.",5,[[[R[372]]],[T]]],[8,R[74],R[17],R[18],N,N],[10,R[32],E,R[325],6,[[["pin"],["self"],[R[19]]],[["poll",[R[20]]],[R[20]]]]],[10,R[33],E,R[326],6,[[["pin"],["self"],[R[1]]]]],[8,R[75],E,R[18],N,N],[11,R[35],E,R[44],7,[[["self"]],["bool"]]],[10,R[34],E,R[327],7,[[["self"],["pin"],[R[19]]],[[R[20],[R[1]]],["poll",[R[20]]]]]],[11,R[36],E,R[45],7,[[["self"],["b"],["pin"],[R[19]]],[[R[20],[R[1]]],["poll",[R[20]]]]]],[8,R[76],E,R[328],N,N],[10,R[37],E,R[329],8,[[["self"],["pin"],[R[19]]],[[R[20],[R[1],"error"]],["poll",[R[20]]]]]],[10,R[38],E,R[330],8,[[["pin"],["self"],[R[19]]],[[R[20],["error"]],["poll",[R[20]]]]]],[10,R[39],E,R[331],8,[[["pin"],["self"],[R[19]]],[[R[20],["error"]],["poll",[R[20]]]]]],[11,R[40],E,R[46],8,[[["self"],["b"],["pin"],[R[19]]],[[R[20],[R[1],"error"]],["poll",[R[20]]]]]],[8,R[77],E,R[22],N,N],[11,R[47],E,R[21],9,[[["vec"],["self"],["u8"]],[R[48]]]],[11,R[49],E,R[21],9,[[["self"],["string"]],[R[50]]]],[11,"split",E,R[51],9,[[["u8"]],["split"]]],[11,"lines",E,R[52],9,[[],["lines"]]],[8,R[78],E,R[22],N,N],[11,"chain",E,R[53],10,[[["r"]],["chain"]]],[11,"copy",E,R[54],10,[[["self"],["w"]],[["copy"],["sized"]]]],[11,"read",E,R[55],10,[[["self"]],["read"]]],[11,R[56],E,R[57],10,[[["self"]],[R[58]]]],[11,R[59],E,R[23],10,[[["vec"],["self"]],[R[60]]]],[11,R[61],E,R[23],10,[[["self"],["string"]],[R[62]]]],[11,"take",E,R[63],10,[[["u64"]],["take"]]],[8,R[79],E,R[22],N,N],[11,"write",E,R[64],11,[[["self"]],["write"]]],[11,R[65],E,R[66],11,[[["self"]],[R[67]]]],[11,"flush",E,R[68],11,[[["self"]],["flush"]]],[11,R[24],E,R[69],11,[[["self"]],[R[24]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[25],E,E,2,[[[U]],[R[20]]]],[11,R[26],E,E,2,[[],[R[20]]]],[11,R[27],E,E,2,[[["self"]],[T]]],[11,R[29],E,E,2,[[["self"]],[T]]],[11,R[28],E,E,2,[[["self"]],[R[30]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[25],E,E,3,[[[U]],[R[20]]]],[11,R[26],E,E,3,[[],[R[20]]]],[11,R[27],E,E,3,[[["self"]],[T]]],[11,R[29],E,E,3,[[["self"]],[T]]],[11,R[28],E,E,3,[[["self"]],[R[30]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[25],E,E,4,[[[U]],[R[20]]]],[11,R[26],E,E,4,[[],[R[20]]]],[11,R[27],E,E,4,[[["self"]],[T]]],[11,R[29],E,E,4,[[["self"]],[T]]],[11,R[28],E,E,4,[[["self"]],[R[30]]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[25],E,E,12,[[[U]],[R[20]]]],[11,R[26],E,E,12,[[],[R[20]]]],[11,R[27],E,E,12,[[["self"]],[T]]],[11,R[29],E,E,12,[[["self"]],[T]]],[11,R[28],E,E,12,[[["self"]],[R[30]]]],[11,R[210],E,E,12,[[["f"],[R[19]],["pin"]],["poll"]]],[11,"into",E,E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[25],E,E,13,[[[U]],[R[20]]]],[11,R[26],E,E,13,[[],[R[20]]]],[11,R[27],E,E,13,[[["self"]],[T]]],[11,R[29],E,E,13,[[["self"]],[T]]],[11,R[28],E,E,13,[[["self"]],[R[30]]]],[11,"into",E,E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[25],E,E,14,[[[U]],[R[20]]]],[11,R[26],E,E,14,[[],[R[20]]]],[11,R[27],E,E,14,[[["self"]],[T]]],[11,R[29],E,E,14,[[["self"]],[T]]],[11,R[28],E,E,14,[[["self"]],[R[30]]]],[11,"into",E,E,15,[[],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[25],E,E,15,[[[U]],[R[20]]]],[11,R[26],E,E,15,[[],[R[20]]]],[11,R[27],E,E,15,[[["self"]],[T]]],[11,R[29],E,E,15,[[["self"]],[T]]],[11,R[28],E,E,15,[[["self"]],[R[30]]]],[11,"into",R[31],E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[25],E,E,5,[[[U]],[R[20]]]],[11,R[26],E,E,5,[[],[R[20]]]],[11,R[27],E,E,5,[[["self"]],[T]]],[11,R[29],E,E,5,[[["self"]],[T]]],[11,R[28],E,E,5,[[["self"]],[R[30]]]],[11,"into",E,E,16,[[],[U]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[25],E,E,16,[[[U]],[R[20]]]],[11,R[26],E,E,16,[[],[R[20]]]],[11,R[27],E,E,16,[[["self"]],[T]]],[11,R[29],E,E,16,[[["self"]],[T]]],[11,R[28],E,E,16,[[["self"]],[R[30]]]],[11,R[32],R[17],E,2,[[["pin"],["self"],[R[19]]],[["poll",[R[20]]],[R[20]]]]],[11,R[33],E,E,2,[[["pin"],["self"],[R[1]]]]],[11,R[32],E,E,3,[[["pin"],["self"],[R[19]]],[["poll",[R[20]]],[R[20]]]]],[11,R[33],E,E,3,[[["pin"],["self"],[R[1]]]]],[11,R[32],E,E,4,[[["pin"],["self"],[R[19]]],[["poll",[R[20]]],[R[20]]]]],[11,R[33],E,E,4,[[["pin"],["self"],[R[1]]]]],[11,R[32],E,E,13,[[["pin"],["self"],[R[19]]],[["poll",[R[20]]],[R[20]]]]],[11,R[33],E,E,13,[[["pin"],["self"],[R[1]]]]],[11,R[34],E,E,2,[[["self"],["pin"],[R[19]]],[[R[20],[R[1]]],["poll",[R[20]]]]]],[11,R[35],E,E,2,[[["self"]],["bool"]]],[11,R[34],E,E,3,[[["self"],["pin"],[R[19]]],[[R[20],[R[1]]],["poll",[R[20]]]]]],[11,R[35],E,E,3,[[["self"]],["bool"]]],[11,R[34],E,E,4,[[["self"],["pin"],[R[19]]],[[R[20],[R[1]]],["poll",[R[20]]]]]],[11,R[35],E,E,4,[[["self"]],["bool"]]],[11,R[34],E,E,13,[[["self"],["pin"],[R[19]]],[[R[20],[R[1]]],["poll",[R[20]]]]]],[11,R[34],E,E,14,[[["self"],["pin"],[R[19]]],[[R[20],[R[1]]],["poll",[R[20]]]]]],[11,R[34],R[31],E,5,[[["self"],["pin"],[R[19]]],[[R[20],[R[1]]],["poll",[R[20]]]]]],[11,R[36],E,E,5,[[["self"],["b"],["pin"],[R[19]]],[[R[20],[R[1]]],["poll",[R[20]]]]]],[11,R[37],R[17],E,2,[[["self"],["pin"],[R[19]]],[[R[20],[R[1]]],["poll",[R[20]]]]]],[11,R[38],E,E,2,[[["pin"],["self"],[R[19]]],[["poll",[R[20]]],[R[20]]]]],[11,R[39],E,E,2,[[["pin"],["self"],[R[19]]],[["poll",[R[20]]],[R[20]]]]],[11,R[37],E,E,3,[[["self"],["pin"],[R[19]]],[[R[20],[R[1]]],["poll",[R[20]]]]]],[11,R[38],E,E,3,[[["pin"],["self"],[R[19]]],[["poll",[R[20]]],[R[20]]]]],[11,R[39],E,E,3,[[["pin"],["self"],[R[19]]],[["poll",[R[20]]],[R[20]]]]],[11,R[37],E,E,4,[[["self"],["pin"],[R[19]]],[[R[20],[R[1]]],["poll",[R[20]]]]]],[11,R[38],E,E,4,[[["pin"],["self"],[R[19]]],[["poll",[R[20]]],[R[20]]]]],[11,R[39],E,E,4,[[["pin"],["self"],[R[19]]],[["poll",[R[20]]],[R[20]]]]],[11,R[37],E,E,15,[[["self"],["pin"],[R[19]]],[[R[20],[R[1],"error"]],["poll",[R[20]]]]]],[11,R[38],E,E,15,[[["pin"],["self"],[R[19]]],[[R[20],["error"]],["poll",[R[20]]]]]],[11,R[39],E,E,15,[[["pin"],["self"],[R[19]]],[[R[20],["error"]],["poll",[R[20]]]]]],[11,R[37],R[31],E,16,[[["self"],["pin"],[R[19]]],[[R[20],[R[1],"error"]],["poll",[R[20]]]]]],[11,R[38],E,E,16,[[["pin"],["self"],[R[19]]],[[R[20],["error"]],["poll",[R[20]]]]]],[11,R[39],E,E,16,[[["pin"],["self"],[R[19]]],[[R[20],["error"]],["poll",[R[20]]]]]],[11,R[40],E,E,16,[[["self"],["b"],["pin"],[R[19]]],[[R[20],[R[1],"error"]],["poll",[R[20]]]]]],[11,"from",R[17],E,3,[[[R[42],[R[41]]],[R[41]]],["self"]]],[11,"from",E,E,3,[[[R[42]],[R[41],[R[42]]]],["self"]]],[11,"fmt",E,E,2,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",E,E,3,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",E,E,4,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",E,E,12,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",E,E,13,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",E,E,14,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",E,E,15,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",R[31],E,5,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",E,E,16,[[["self"],[R[43]]],[R[20]]]],[11,"poll",R[17],E,12,[[["pin"],["self"],[R[19]]],[[R[20],["u64"]],["poll",[R[20]]]]]],[11,R[35],E,R[44],7,[[["self"]],["bool"]]],[11,R[36],E,R[45],7,[[["self"],["b"],["pin"],[R[19]]],[[R[20],[R[1]]],["poll",[R[20]]]]]],[11,R[40],E,R[46],8,[[["self"],["b"],["pin"],[R[19]]],[[R[20],[R[1],"error"]],["poll",[R[20]]]]]],[11,R[47],E,R[21],9,[[["vec"],["self"],["u8"]],[R[48]]]],[11,R[49],E,R[21],9,[[["self"],["string"]],[R[50]]]],[11,"split",E,R[51],9,[[["u8"]],["split"]]],[11,"lines",E,R[52],9,[[],["lines"]]],[11,"chain",E,R[53],10,[[["r"]],["chain"]]],[11,"copy",E,R[54],10,[[["self"],["w"]],[["copy"],["sized"]]]],[11,"read",E,R[55],10,[[["self"]],["read"]]],[11,R[56],E,R[57],10,[[["self"]],[R[58]]]],[11,R[59],E,R[23],10,[[["vec"],["self"]],[R[60]]]],[11,R[61],E,R[23],10,[[["self"],["string"]],[R[62]]]],[11,"take",E,R[63],10,[[["u64"]],["take"]]],[11,"write",E,R[64],11,[[["self"]],["write"]]],[11,R[65],E,R[66],11,[[["self"]],[R[67]]]],[11,"flush",E,R[68],11,[[["self"]],["flush"]]],[11,R[24],E,R[69],11,[[["self"]],[R[24]]]]],"p":[[8,"Buf"],[8,"BufMut"],[3,R[70]],[3,R[71]],[3,R[72]],[3,R[73]],[8,R[74]],[8,R[75]],[8,R[76]],[8,R[77]],[8,R[78]],[8,R[79]],[3,"Copy"],[3,"Empty"],[3,"Repeat"],[3,"Sink"],[3,R[80]]]};
searchIndex["tokio_macros"]={"doc":"Macros for use with Tokio","i":[[23,"main","tokio_macros",R[555],N,N],[23,"test",E,R[556],N,N]],"p":[]};
searchIndex["tokio_net"]={"doc":R[241],"i":[[0,"driver",R[242],R[241],N,N],[3,R[301],R[276],"Guard that resets current reactor on drop.",N,N],[3,"Handle",E,"A reference to a reactor.",N,N],[3,"Reactor",E,"The core reactor, or event loop.",N,N],[3,R[288],E,"Associates an I/O resource with the reactor instance that…",N,N],[5,R[226],E,"Sets handle for a default reactor, returning guard that…",N,[[["handle"]],[R[228]]]],[11,"new",E,"Creates a new event loop, returning any error that…",0,[[],[["reactor"],[R[20],["reactor"]]]]],[11,"handle",E,"Returns a handle to this event loop which can be sent…",0,[[["self"]],["handle"]]],[11,"turn",E,"Performs one iteration of the event loop, blocking on…",0,[[["self"],[R[98],[R[167]]],[R[167]]],[["turn"],[R[20],["turn"]]]]],[11,"is_idle",E,"Returns true if the reactor is currently idle.",0,[[["self"]],["bool"]]],[11,"new",E,"Create a new `Registration`.",1,[[],["registration"]]],[11,"register",E,"Register the I/O resource with the default reactor.",1,[[["self"],[T]],[["bool"],[R[20],["bool"]]]]],[11,"deregister",E,"Deregister the I/O resource from the reactor it is…",1,[[["self"],[T]],[R[20]]]],[11,"register_with",E,"Register the I/O resource with the specified reactor.",1,[[["self"],["handle"],[T]],[["bool"],[R[20],["bool"]]]]],[11,R[243],E,"Poll for events on the I/O resource's read readiness stream.",1,[[["self"],[R[19]]],[["poll",[R[20]]],[R[20],["ready"]]]]],[11,"take_read_ready",E,"Consume any pending read readiness event.",1,[[["self"]],[[R[98],["ready"]],[R[20],[R[98]]]]]],[11,R[244],E,"Poll for events on the I/O resource's write readiness…",1,[[["self"],[R[19]]],[["poll",[R[20]]],[R[20],["ready"]]]]],[11,"take_write_ready",E,"Consume any pending write readiness event.",1,[[["self"]],[[R[98],["ready"]],[R[20],[R[98]]]]]],[0,"util",R[242],"Utilities for implementing networking types.",N,N],[3,R[289],R[277],"Associates an I/O resource that implements the…",N,N],[11,"new",E,"Creates a new `PollEvented` associated with the default…",2,[[["e"]],["pollevented"]]],[11,"new_with_handle",E,"Creates a new `PollEvented` associated with the specified…",2,[[["handle"],["e"]],[R[20]]]],[11,R[13],E,"Returns a shared reference to the underlying I/O object…",2,[[["self"]],["e"]]],[11,R[14],E,"Returns a mutable reference to the underlying I/O object…",2,[[["self"]],["e"]]],[11,R[11],E,"Consumes self, returning the inner I/O object",2,[[],[R[20]]]],[11,R[243],E,"Check the I/O resource's read readiness state.",2,[[["self"],["ready"],[R[19]]],[["poll",[R[20]]],[R[20],["ready"]]]]],[11,"clear_read_ready",E,"Clears the I/O resource's read readiness state and…",2,[[["self"],["ready"],[R[19]]],[R[20]]]],[11,R[244],E,"Check the I/O resource's write readiness state.",2,[[["self"],[R[19]]],[["poll",[R[20]]],[R[20],["ready"]]]]],[11,"clear_write_ready",E,"Resets the I/O resource's write readiness state and…",2,[[["self"],[R[19]]],[R[20]]]],[0,"process",R[242],R[557],N,N],[3,"Command",R[278],R[558],N,N],[3,"Child",E,R[559],N,N],[3,R[302],E,R[560],N,N],[3,R[303],E,R[561],N,N],[3,R[304],E,R[562],N,N],[11,"new",E,R[563],3,[[["asref",["osstr"]],["osstr"]],[R[245]]]],[11,"arg",E,R[564],3,[[["self"],["asref",["osstr"]],["osstr"]],[R[245]]]],[11,"args",E,R[565],3,[[["self"],["i"]],[R[245]]]],[11,"env",E,R[566],3,[[["self"],["k"],["v"]],[R[245]]]],[11,"envs",E,R[567],3,[[["self"],["i"]],[R[245]]]],[11,R[568],E,R[569],3,[[["self"],["asref",["osstr"]],["osstr"]],[R[245]]]],[11,R[570],E,R[571],3,[[["self"]],[R[245]]]],[11,R[572],E,R[573],3,[[["self"],["asref",["path"]],["path"]],[R[245]]]],[11,"stdin",E,R[574],3,[[["self"],["into",["stdio"]],["stdio"]],[R[245]]]],[11,"stdout",E,R[575],3,[[["self"],["into",["stdio"]],["stdio"]],[R[245]]]],[11,"stderr",E,R[576],3,[[["self"],["into",["stdio"]],["stdio"]],[R[245]]]],[11,"uid",E,R[577],3,[[["self"],["u32"]],[R[245]]]],[11,"gid",E,R[578],3,[[["self"],["u32"]],[R[245]]]],[11,"pre_exec",E,R[579],3,[[["self"],["f"]],[R[245]]]],[11,"spawn",E,R[580],3,[[["self"]],[[R[20],["child"]],["child"]]]],[11,"status",E,R[581],3,[[["self"]]]],[11,"output",E,R[582],3,[[["self"]]]],[11,"id",E,R[583],4,[[["self"]],["u32"]]],[11,"kill",E,R[584],4,[[["self"]],[R[20]]]],[11,"stdin",E,R[585],4,[[["self"]],[R[98]]]],[11,"stdout",E,R[586],4,[[["self"]],[R[98]]]],[11,"stderr",E,R[587],4,[[["self"]],[R[98]]]],[11,R[588],E,R[589],4,[[]]],[11,"forget",E,R[590],4,[[]]],[0,"signal",R[242],"Asynchronous signal handling for Tokio",N,N],[3,"CtrlC",R[279],"Represents a stream which receives \"ctrl-c\" notifications…",N,N],[5,"ctrl_c",E,R[591],N,[[],[["ctrlc"],[R[20],["ctrlc"]]]]],[0,"unix",E,"Unix-specific types for signal handling.",N,N],[3,R[290],R[280],"Represents the specific kind of signal to listen for.",N,N],[3,"Signal",E,"An implementation of `Stream` for receiving a particular…",N,N],[5,"signal",E,"Creates a new stream which will receive notifications when…",N,[[[R[285]]],[[R[20],["signal"]],["signal"]]]],[11,"from_raw",E,"Allows for listening to any valid OS signal.",5,[[["c_int"]],["self"]]],[11,"alarm",E,"Represents the SIGALRM signal.",5,[[],["self"]]],[11,"child",E,"Represents the SIGCHLD signal.",5,[[],["self"]]],[11,"hangup",E,"Represents the SIGHUP signal.",5,[[],["self"]]],[11,"interrupt",E,"Represents the SIGINT signal.",5,[[],["self"]]],[11,"io",E,"Represents the SIGIO signal.",5,[[],["self"]]],[11,"pipe",E,"Represents the SIGPIPE signal.",5,[[],["self"]]],[11,"quit",E,"Represents the SIGQUIT signal.",5,[[],["self"]]],[11,"terminate",E,"Represents the SIGTERM signal.",5,[[],["self"]]],[11,"user_defined1",E,"Represents the SIGUSR1 signal.",5,[[],["self"]]],[11,"user_defined2",E,"Represents the SIGUSR2 signal.",5,[[],["self"]]],[11,"window_change",E,"Represents the SIGWINCH signal.",5,[[],["self"]]],[0,"tcp",R[242],R[592],N,N],[3,R[305],R[248],R[593],N,N],[3,R[291],E,R[313],N,N],[3,R[292],E,R[314],N,N],[11,"bind",E,R[594],6,[[[R[249]]]]],[11,"accept",E,R[595],6,[[["self"]]]],[11,R[250],E,R[596],6,[[[R[246]],["handle"]],[[R[20],[R[246]]],[R[246]]]]],[11,R[252],E,R[597],6,[[["self"]],[[R[20],[R[247]]],[R[247]]]]],[11,R[270],E,R[271],6,[[],[R[270]]]],[11,"ttl",E,R[253],6,[[["self"]],[[R[20],["u32"]],["u32"]]]],[11,R[648],E,R[254],6,[[["self"],["u32"]],[R[20]]]],[0,"split",E,R[598],N,N],[3,R[73],R[281],R[599],N,N],[3,R[80],E,R[600],N,N],[11,R[631],R[248],R[601],7,[[[R[249]]]]],[11,R[250],E,R[602],7,[[[R[251]],["handle"]],[[R[20],[R[251]]],[R[251]]]]],[11,R[252],E,R[603],7,[[["self"]],[[R[20],[R[247]]],[R[247]]]]],[11,R[266],E,R[604],7,[[["self"]],[[R[20],[R[247]]],[R[247]]]]],[11,"peek",E,R[605],7,[[["self"]]]],[11,R[24],E,R[275],7,[[["self"],[R[24]]],[R[20]]]],[11,"nodelay",E,R[606],7,[[["self"]],[["bool"],[R[20],["bool"]]]]],[11,R[607],E,R[608],7,[[["self"],["bool"]],[R[20]]]],[11,R[609],E,R[610],7,[[["self"]],[[R[20],[R[1]]],[R[1]]]]],[11,R[611],E,R[612],7,[[["self"],[R[1]]],[R[20]]]],[11,R[613],E,R[614],7,[[["self"]],[[R[20],[R[1]]],[R[1]]]]],[11,R[615],E,R[616],7,[[["self"],[R[1]]],[R[20]]]],[11,R[617],E,R[618],7,[[["self"]],[[R[98],[R[167]]],[R[20],[R[98]]]]]],[11,R[619],E,R[620],7,[[["self"],[R[98],[R[167]]],[R[167]]],[R[20]]]],[11,"ttl",E,R[253],7,[[["self"]],[[R[20],["u32"]],["u32"]]]],[11,R[648],E,R[254],7,[[["self"],["u32"]],[R[20]]]],[11,"linger",E,R[621],7,[[["self"]],[[R[98],[R[167]]],[R[20],[R[98]]]]]],[11,R[622],E,R[623],7,[[["self"],[R[98],[R[167]]],[R[167]]],[R[20]]]],[11,"split",E,R[624],7,[[["self"]]]],[0,"udp",R[242],R[625],N,N],[3,R[293],R[282],R[255],N,N],[3,R[294],E,R[317],N,N],[11,"new",E,R[626],8,[[["c"],[R[256]]],[R[370]]]],[11,R[13],E,R[83],8,[[["self"]],[R[256]]]],[11,R[14],E,R[84],8,[[["self"]],[R[256]]]],[11,R[11],E,R[627],8,[[],[R[256]]]],[11,"bind",E,R[628],9,[[[R[249]]]]],[11,R[250],E,R[629],9,[[[R[256]],["handle"]],[[R[20],[R[256]]],[R[256]]]]],[11,"split",E,R[630],9,[[]]],[11,R[252],E,R[265],9,[[["self"]],[[R[20],[R[247]]],[R[247]]]]],[11,R[631],E,R[632],9,[[["self"],[R[249]]]]],[11,"send",E,R[257],9,[[["self"]]]],[11,"recv",E,R[261],9,[[["self"]]]],[11,R[673],E,R[257],9,[[[R[249]],["self"]]]],[11,R[259],E,R[260],9,[[["self"]]]],[11,R[306],E,R[633],9,[[["self"]],[["bool"],[R[20],["bool"]]]]],[11,R[634],E,R[635],9,[[["self"],["bool"]],[R[20]]]],[11,R[636],E,R[637],9,[[["self"]],[["bool"],[R[20],["bool"]]]]],[11,R[638],E,R[639],9,[[["self"],["bool"]],[R[20]]]],[11,R[640],E,R[641],9,[[["self"]],[[R[20],["u32"]],["u32"]]]],[11,R[642],E,R[643],9,[[["self"],["u32"]],[R[20]]]],[11,R[644],E,R[645],9,[[["self"]],[["bool"],[R[20],["bool"]]]]],[11,R[646],E,R[647],9,[[["self"],["bool"]],[R[20]]]],[11,"ttl",E,R[253],9,[[["self"]],[[R[20],["u32"]],["u32"]]]],[11,R[648],E,R[254],9,[[["self"],["u32"]],[R[20]]]],[11,R[649],E,R[650],9,[[["self"],[R[651]]],[R[20]]]],[11,R[652],E,R[653],9,[[["self"],["u32"],[R[654]]],[R[20]]]],[11,R[655],E,R[656],9,[[["self"],[R[651]]],[R[20]]]],[11,R[657],E,R[658],9,[[["self"],["u32"],[R[654]]],[R[20]]]],[0,"split",E,R[659],N,N],[3,R[297],R[283],R[660],N,N],[3,R[296],E,R[661],N,N],[3,R[295],E,R[662],N,N],[12,"0",E,E,10,N],[12,"1",E,E,10,N],[11,"reunite",E,R[262],11,[[[R[663]]],[[R[258]],[R[256]],[R[20],[R[256],R[258]]]]]],[11,R[259],E,R[260],11,[[["self"]]]],[11,"recv",E,R[261],11,[[["self"]]]],[11,"reunite",E,R[262],12,[[[R[664]]],[[R[258]],[R[256]],[R[20],[R[256],R[258]]]]]],[11,R[673],E,R[257],12,[[[R[247]],["self"]]]],[11,"send",E,R[257],12,[[["self"]]]],[0,"uds",R[242],"Unix Domain Sockets for Tokio.",N,N],[3,R[298],R[272],R[319],N,N],[3,R[305],E,"Stream of listeners",N,N],[3,R[299],E,R[320],N,N],[3,R[300],E,R[321],N,N],[3,"UCred",E,R[665],N,N],[12,"uid",E,R[666],13,N],[12,"gid",E,R[667],13,N],[11,"bind",E,R[668],14,[[["p"]],[[R[263]],[R[20],[R[263]]]]]],[11,"pair",E,R[274],14,[[],[R[20]]]],[11,R[250],E,R[669],14,[[[R[263]],["handle"]],[[R[263]],[R[20],[R[263]]]]]],[11,"unbound",E,R[670],14,[[],[[R[263]],[R[20],[R[263]]]]]],[11,R[631],E,R[671],14,[[["self"],["asref",["path"]],["path"]],[R[20]]]],[11,"send",E,R[672],14,[[["self"]]]],[11,"recv",E,R[264],14,[[["self"]]]],[11,R[673],E,R[674],14,[[["p"],["self"]]]],[11,R[259],E,R[264],14,[[["self"]]]],[11,R[252],E,R[265],14,[[["self"]],[[R[247]],[R[20],[R[247]]]]]],[11,R[266],E,R[675],14,[[["self"]],[[R[247]],[R[20],[R[247]]]]]],[11,R[268],E,R[269],14,[[["self"]],[[R[98],["error"]],[R[20],[R[98]]]]]],[11,R[24],E,R[676],14,[[["self"],[R[24]]],[R[20]]]],[11,"bind",E,R[677],15,[[["p"]],[[R[20],[R[267]]],[R[267]]]]],[11,R[250],E,R[678],15,[[[R[267]],["handle"]],[[R[20],[R[267]]],[R[267]]]]],[11,R[252],E,R[679],15,[[["self"]],[[R[247]],[R[20],[R[247]]]]]],[11,R[268],E,R[269],15,[[["self"]],[[R[98],["error"]],[R[20],[R[98]]]]]],[11,"accept",E,R[680],15,[[["self"]]]],[11,R[270],E,R[271],15,[[],[R[270]]]],[0,"split",E,R[681],N,N],[3,R[73],R[284],R[682],N,N],[3,R[80],E,R[683],N,N],[11,R[631],R[272],R[684],16,[[["p"]]]],[11,R[250],E,R[685],16,[[["handle"],[R[273]]],[[R[20],[R[273]]],[R[273]]]]],[11,"pair",E,R[274],16,[[],[R[20]]]],[11,R[252],E,R[686],16,[[["self"]],[[R[247]],[R[20],[R[247]]]]]],[11,R[266],E,R[687],16,[[["self"]],[[R[247]],[R[20],[R[247]]]]]],[11,R[688],E,R[689],16,[[["self"]],[["ucred"],[R[20],["ucred"]]]]],[11,R[268],E,R[269],16,[[["self"]],[[R[98],["error"]],[R[20],[R[98]]]]]],[11,R[24],E,R[275],16,[[["self"],[R[24]]],[R[20]]]],[11,"split",E,R[690],16,[[["self"]]]],[8,"ToSocketAddrs",R[242],"Convert or resolve without blocking to one or more…",N,N],[11,"into",R[276],E,17,[[],[U]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[25],E,E,17,[[[U]],[R[20]]]],[11,R[26],E,E,17,[[],[R[20]]]],[11,R[27],E,E,17,[[["self"]],[T]]],[11,R[29],E,E,17,[[["self"]],[T]]],[11,R[28],E,E,17,[[["self"]],[R[30]]]],[11,R[101],E,E,18,[[["self"]],[T]]],[11,R[100],E,E,18,[[["self"],[T]]]],[11,"into",E,E,18,[[],[U]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[25],E,E,18,[[[U]],[R[20]]]],[11,R[26],E,E,18,[[],[R[20]]]],[11,R[27],E,E,18,[[["self"]],[T]]],[11,R[29],E,E,18,[[["self"]],[T]]],[11,R[28],E,E,18,[[["self"]],[R[30]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[25],E,E,0,[[[U]],[R[20]]]],[11,R[26],E,E,0,[[],[R[20]]]],[11,R[27],E,E,0,[[["self"]],[T]]],[11,R[29],E,E,0,[[["self"]],[T]]],[11,R[28],E,E,0,[[["self"]],[R[30]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[25],E,E,1,[[[U]],[R[20]]]],[11,R[26],E,E,1,[[],[R[20]]]],[11,R[27],E,E,1,[[["self"]],[T]]],[11,R[29],E,E,1,[[["self"]],[T]]],[11,R[28],E,E,1,[[["self"]],[R[30]]]],[11,"into",R[277],E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[25],E,E,2,[[[U]],[R[20]]]],[11,R[26],E,E,2,[[],[R[20]]]],[11,R[27],E,E,2,[[["self"]],[T]]],[11,R[29],E,E,2,[[["self"]],[T]]],[11,R[28],E,E,2,[[["self"]],[R[30]]]],[11,"into",R[278],E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[25],E,E,3,[[[U]],[R[20]]]],[11,R[26],E,E,3,[[],[R[20]]]],[11,R[27],E,E,3,[[["self"]],[T]]],[11,R[29],E,E,3,[[["self"]],[T]]],[11,R[28],E,E,3,[[["self"]],[R[30]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[25],E,E,4,[[[U]],[R[20]]]],[11,R[26],E,E,4,[[],[R[20]]]],[11,R[27],E,E,4,[[["self"]],[T]]],[11,R[29],E,E,4,[[["self"]],[T]]],[11,R[28],E,E,4,[[["self"]],[R[30]]]],[11,R[210],E,E,4,[[["f"],[R[19]],["pin"]],["poll"]]],[11,"into",E,E,19,[[],[U]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[25],E,E,19,[[[U]],[R[20]]]],[11,R[26],E,E,19,[[],[R[20]]]],[11,R[27],E,E,19,[[["self"]],[T]]],[11,R[29],E,E,19,[[["self"]],[T]]],[11,R[28],E,E,19,[[["self"]],[R[30]]]],[11,"into",E,E,20,[[],[U]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[25],E,E,20,[[[U]],[R[20]]]],[11,R[26],E,E,20,[[],[R[20]]]],[11,R[27],E,E,20,[[["self"]],[T]]],[11,R[29],E,E,20,[[["self"]],[T]]],[11,R[28],E,E,20,[[["self"]],[R[30]]]],[11,"into",E,E,21,[[],[U]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[25],E,E,21,[[[U]],[R[20]]]],[11,R[26],E,E,21,[[],[R[20]]]],[11,R[27],E,E,21,[[["self"]],[T]]],[11,R[29],E,E,21,[[["self"]],[T]]],[11,R[28],E,E,21,[[["self"]],[R[30]]]],[11,"into",R[279],E,22,[[],[U]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[25],E,E,22,[[[U]],[R[20]]]],[11,R[26],E,E,22,[[],[R[20]]]],[11,R[27],E,E,22,[[["self"]],[T]]],[11,R[29],E,E,22,[[["self"]],[T]]],[11,R[28],E,E,22,[[["self"]],[R[30]]]],[11,R[101],R[280],E,5,[[["self"]],[T]]],[11,R[100],E,E,5,[[["self"],[T]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[25],E,E,5,[[[U]],[R[20]]]],[11,R[26],E,E,5,[[],[R[20]]]],[11,R[27],E,E,5,[[["self"]],[T]]],[11,R[29],E,E,5,[[["self"]],[T]]],[11,R[28],E,E,5,[[["self"]],[R[30]]]],[11,"into",E,E,23,[[],[U]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[25],E,E,23,[[[U]],[R[20]]]],[11,R[26],E,E,23,[[],[R[20]]]],[11,R[27],E,E,23,[[["self"]],[T]]],[11,R[29],E,E,23,[[["self"]],[T]]],[11,R[28],E,E,23,[[["self"]],[R[30]]]],[11,"into",R[248],E,24,[[],[U]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[25],E,E,24,[[[U]],[R[20]]]],[11,R[26],E,E,24,[[],[R[20]]]],[11,R[27],E,E,24,[[["self"]],[T]]],[11,R[29],E,E,24,[[["self"]],[T]]],[11,R[28],E,E,24,[[["self"]],[R[30]]]],[11,R[99],E,E,24,[[["pin"],["s"],[R[19]]],[["poll",[R[98]]],[R[98],[R[20]]]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[25],E,E,6,[[[U]],[R[20]]]],[11,R[26],E,E,6,[[],[R[20]]]],[11,R[27],E,E,6,[[["self"]],[T]]],[11,R[29],E,E,6,[[["self"]],[T]]],[11,R[28],E,E,6,[[["self"]],[R[30]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[25],E,E,7,[[[U]],[R[20]]]],[11,R[26],E,E,7,[[],[R[20]]]],[11,R[27],E,E,7,[[["self"]],[T]]],[11,R[29],E,E,7,[[["self"]],[T]]],[11,R[28],E,E,7,[[["self"]],[R[30]]]],[11,"into",R[281],E,25,[[],[U]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[25],E,E,25,[[[U]],[R[20]]]],[11,R[26],E,E,25,[[],[R[20]]]],[11,R[27],E,E,25,[[["self"]],[T]]],[11,R[29],E,E,25,[[["self"]],[T]]],[11,R[28],E,E,25,[[["self"]],[R[30]]]],[11,"into",E,E,26,[[],[U]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[25],E,E,26,[[[U]],[R[20]]]],[11,R[26],E,E,26,[[],[R[20]]]],[11,R[27],E,E,26,[[["self"]],[T]]],[11,R[29],E,E,26,[[["self"]],[T]]],[11,R[28],E,E,26,[[["self"]],[R[30]]]],[11,"into",R[282],E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[25],E,E,8,[[[U]],[R[20]]]],[11,R[26],E,E,8,[[],[R[20]]]],[11,R[27],E,E,8,[[["self"]],[T]]],[11,R[29],E,E,8,[[["self"]],[T]]],[11,R[28],E,E,8,[[["self"]],[R[30]]]],[11,R[99],E,E,8,[[["pin"],["s"],[R[19]]],[["poll",[R[98]]],[R[98],[R[20]]]]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[25],E,E,9,[[[U]],[R[20]]]],[11,R[26],E,E,9,[[],[R[20]]]],[11,R[27],E,E,9,[[["self"]],[T]]],[11,R[29],E,E,9,[[["self"]],[T]]],[11,R[28],E,E,9,[[["self"]],[R[30]]]],[11,"into",R[283],E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[25],E,E,12,[[[U]],[R[20]]]],[11,R[26],E,E,12,[[],[R[20]]]],[11,R[27],E,E,12,[[["self"]],[T]]],[11,R[29],E,E,12,[[["self"]],[T]]],[11,R[28],E,E,12,[[["self"]],[R[30]]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[25],E,E,11,[[[U]],[R[20]]]],[11,R[26],E,E,11,[[],[R[20]]]],[11,R[27],E,E,11,[[["self"]],[T]]],[11,R[29],E,E,11,[[["self"]],[T]]],[11,R[28],E,E,11,[[["self"]],[R[30]]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[103],E,E,10,[[["self"]],["string"]]],[11,R[25],E,E,10,[[[U]],[R[20]]]],[11,R[26],E,E,10,[[],[R[20]]]],[11,R[27],E,E,10,[[["self"]],[T]]],[11,R[29],E,E,10,[[["self"]],[T]]],[11,R[28],E,E,10,[[["self"]],[R[30]]]],[11,"into",R[272],E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[25],E,E,14,[[[U]],[R[20]]]],[11,R[26],E,E,14,[[],[R[20]]]],[11,R[27],E,E,14,[[["self"]],[T]]],[11,R[29],E,E,14,[[["self"]],[T]]],[11,R[28],E,E,14,[[["self"]],[R[30]]]],[11,"into",E,E,27,[[],[U]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[25],E,E,27,[[[U]],[R[20]]]],[11,R[26],E,E,27,[[],[R[20]]]],[11,R[27],E,E,27,[[["self"]],[T]]],[11,R[29],E,E,27,[[["self"]],[T]]],[11,R[28],E,E,27,[[["self"]],[R[30]]]],[11,R[99],E,E,27,[[["pin"],["s"],[R[19]]],[["poll",[R[98]]],[R[98],[R[20]]]]]],[11,"into",E,E,15,[[],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[25],E,E,15,[[[U]],[R[20]]]],[11,R[26],E,E,15,[[],[R[20]]]],[11,R[27],E,E,15,[[["self"]],[T]]],[11,R[29],E,E,15,[[["self"]],[T]]],[11,R[28],E,E,15,[[["self"]],[R[30]]]],[11,"into",E,E,16,[[],[U]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[25],E,E,16,[[[U]],[R[20]]]],[11,R[26],E,E,16,[[],[R[20]]]],[11,R[27],E,E,16,[[["self"]],[T]]],[11,R[29],E,E,16,[[["self"]],[T]]],[11,R[28],E,E,16,[[["self"]],[R[30]]]],[11,R[101],E,E,13,[[["self"]],[T]]],[11,R[100],E,E,13,[[["self"],[T]]]],[11,"into",E,E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[25],E,E,13,[[[U]],[R[20]]]],[11,R[26],E,E,13,[[],[R[20]]]],[11,R[27],E,E,13,[[["self"]],[T]]],[11,R[29],E,E,13,[[["self"]],[T]]],[11,R[28],E,E,13,[[["self"]],[R[30]]]],[11,"into",R[284],E,28,[[],[U]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[25],E,E,28,[[[U]],[R[20]]]],[11,R[26],E,E,28,[[],[R[20]]]],[11,R[27],E,E,28,[[["self"]],[T]]],[11,R[29],E,E,28,[[["self"]],[T]]],[11,R[28],E,E,28,[[["self"]],[R[30]]]],[11,"into",E,E,29,[[],[U]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[25],E,E,29,[[[U]],[R[20]]]],[11,R[26],E,E,29,[[],[R[20]]]],[11,R[27],E,E,29,[[["self"]],[T]]],[11,R[29],E,E,29,[[["self"]],[T]]],[11,R[28],E,E,29,[[["self"]],[R[30]]]],[11,"drop",R[276],E,17,[[["self"]]]],[11,"drop",R[277],E,2,[[["self"]]]],[11,R[148],R[276],"Returns a \"default\" handle, i.e., a handle that lazily…",18,[[],["handle"]]],[11,R[148],E,E,1,[[],["self"]]],[11,"clone",E,E,18,[[["self"]],["handle"]]],[11,"clone",R[280],E,5,[[["self"]],[R[285]]]],[11,"clone",R[272],E,13,[[["self"]],["ucred"]]],[11,"as_ref",R[281],E,25,[[["self"]],[R[251]]]],[11,"as_ref",E,E,26,[[["self"]],[R[251]]]],[11,"as_ref",R[283],E,12,[[["self"]],[R[256]]]],[11,"as_ref",E,E,11,[[["self"]],[R[256]]]],[11,"as_ref",R[284],E,28,[[["self"]],[R[273]]]],[11,"as_ref",E,E,29,[[["self"]],[R[273]]]],[11,"eq",R[272],E,13,[[["self"],["ucred"]],["bool"]]],[11,"ne",E,E,13,[[["self"],["ucred"]],["bool"]]],[11,"from",R[278],E,3,[[["stdcommand"]],[R[245]]]],[11,"hash",R[272],E,13,[[["self"],["__h"]]]],[11,"fmt",R[276],E,17,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",E,E,0,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",E,E,18,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",E,E,1,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",R[277],E,2,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",R[278],E,3,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",E,E,4,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",E,E,19,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",E,E,20,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",E,E,21,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",R[279],E,22,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",R[280],E,5,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",E,E,23,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",R[248],E,24,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",E,E,6,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",R[281],E,25,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",E,E,26,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",R[248],E,7,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",R[282],E,8,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",E,E,9,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",R[283],E,12,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",E,E,11,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",E,E,10,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",R[272],E,14,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",E,E,27,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",E,E,15,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",R[284],E,28,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",E,E,29,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",R[272],E,16,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",E,E,13,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",R[283],E,10,[[["self"],[R[43]]],[R[20]]]],[11,R[25],R[248],R[286],6,[[[R[246]]],[R[20]]]],[11,R[25],E,R[286],7,[[[R[251]]],[R[20]]]],[11,R[25],R[282],R[286],9,[[[R[256]]],[R[20]]]],[11,R[25],R[272],R[286],14,[[[R[263]]],[R[20]]]],[11,R[25],E,R[286],15,[[[R[267]]],[R[20]]]],[11,R[25],E,R[286],16,[[[R[273]]],[R[20]]]],[11,R[287],R[276],E,0,[[["self"]],["rawfd"]]],[11,R[287],R[278],E,19,[[["self"]],["rawfd"]]],[11,R[287],E,E,20,[[["self"]],["rawfd"]]],[11,R[287],E,E,21,[[["self"]],["rawfd"]]],[11,R[287],R[248],E,6,[[["self"]],["rawfd"]]],[11,R[287],E,E,7,[[["self"]],["rawfd"]]],[11,R[287],R[282],E,9,[[["self"]],["rawfd"]]],[11,R[287],R[272],E,14,[[["self"]],["rawfd"]]],[11,R[287],E,E,15,[[["self"]],["rawfd"]]],[11,R[287],E,E,16,[[["self"]],["rawfd"]]],[11,"poll",R[278],E,4,[[["pin"],["self"],[R[19]]],["poll"]]],[11,"unpark",R[276],E,0,[[["self"]]]],[11,"park",E,E,0,[[["self"]],[R[20]]]],[11,R[190],E,E,0,[[["self"],[R[167]]],[R[20]]]],[11,"unpark",E,E,18,[[["self"]]]],[11,R[110],R[279],E,22,[[["pin"],["self"],[R[19]]],[[R[98]],["poll",[R[98]]]]]],[11,R[110],R[280],E,23,[[["pin"],["self"],[R[19]]],[[R[98]],["poll",[R[98]]]]]],[11,R[110],R[248],E,24,[[["pin"],["self"],[R[19]]],[[R[98]],["poll",[R[98]]]]]],[11,R[110],R[282],E,8,[[["pin"],["self"],[R[19]]],[[R[98]],["poll",[R[98]]]]]],[11,R[110],R[272],E,27,[[["pin"],["self"],[R[19]]],[[R[98]],["poll",[R[98]]]]]],[11,R[111],R[282],E,8,[[["pin"],["self"],[R[19]]],[["poll",[R[20]]],[R[20]]]]],[11,R[112],E,E,8,[[["pin"],["self"]],[R[20]]]],[11,R[38],E,E,8,[[["pin"],["self"],[R[19]]],[["poll",[R[20]]],[R[20]]]]],[11,R[113],E,E,8,[[["pin"],["self"],[R[19]]],[["poll",[R[20]]],[R[20]]]]],[11,R[34],R[277],E,2,[[["self"],["pin"],[R[19]]],[[R[20],[R[1]]],["poll",[R[20]]]]]],[11,R[34],R[278],E,20,[[["self"],["pin"],[R[19]]],[[R[20],[R[1]]],["poll",[R[20]]]]]],[11,R[34],E,E,21,[[["self"],["pin"],[R[19]]],[[R[20],[R[1]]],["poll",[R[20]]]]]],[11,R[35],R[281],E,25,[[["self"]],["bool"]]],[11,R[34],E,E,25,[[["self"],["pin"],[R[19]]],[[R[20],[R[1]]],["poll",[R[20]]]]]],[11,R[36],E,E,25,[[["self"],["b"],["pin"],[R[19]]],[[R[20],[R[1]]],["poll",[R[20]]]]]],[11,R[35],R[248],E,7,[[["self"]],["bool"]]],[11,R[34],E,E,7,[[["self"],["pin"],[R[19]]],[[R[20],[R[1]]],["poll",[R[20]]]]]],[11,R[36],E,E,7,[[["self"],["b"],["pin"],[R[19]]],[[R[20],[R[1]]],["poll",[R[20]]]]]],[11,R[35],R[284],E,28,[[["self"]],["bool"]]],[11,R[34],E,E,28,[[["self"],["pin"],[R[19]]],[[R[20],[R[1]]],["poll",[R[20]]]]]],[11,R[36],E,E,28,[[["self"],["b"],["pin"],[R[19]]],[[R[20],[R[1]]],["poll",[R[20]]]]]],[11,R[35],R[272],E,16,[[["self"]],["bool"]]],[11,R[34],E,E,16,[[["self"],["pin"],[R[19]]],[[R[20],[R[1]]],["poll",[R[20]]]]]],[11,R[36],E,E,16,[[["self"],["b"],["pin"],[R[19]]],[[R[20],[R[1]]],["poll",[R[20]]]]]],[11,R[37],R[277],E,2,[[["self"],["pin"],[R[19]]],[[R[20],[R[1]]],["poll",[R[20]]]]]],[11,R[38],E,E,2,[[["pin"],["self"],[R[19]]],[["poll",[R[20]]],[R[20]]]]],[11,R[39],E,E,2,[[["pin"],["self"],[R[19]]],[["poll",[R[20]]],[R[20]]]]],[11,R[37],R[278],E,19,[[["self"],["pin"],[R[19]]],[[R[20],[R[1]]],["poll",[R[20]]]]]],[11,R[38],E,E,19,[[["pin"],["self"],[R[19]]],[["poll",[R[20]]],[R[20]]]]],[11,R[39],E,E,19,[[["pin"],["self"],[R[19]]],[["poll",[R[20]]],[R[20]]]]],[11,R[37],R[281],E,26,[[["self"],["pin"],[R[19]]],[[R[20],[R[1]]],["poll",[R[20]]]]]],[11,R[38],E,E,26,[[["pin"],["self"],[R[19]]],[["poll",[R[20]]],[R[20]]]]],[11,R[39],E,E,26,[[["pin"],["self"],[R[19]]],[["poll",[R[20]]],[R[20]]]]],[11,R[40],E,E,26,[[["self"],["b"],["pin"],[R[19]]],[[R[20],[R[1]]],["poll",[R[20]]]]]],[11,R[37],R[248],E,7,[[["self"],["pin"],[R[19]]],[[R[20],[R[1]]],["poll",[R[20]]]]]],[11,R[38],E,E,7,[[["pin"],["self"],[R[19]]],[["poll",[R[20]]],[R[20]]]]],[11,R[39],E,E,7,[[["pin"],["self"],[R[19]]],[["poll",[R[20]]],[R[20]]]]],[11,R[40],E,E,7,[[["self"],["b"],["pin"],[R[19]]],[[R[20],[R[1]]],["poll",[R[20]]]]]],[11,R[37],R[284],E,29,[[["self"],["pin"],[R[19]]],[[R[20],[R[1]]],["poll",[R[20]]]]]],[11,R[38],E,E,29,[[["pin"],["self"],[R[19]]],[["poll",[R[20]]],[R[20]]]]],[11,R[39],E,E,29,[[["pin"],["self"],[R[19]]],[["poll",[R[20]]],[R[20]]]]],[11,R[40],E,E,29,[[["self"],["b"],["pin"],[R[19]]],[[R[20],[R[1]]],["poll",[R[20]]]]]],[11,R[37],R[272],E,16,[[["self"],["pin"],[R[19]]],[[R[20],[R[1]]],["poll",[R[20]]]]]],[11,R[38],E,E,16,[[["pin"],["self"],[R[19]]],[["poll",[R[20]]],[R[20]]]]],[11,R[39],E,E,16,[[["pin"],["self"],[R[19]]],[["poll",[R[20]]],[R[20]]]]],[11,R[40],E,E,16,[[["self"],["b"],["pin"],[R[19]]],[[R[20],[R[1]]],["poll",[R[20]]]]]]],"p":[[3,"Reactor"],[3,R[288]],[3,R[289]],[3,"Command"],[3,"Child"],[3,R[290]],[3,R[291]],[3,R[292]],[3,R[293]],[3,R[294]],[3,R[295]],[3,R[296]],[3,R[297]],[3,"UCred"],[3,R[298]],[3,R[299]],[3,R[300]],[3,R[301]],[3,"Handle"],[3,R[302]],[3,R[303]],[3,R[304]],[3,"CtrlC"],[3,"Signal"],[3,R[305]],[3,R[73]],[3,R[80]],[3,R[305]],[3,R[73]],[3,R[80]]]};
searchIndex["tokio_sync"]={"doc":"Asynchronous synchronization primitives.","i":[[3,"Barrier",R[132],R[691],N,N],[3,R[150],E,"A `BarrierWaitResult` is returned by `wait` when all…",N,N],[3,"Mutex",E,R[692],N,N],[3,R[156],E,R[693],N,N],[3,R[155],E,"A synchronization primitive for task waking.",N,N],[11,"new",E,R[694],0,[[[R[1]]],["barrier"]]],[11,"wait",E,R[695],0,[[["self"]]]],[11,"is_leader",E,"Returns true if this thread from wait is the \"leader…",1,[[["self"]],["bool"]]],[0,"mpsc",E,R[696],N,N],[3,R[139],R[143],R[697],N,N],[3,"Sender",E,R[698],N,N],[3,R[151],E,R[699],N,N],[3,R[152],E,R[700],N,N],[5,R[733],E,R[701],N,[[[R[1]]]]],[5,R[702],E,R[703],N,[[]]],[11,"recv",E,R[129],2,[[["self"]]]],[11,"close",E,R[130],2,[[["self"]]]],[11,R[704],E,R[705],3,[[["self"],[T]],[[R[128]],[R[20],[R[128]]]]]],[11,"send",E,R[706],3,[[[T],["self"]]]],[11,"recv",E,R[129],4,[[["self"]]]],[11,"close",E,R[130],4,[[["self"]]]],[11,R[704],E,R[707],5,[[["self"],[T]],[[R[20],[R[131]]],[R[131]]]]],[0,"error",E,R[708],N,N],[3,R[133],R[144],R[709],N,N],[3,R[140],E,R[710],N,N],[3,R[157],E,R[711],N,N],[3,R[160],E,R[712],N,N],[3,R[158],E,R[713],N,N],[3,R[159],E,R[714],N,N],[11,"new",R[132],R[715],6,[[[T]],["self"]]],[11,"lock",E,R[716],6,[[["self"]]]],[0,"oneshot",E,R[717],N,N],[3,"Sender",R[134],R[718],N,N],[3,R[139],E,R[719],N,N],[5,R[733],E,R[720],N,[[]]],[0,"error",E,R[721],N,N],[3,R[133],R[145],R[722],N,N],[3,R[161],E,R[723],N,N],[11,"send",R[134],R[724],7,[[[T]],[R[20]]]],[11,"closed",E,R[725],7,[[["self"]]]],[11,R[138],E,R[726],7,[[["self"]],["bool"]]],[11,"close",E,R[727],8,[[["self"]]]],[11,"try_recv",E,R[728],8,[[["self"]],[[R[20],[R[135]]],[R[135]]]]],[0,R[136],R[132],"Thread-safe, asynchronous counting semaphore.",N,N],[3,R[153],R[146],"Futures-aware semaphore.",N,N],[3,"Permit",E,"A semaphore permit",N,N],[3,R[162],E,"Error returned by `Permit::poll_acquire`.",N,N],[3,R[154],E,"Error returned by `Permit::try_acquire`.",N,N],[11,"new",E,"Creates a new semaphore with the initial number of permits",9,[[[R[1]]],[R[136]]]],[11,"available_permits",E,"Returns the current number of available permits",9,[[["self"]],[R[1]]]],[11,"close",E,"Close the semaphore. This prevents the semaphore from…",9,[[["self"]]]],[11,"add_permits",E,"Add `n` new permits to the semaphore.",9,[[["self"],[R[1]]]]],[11,"new",E,"Create a new `Permit`.",10,[[],["permit"]]],[11,"is_acquired",E,"Returns true if the permit has been acquired",10,[[["self"]],["bool"]]],[11,"poll_acquire",E,"Try to acquire the permit. If no permits are available,…",10,[[["self"],[R[19]],[R[136]]],[["poll",[R[20]]],[R[20],["acquireerror"]]]]],[11,"try_acquire",E,"Try to acquire the permit.",10,[[["self"],[R[136]]],[[R[20],[R[137]]],[R[137]]]]],[11,"release",E,"Release a permit back to the semaphore",10,[[["self"],[R[136]]]]],[11,"forget",E,"Forget the permit without releasing it back to the…",10,[[["self"]]]],[11,R[138],E,"Returns true if the error was caused by a closed semaphore.",11,[[["self"]],["bool"]]],[11,"is_no_permits",E,"Returns true if the error was caused by calling…",11,[[["self"]],["bool"]]],[11,"new",R[132],"Create an `AtomicWaker`",12,[[],["atomicwaker"]]],[11,"register",E,"Registers the current waker to be notified on calls to…",12,[[["self"],["waker"]]]],[11,"register_by_ref",E,"Registers the provided waker to be notified on calls to…",12,[[["self"],["waker"]]]],[11,"wake",E,"Wakes the task that last called `register`.",12,[[["self"]]]],[11,"take_waker",E,"Attempts to take the `Waker` value out of the…",12,[[["self"]],[["waker"],[R[98],["waker"]]]]],[0,"watch",E,R[729],N,N],[3,R[139],R[141],R[730],N,N],[3,"Sender",E,R[731],N,N],[3,"Ref",E,R[732],N,N],[5,R[733],E,R[734],N,[[[T]]]],[0,"error",E,R[735],N,N],[3,R[140],R[147],R[736],N,N],[11,R[13],R[141],R[737],13,[[["self"]],["ref"]]],[11,"recv_ref",E,R[738],13,[[["self"]]]],[11,"recv",E,R[739],13,[[["self"]]]],[11,R[306],E,R[740],14,[[["self"],[T]],[[R[20],[R[142]]],[R[142]]]]],[11,"closed",E,R[741],14,[[["self"]]]],[11,"into",R[132],E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[25],E,E,0,[[[U]],[R[20]]]],[11,R[26],E,E,0,[[],[R[20]]]],[11,R[27],E,E,0,[[["self"]],[T]]],[11,R[29],E,E,0,[[["self"]],[T]]],[11,R[28],E,E,0,[[["self"]],[R[30]]]],[11,R[101],E,E,1,[[["self"]],[T]]],[11,R[100],E,E,1,[[["self"],[T]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[25],E,E,1,[[[U]],[R[20]]]],[11,R[26],E,E,1,[[],[R[20]]]],[11,R[27],E,E,1,[[["self"]],[T]]],[11,R[29],E,E,1,[[["self"]],[T]]],[11,R[28],E,E,1,[[["self"]],[R[30]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[25],E,E,6,[[[U]],[R[20]]]],[11,R[26],E,E,6,[[],[R[20]]]],[11,R[27],E,E,6,[[["self"]],[T]]],[11,R[29],E,E,6,[[["self"]],[T]]],[11,R[28],E,E,6,[[["self"]],[R[30]]]],[11,"into",E,E,15,[[],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[103],E,E,15,[[["self"]],["string"]]],[11,R[25],E,E,15,[[[U]],[R[20]]]],[11,R[26],E,E,15,[[],[R[20]]]],[11,R[27],E,E,15,[[["self"]],[T]]],[11,R[29],E,E,15,[[["self"]],[T]]],[11,R[28],E,E,15,[[["self"]],[R[30]]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[25],E,E,12,[[[U]],[R[20]]]],[11,R[26],E,E,12,[[],[R[20]]]],[11,R[27],E,E,12,[[["self"]],[T]]],[11,R[29],E,E,12,[[["self"]],[T]]],[11,R[28],E,E,12,[[["self"]],[R[30]]]],[11,"into",R[143],E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[25],E,E,2,[[[U]],[R[20]]]],[11,R[26],E,E,2,[[],[R[20]]]],[11,R[27],E,E,2,[[["self"]],[T]]],[11,R[29],E,E,2,[[["self"]],[T]]],[11,R[28],E,E,2,[[["self"]],[R[30]]]],[11,R[99],E,E,2,[[["pin"],["s"],[R[19]]],[[R[98],[R[20]]],["poll",[R[98]]]]]],[11,R[101],E,E,3,[[["self"]],[T]]],[11,R[100],E,E,3,[[["self"],[T]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[25],E,E,3,[[[U]],[R[20]]]],[11,R[26],E,E,3,[[],[R[20]]]],[11,R[27],E,E,3,[[["self"]],[T]]],[11,R[29],E,E,3,[[["self"]],[T]]],[11,R[28],E,E,3,[[["self"]],[R[30]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[25],E,E,4,[[[U]],[R[20]]]],[11,R[26],E,E,4,[[],[R[20]]]],[11,R[27],E,E,4,[[["self"]],[T]]],[11,R[29],E,E,4,[[["self"]],[T]]],[11,R[28],E,E,4,[[["self"]],[R[30]]]],[11,R[99],E,E,4,[[["pin"],["s"],[R[19]]],[[R[98],[R[20]]],["poll",[R[98]]]]]],[11,R[101],E,E,5,[[["self"]],[T]]],[11,R[100],E,E,5,[[["self"],[T]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[25],E,E,5,[[[U]],[R[20]]]],[11,R[26],E,E,5,[[],[R[20]]]],[11,R[27],E,E,5,[[["self"]],[T]]],[11,R[29],E,E,5,[[["self"]],[T]]],[11,R[28],E,E,5,[[["self"]],[R[30]]]],[11,"into",R[144],E,16,[[],[U]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[103],E,E,16,[[["self"]],["string"]]],[11,R[25],E,E,16,[[[U]],[R[20]]]],[11,R[26],E,E,16,[[],[R[20]]]],[11,R[27],E,E,16,[[["self"]],[T]]],[11,R[29],E,E,16,[[["self"]],[T]]],[11,R[28],E,E,16,[[["self"]],[R[30]]]],[11,"into",E,E,17,[[],[U]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[103],E,E,17,[[["self"]],["string"]]],[11,R[25],E,E,17,[[[U]],[R[20]]]],[11,R[26],E,E,17,[[],[R[20]]]],[11,R[27],E,E,17,[[["self"]],[T]]],[11,R[29],E,E,17,[[["self"]],[T]]],[11,R[28],E,E,17,[[["self"]],[R[30]]]],[11,"into",E,E,18,[[],[U]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[103],E,E,18,[[["self"]],["string"]]],[11,R[25],E,E,18,[[[U]],[R[20]]]],[11,R[26],E,E,18,[[],[R[20]]]],[11,R[27],E,E,18,[[["self"]],[T]]],[11,R[29],E,E,18,[[["self"]],[T]]],[11,R[28],E,E,18,[[["self"]],[R[30]]]],[11,"into",E,E,19,[[],[U]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[103],E,E,19,[[["self"]],["string"]]],[11,R[25],E,E,19,[[[U]],[R[20]]]],[11,R[26],E,E,19,[[],[R[20]]]],[11,R[27],E,E,19,[[["self"]],[T]]],[11,R[29],E,E,19,[[["self"]],[T]]],[11,R[28],E,E,19,[[["self"]],[R[30]]]],[11,"into",E,E,20,[[],[U]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[103],E,E,20,[[["self"]],["string"]]],[11,R[25],E,E,20,[[[U]],[R[20]]]],[11,R[26],E,E,20,[[],[R[20]]]],[11,R[27],E,E,20,[[["self"]],[T]]],[11,R[29],E,E,20,[[["self"]],[T]]],[11,R[28],E,E,20,[[["self"]],[R[30]]]],[11,"into",E,E,21,[[],[U]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[103],E,E,21,[[["self"]],["string"]]],[11,R[25],E,E,21,[[[U]],[R[20]]]],[11,R[26],E,E,21,[[],[R[20]]]],[11,R[27],E,E,21,[[["self"]],[T]]],[11,R[29],E,E,21,[[["self"]],[T]]],[11,R[28],E,E,21,[[["self"]],[R[30]]]],[11,"into",R[134],E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[25],E,E,7,[[[U]],[R[20]]]],[11,R[26],E,E,7,[[],[R[20]]]],[11,R[27],E,E,7,[[["self"]],[T]]],[11,R[29],E,E,7,[[["self"]],[T]]],[11,R[28],E,E,7,[[["self"]],[R[30]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[25],E,E,8,[[[U]],[R[20]]]],[11,R[26],E,E,8,[[],[R[20]]]],[11,R[27],E,E,8,[[["self"]],[T]]],[11,R[29],E,E,8,[[["self"]],[T]]],[11,R[28],E,E,8,[[["self"]],[R[30]]]],[11,R[210],E,E,8,[[["f"],[R[19]],["pin"]],["poll"]]],[11,"into",R[145],E,22,[[],[U]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[103],E,E,22,[[["self"]],["string"]]],[11,R[25],E,E,22,[[[U]],[R[20]]]],[11,R[26],E,E,22,[[],[R[20]]]],[11,R[27],E,E,22,[[["self"]],[T]]],[11,R[29],E,E,22,[[["self"]],[T]]],[11,R[28],E,E,22,[[["self"]],[R[30]]]],[11,"into",E,E,23,[[],[U]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[103],E,E,23,[[["self"]],["string"]]],[11,R[25],E,E,23,[[[U]],[R[20]]]],[11,R[26],E,E,23,[[],[R[20]]]],[11,R[27],E,E,23,[[["self"]],[T]]],[11,R[29],E,E,23,[[["self"]],[T]]],[11,R[28],E,E,23,[[["self"]],[R[30]]]],[11,"into",R[146],E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[25],E,E,9,[[[U]],[R[20]]]],[11,R[26],E,E,9,[[],[R[20]]]],[11,R[27],E,E,9,[[["self"]],[T]]],[11,R[29],E,E,9,[[["self"]],[T]]],[11,R[28],E,E,9,[[["self"]],[R[30]]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[25],E,E,10,[[[U]],[R[20]]]],[11,R[26],E,E,10,[[],[R[20]]]],[11,R[27],E,E,10,[[["self"]],[T]]],[11,R[29],E,E,10,[[["self"]],[T]]],[11,R[28],E,E,10,[[["self"]],[R[30]]]],[11,"into",E,E,24,[[],[U]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[103],E,E,24,[[["self"]],["string"]]],[11,R[25],E,E,24,[[[U]],[R[20]]]],[11,R[26],E,E,24,[[],[R[20]]]],[11,R[27],E,E,24,[[["self"]],[T]]],[11,R[29],E,E,24,[[["self"]],[T]]],[11,R[28],E,E,24,[[["self"]],[R[30]]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[103],E,E,11,[[["self"]],["string"]]],[11,R[25],E,E,11,[[[U]],[R[20]]]],[11,R[26],E,E,11,[[],[R[20]]]],[11,R[27],E,E,11,[[["self"]],[T]]],[11,R[29],E,E,11,[[["self"]],[T]]],[11,R[28],E,E,11,[[["self"]],[R[30]]]],[11,R[101],R[141],E,13,[[["self"]],[T]]],[11,R[100],E,E,13,[[["self"],[T]]]],[11,"into",E,E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[25],E,E,13,[[[U]],[R[20]]]],[11,R[26],E,E,13,[[],[R[20]]]],[11,R[27],E,E,13,[[["self"]],[T]]],[11,R[29],E,E,13,[[["self"]],[T]]],[11,R[28],E,E,13,[[["self"]],[R[30]]]],[11,R[99],E,E,13,[[["pin"],["s"],[R[19]]],[[R[98],[R[20]]],["poll",[R[98]]]]]],[11,"into",E,E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[25],E,E,14,[[[U]],[R[20]]]],[11,R[26],E,E,14,[[],[R[20]]]],[11,R[27],E,E,14,[[["self"]],[T]]],[11,R[29],E,E,14,[[["self"]],[T]]],[11,R[28],E,E,14,[[["self"]],[R[30]]]],[11,"into",E,E,25,[[],[U]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[25],E,E,25,[[[U]],[R[20]]]],[11,R[26],E,E,25,[[],[R[20]]]],[11,R[27],E,E,25,[[["self"]],[T]]],[11,R[29],E,E,25,[[["self"]],[T]]],[11,R[28],E,E,25,[[["self"]],[R[30]]]],[11,"into",R[147],E,26,[[],[U]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[103],E,E,26,[[["self"]],["string"]]],[11,R[25],E,E,26,[[[U]],[R[20]]]],[11,R[26],E,E,26,[[],[R[20]]]],[11,R[27],E,E,26,[[["self"]],[T]]],[11,R[29],E,E,26,[[["self"]],[T]]],[11,R[28],E,E,26,[[["self"]],[R[30]]]],[11,"drop",R[132],E,15,[[["self"]]]],[11,"drop",R[134],E,7,[[["self"]]]],[11,"drop",E,E,8,[[["self"]]]],[11,"drop",R[141],E,13,[[["self"]]]],[11,"drop",E,E,14,[[["self"]]]],[11,R[148],R[132],E,6,[[],["self"]]],[11,R[148],R[146],E,10,[[],["self"]]],[11,R[148],R[132],E,12,[[],["self"]]],[11,"clone",E,E,1,[[["self"]],["barrierwaitresult"]]],[11,"clone",R[143],E,3,[[["self"]],["self"]]],[11,"clone",E,E,5,[[["self"]],["self"]]],[11,"clone",R[141],E,13,[[["self"]],["self"]]],[11,"from",R[144],E,17,[[],[R[128]]]],[11,"from",E,E,20,[[],[R[131]]]],[11,"from",R[132],E,6,[[[T]],["self"]]],[11,R[742],E,E,15,[[["self"]]]],[11,"deref",E,E,15,[[["self"]]]],[11,"deref",R[141],E,25,[[["self"]],[T]]],[11,"fmt",R[132],E,0,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",E,E,1,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",R[143],E,3,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",E,E,2,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",R[144],E,16,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",E,E,17,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",E,E,18,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",R[143],E,5,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",E,E,4,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",R[144],E,19,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",E,E,20,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",E,E,21,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",R[132],E,6,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",E,E,15,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",R[134],E,7,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",E,E,8,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",R[145],E,22,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",E,E,23,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",R[146],E,10,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",E,E,24,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",E,E,11,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",E,E,9,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",R[132],E,12,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",R[141],E,13,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",E,E,14,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",E,E,25,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",R[147],E,26,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",R[144],E,16,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",E,E,17,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",E,E,18,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",E,E,19,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",E,E,20,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",E,E,21,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",R[132],E,15,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",R[145],E,22,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",E,E,23,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",R[146],E,24,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",E,E,11,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",R[147],E,26,[[["self"],[R[43]]],[R[20]]]],[11,"poll",R[134],E,8,[[["pin"],["self"],[R[19]]],["poll"]]],[11,R[110],R[143],E,2,[[["pin"],["self"],[R[19]]],[[R[98]],["poll",[R[98]]]]]],[11,R[110],E,E,4,[[["pin"],["self"],[R[19]]],[[R[98]],["poll",[R[98]]]]]],[11,R[110],R[141],E,13,[[["pin"],["self"],[R[19]]],[[R[98]],["poll",[R[98]]]]]],[11,R[111],R[143],E,3,[[["pin"],["self"],[R[19]]],[["poll",[R[20]]],[R[20]]]]],[11,R[112],E,E,3,[[["pin"],["self"],[T]],[R[20]]]],[11,R[38],E,E,3,[[["pin"],["self"],[R[19]]],[["poll",[R[20]]],[R[20]]]]],[11,R[113],E,E,3,[[["pin"],["self"],[R[19]]],[["poll",[R[20]]],[R[20]]]]],[11,R[111],E,E,5,[[["pin"],["self"],[R[19]]],[["poll",[R[20]]],[R[20]]]]],[11,R[112],E,E,5,[[["pin"],["self"],[T]],[R[20]]]],[11,R[38],E,E,5,[[["pin"],["self"],[R[19]]],[["poll",[R[20]]],[R[20]]]]],[11,R[113],E,E,5,[[["pin"],["self"],[R[19]]],[["poll",[R[20]]],[R[20]]]]],[11,R[111],R[141],E,14,[[["pin"],["self"],[R[19]]],[["poll",[R[20]]],[R[20]]]]],[11,R[112],E,E,14,[[["pin"],["self"],[T]],[R[20]]]],[11,R[38],E,E,14,[[["pin"],["self"],[R[19]]],[["poll",[R[20]]],[R[20]]]]],[11,R[113],E,E,14,[[["pin"],["self"],[R[19]]],[["poll",[R[20]]],[R[20]]]]],[11,R[11],R[144],R[149],17,[[],[T]]],[11,R[138],E,R[743],17,[[["self"]],["bool"]]],[11,"is_full",E,R[744],17,[[["self"]],["bool"]]],[11,R[11],E,R[149],20,[[],[T]]]],"p":[[3,"Barrier"],[3,R[150]],[3,R[139]],[3,"Sender"],[3,R[151]],[3,R[152]],[3,"Mutex"],[3,"Sender"],[3,R[139]],[3,R[153]],[3,"Permit"],[3,R[154]],[3,R[155]],[3,R[139]],[3,"Sender"],[3,R[156]],[3,R[140]],[3,R[157]],[3,R[133]],[3,R[158]],[3,R[159]],[3,R[160]],[3,R[133]],[3,R[161]],[3,R[162]],[3,"Ref"],[3,R[140]]]};
searchIndex["tokio_test"]={"doc":"Tokio and Futures based testing utilites","i":[[5,R[170],R[797],R[794],N,[[["future"]]]],[0,"clock",E,"A mocked clock for use with `tokio_timer` based futures.",N,N],[3,R[807],R[804],"Mock clock for use with `tokio-timer` futures.",N,N],[3,"Handle",E,"A handle to the `MockClock`.",N,N],[5,"mock",E,R[795],N,[[["f"]],["r"]]],[5,"mock_at",E,R[795],N,[[[R[222]],["f"]],["r"]]],[11,"new",E,"Create a new `MockClock` with the current time.",0,[[],["self"]]],[11,"with_duration",E,"Create a `MockClock` with its current time at a duration…",0,[[[R[167]]],["self"]]],[11,"with_instant",E,"Create a `MockClock` that sets its current time as the…",0,[[[R[222]]],["self"]]],[11,"enter",E,"Enter the `MockClock` context.",0,[[["self"],["f"]],["r"]]],[11,"turn",E,R[796],1,[[["self"]]]],[11,"turn_for",E,R[796],1,[[["self"],[R[167]]]]],[11,"advance",E,"Advance the `MockClock` by the provided duration.",1,[[["self"],[R[167]]]]],[11,"advanced",E,"Returns the total amount of time the time has been advanced.",1,[[["self"]],[R[167]]]],[11,"now",E,"Get the currently mocked time",1,[[["self"]],[R[222]]]],[11,"park_for",E,"Turn the internal timer once, but force \"parking\" for…",1,[[["self"],[R[167]]]]],[0,"io",R[797],"A mock type implementing [`AsyncRead`] and [`AsyncWrite`].",N,N],[3,"Mock",R[805],"An I/O object that follows a predefined script.",N,N],[3,"Handle",E,"A handle to send additional actions to the related `Mock`.",N,N],[3,R[377],E,"Builds `Mock` instances.",N,N],[11,"new",E,"Return a new, empty `Builder.",2,[[],["self"]]],[11,"read",E,R[798],2,[[["self"]],["self"]]],[11,"write",E,R[799],2,[[["self"]],["self"]]],[11,"wait",E,"Sequence a wait.",2,[[["self"],[R[167]]],["self"]]],[11,"build",E,"Build a `Mock` value according to the defined script.",2,[[["self"]],["mock"]]],[11,"build_with_handle",E,"Build a `Mock` value paired with a handle",2,[[["self"]]]],[11,"read",E,R[798],3,[[["self"]],["self"]]],[11,"write",E,R[799],3,[[["self"]],["self"]]],[0,"task",R[797],"Futures task based helpers",N,N],[3,"MockTask",R[806],"Mock task",N,N],[3,"Spawn",E,"Future spawned on a mock task",N,N],[5,"mock",E,"Run the provided closure in a `MockTask` context.",N,[[["f"]],["r"]]],[5,"spawn",E,"TOOD: dox",N,[[[T]],["spawn"]]],[11,"poll",E,R[800],4,[[["self"]],["poll"]]],[11,"is_woken",E,R[801],4,[[["self"]],["bool"]]],[11,R[802],E,R[803],4,[[["self"]],[R[1]]]],[11,"new",E,"Create a new mock task",5,[[],["self"]]],[11,"poll",E,R[800],5,[[["self"],[T]],["poll"]]],[11,"enter",E,"Run a closure from the context of the task.",5,[[["self"],["f"]],["r"]]],[11,"is_woken",E,R[801],5,[[["self"]],["bool"]]],[11,R[802],E,R[803],5,[[["self"]],[R[1]]]],[14,"assert_ready",R[797],"Assert a `Poll` is ready, returning the value.",N,N],[14,"assert_ready_ok",E,"Assert a `Poll<Result<...>>` is ready and `Ok`, returning…",N,N],[14,"assert_ready_err",E,"Assert a `Poll<Result<...>>` is ready and `Err`, returning…",N,N],[14,"assert_pending",E,"Assert a `Poll` is pending.",N,N],[14,"assert_ready_eq",E,"Assert if a poll is ready and check for equality on the…",N,N],[14,"assert_ok",E,"Asserts that the expression evaluates to `Ok` and returns…",N,N],[14,"assert_err",E,"Asserts that the expression evaluates to `Err` and returns…",N,N],[11,"into",R[804],E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[25],E,E,0,[[[U]],[R[20]]]],[11,R[26],E,E,0,[[],[R[20]]]],[11,R[27],E,E,0,[[["self"]],[T]]],[11,R[29],E,E,0,[[["self"]],[T]]],[11,R[28],E,E,0,[[["self"]],[R[30]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[25],E,E,1,[[[U]],[R[20]]]],[11,R[26],E,E,1,[[],[R[20]]]],[11,R[27],E,E,1,[[["self"]],[T]]],[11,R[29],E,E,1,[[["self"]],[T]]],[11,R[28],E,E,1,[[["self"]],[R[30]]]],[11,"into",R[805],E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[25],E,E,6,[[[U]],[R[20]]]],[11,R[26],E,E,6,[[],[R[20]]]],[11,R[27],E,E,6,[[["self"]],[T]]],[11,R[29],E,E,6,[[["self"]],[T]]],[11,R[28],E,E,6,[[["self"]],[R[30]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[25],E,E,3,[[[U]],[R[20]]]],[11,R[26],E,E,3,[[],[R[20]]]],[11,R[27],E,E,3,[[["self"]],[T]]],[11,R[29],E,E,3,[[["self"]],[T]]],[11,R[28],E,E,3,[[["self"]],[R[30]]]],[11,R[101],E,E,2,[[["self"]],[T]]],[11,R[100],E,E,2,[[["self"],[T]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[25],E,E,2,[[[U]],[R[20]]]],[11,R[26],E,E,2,[[],[R[20]]]],[11,R[27],E,E,2,[[["self"]],[T]]],[11,R[29],E,E,2,[[["self"]],[T]]],[11,R[28],E,E,2,[[["self"]],[R[30]]]],[11,R[101],R[806],E,5,[[["self"]],[T]]],[11,R[100],E,E,5,[[["self"],[T]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[25],E,E,5,[[[U]],[R[20]]]],[11,R[26],E,E,5,[[],[R[20]]]],[11,R[27],E,E,5,[[["self"]],[T]]],[11,R[29],E,E,5,[[["self"]],[T]]],[11,R[28],E,E,5,[[["self"]],[R[30]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[25],E,E,4,[[[U]],[R[20]]]],[11,R[26],E,E,4,[[],[R[20]]]],[11,R[27],E,E,4,[[["self"]],[T]]],[11,R[29],E,E,4,[[["self"]],[T]]],[11,R[28],E,E,4,[[["self"]],[R[30]]]],[11,R[148],R[804],E,0,[[],["self"]]],[11,R[148],R[805],E,2,[[],[R[88]]]],[11,R[148],R[806],E,5,[[],["self"]]],[11,"clone",R[805],E,2,[[["self"]],[R[88]]]],[11,"clone",R[806],E,5,[[["self"]],["mocktask"]]],[11,"fmt",R[804],E,0,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",E,E,1,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",R[805],E,6,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",E,E,3,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",E,E,2,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",R[806],E,5,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",E,E,4,[[["self"],[R[43]]],[R[20]]]],[11,R[34],R[805],E,6,[[["self"],[R[19]],["pin"]],[[R[20],[R[1]]],["poll",[R[20]]]]]],[11,R[37],E,E,6,[[["self"],[R[19]],["pin"]],[[R[20],[R[1]]],["poll",[R[20]]]]]],[11,R[40],E,E,6,[[["self"],[R[19]],["b"],["pin"]],[[R[20],[R[1]]],["poll",[R[20]]]]]],[11,R[38],E,E,6,[[["pin"],["self"],[R[19]]],[["poll",[R[20]]],[R[20]]]]],[11,R[39],E,E,6,[[["pin"],["self"],[R[19]]],[["poll",[R[20]]],[R[20]]]]]],"p":[[3,R[807]],[3,"Handle"],[3,R[377]],[3,"Handle"],[3,"Spawn"],[3,"MockTask"],[3,"Mock"]]};
searchIndex["tokio_timer"]={"doc":R[745],"i":[[3,"Delay",R[218],R[746],N,N],[3,R[220],E,R[219],N,N],[3,"Error",E,R[747],N,N],[3,R[748],E,R[749],N,N],[3,R[793],E,R[225],N,N],[5,R[226],E,R[227],N,[[["handle"]],[R[228]]]],[5,"delay",E,R[750],N,[[[R[222]]],["delay"]]],[5,R[751],E,R[752],N,[[[R[167]]],["delay"]]],[0,"clock",E,R[753],N,N],[3,"Clock",R[238],"A handle to a source of time.",N,N],[5,"now",E,R[754],N,[[],[R[222]]]],[5,R[217],E,"Set the default clock for the duration of the closure.",N,[[["clock"],["f"]],["r"]]],[8,"Now",E,"Returns [`Instant`] values representing the current…",N,N],[10,"now",E,"Returns an instant corresponding to \"now\".",0,[[["self"]],[R[222]]]],[11,"new",E,"Return a new `Clock` instance that uses the current…",1,[[],["clock"]]],[11,R[230],E,"Return a new `Clock` instance that uses `now` as the…",1,[[["now"]],["clock"]]],[11,"system",E,"Return a new `Clock` instance that uses [`Instant::now`]…",1,[[],["clock"]]],[11,"now",E,"Returns an instant corresponding to \"now\" by using the…",1,[[["self"]],[R[222]]]],[0,R[755],R[218],R[219],N,N],[3,R[220],R[236],R[219],N,N],[3,"Expired",E,R[756],N,N],[3,"Key",E,R[757],N,N],[11,"new",E,R[758],2,[[],[R[221]]]],[11,R[759],E,R[760],2,[[[R[1]],["handle"]],[R[221]]]],[11,R[12],E,R[761],2,[[[R[1]]],[R[221]]]],[11,R[762],E,R[763],2,[[["self"],[R[222]],[T]],["key"]]],[11,R[110],E,R[764],2,[[["self"],[R[19]]],[["poll",[R[98]]],[R[98],[R[20]]]]]],[11,"insert",E,R[765],2,[[["self"],[T],[R[167]]],["key"]]],[11,"remove",E,R[766],2,[[["self"],["key"]],["expired"]]],[11,"reset_at",E,R[223],2,[[["self"],[R[222]],["key"]]]],[11,"reset",E,R[223],2,[[["self"],["key"],[R[167]]]]],[11,"clear",E,R[767],2,[[["self"]]]],[11,"capacity",E,R[768],2,[[["self"]],[R[1]]]],[11,"reserve",E,R[769],2,[[["self"],[R[1]]]]],[11,"is_empty",E,R[770],2,[[["self"]],["bool"]]],[11,R[13],E,R[771],3,[[["self"]],[T]]],[11,R[14],E,R[772],3,[[["self"]],[T]]],[11,R[11],E,R[773],3,[[],[T]]],[0,R[774],R[218],R[224],N,N],[3,"Throttle",R[239],R[224],N,N],[11,"new",E,R[224],4,[[[T],[R[167]]],["self"]]],[11,R[13],E,"Acquires a reference to the underlying stream that this…",4,[[["self"]],[T]]],[11,R[14],E,"Acquires a mutable reference to the underlying stream that…",4,[[["self"]],[T]]],[11,R[11],E,"Consumes this combinator, returning the underlying stream.",4,[[],[T]]],[0,R[363],R[218],R[775],N,N],[3,R[793],R[237],R[225],N,N],[3,"Elapsed",E,R[776],N,N],[11,"new",E,R[777],5,[[[T],[R[167]]],[R[363]]]],[11,R[13],E,R[778],5,[[["self"]],[T]]],[11,R[14],E,R[779],5,[[["self"]],[T]]],[11,R[11],E,R[780],5,[[],[T]]],[11,"new_at",E,R[781],5,[[[R[222]],[T]],[R[363]]]],[0,"timer",R[218],"Timer implementation.",N,N],[3,"Handle",R[240],"Handle to timer instance.",N,N],[3,"Timer",E,"Timer implementation that drives [`Delay`], [`Interval`],…",N,N],[3,"Turn",E,"Return value from the `turn` method on `Timer`.",N,N],[5,R[226],E,R[227],N,[[["handle"]],[R[228]]]],[11,"current",E,"Returns a handle to the current timer.",6,[[],["handle"]]],[11,"delay",E,"Create a `Delay` driven by this handle's associated `Timer`.",6,[[["self"],[R[222]]],["delay"]]],[11,R[363],E,"Create a `Timeout` driven by this handle's associated…",6,[[["self"],[T],[R[167]]],[R[363]]]],[11,"new",E,R[231],7,[[[T]],["self"]]],[11,R[229],E,R[175],7,[[["self"]],[T]]],[11,R[176],E,R[177],7,[[["self"]],[T]]],[11,R[230],E,R[231],7,[[[T],["n"]],["self"]]],[11,"handle",E,"Returns a handle to the timer.",7,[[["self"]],["handle"]]],[11,"turn",E,"Performs one iteration of the timer loop.",7,[[["self"],[R[98],[R[167]]],[R[167]]],[["turn"],[R[20],["turn"]]]]],[11,"deadline",R[218],R[782],8,[[["self"]],[R[222]]]],[11,R[783],E,R[784],8,[[["self"]],["bool"]]],[11,"reset",E,R[785],8,[[["self"],[R[222]]]]],[11,R[24],E,R[786],9,[[],["error"]]],[11,R[232],E,R[235],9,[[["self"]],["bool"]]],[11,R[233],E,R[787],9,[[],["error"]]],[11,R[234],E,R[235],9,[[["self"]],["bool"]]],[11,"new",E,R[788],10,[[[R[222]],[R[167]]],[R[373]]]],[11,R[789],E,R[790],10,[[[R[167]]],[R[373]]]],[11,"next",E,R[791],10,[[["self"]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[25],E,E,8,[[[U]],[R[20]]]],[11,R[26],E,E,8,[[],[R[20]]]],[11,R[27],E,E,8,[[["self"]],[T]]],[11,R[29],E,E,8,[[["self"]],[T]]],[11,R[28],E,E,8,[[["self"]],[R[30]]]],[11,"into",R[236],E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[25],E,E,2,[[[U]],[R[20]]]],[11,R[26],E,E,2,[[],[R[20]]]],[11,R[27],E,E,2,[[["self"]],[T]]],[11,R[29],E,E,2,[[["self"]],[T]]],[11,R[28],E,E,2,[[["self"]],[R[30]]]],[11,R[99],E,E,2,[[["pin"],["s"],[R[19]]],[["poll",[R[98]]],[R[98],[R[20]]]]]],[11,"into",R[218],E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[103],E,E,9,[[["self"]],["string"]]],[11,R[25],E,E,9,[[[U]],[R[20]]]],[11,R[26],E,E,9,[[],[R[20]]]],[11,R[27],E,E,9,[[["self"]],[T]]],[11,R[29],E,E,9,[[["self"]],[T]]],[11,R[28],E,E,9,[[["self"]],[R[30]]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[25],E,E,10,[[[U]],[R[20]]]],[11,R[26],E,E,10,[[],[R[20]]]],[11,R[27],E,E,10,[[["self"]],[T]]],[11,R[29],E,E,10,[[["self"]],[T]]],[11,R[28],E,E,10,[[["self"]],[R[30]]]],[11,"into",R[237],E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[25],E,E,5,[[[U]],[R[20]]]],[11,R[26],E,E,5,[[],[R[20]]]],[11,R[27],E,E,5,[[["self"]],[T]]],[11,R[29],E,E,5,[[["self"]],[T]]],[11,R[28],E,E,5,[[["self"]],[R[30]]]],[11,R[210],E,E,5,[[["f"],[R[19]],["pin"]],["poll"]]],[11,R[99],E,E,5,[[["pin"],["s"],[R[19]]],[["poll",[R[98]]],[R[98],[R[20]]]]]],[11,R[101],R[238],E,1,[[["self"]],[T]]],[11,R[100],E,E,1,[[["self"],[T]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[25],E,E,1,[[[U]],[R[20]]]],[11,R[26],E,E,1,[[],[R[20]]]],[11,R[27],E,E,1,[[["self"]],[T]]],[11,R[29],E,E,1,[[["self"]],[T]]],[11,R[28],E,E,1,[[["self"]],[R[30]]]],[11,"into",R[236],E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[25],E,E,3,[[[U]],[R[20]]]],[11,R[26],E,E,3,[[],[R[20]]]],[11,R[27],E,E,3,[[["self"]],[T]]],[11,R[29],E,E,3,[[["self"]],[T]]],[11,R[28],E,E,3,[[["self"]],[R[30]]]],[11,R[101],E,E,11,[[["self"]],[T]]],[11,R[100],E,E,11,[[["self"],[T]]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[25],E,E,11,[[[U]],[R[20]]]],[11,R[26],E,E,11,[[],[R[20]]]],[11,R[27],E,E,11,[[["self"]],[T]]],[11,R[29],E,E,11,[[["self"]],[T]]],[11,R[28],E,E,11,[[["self"]],[R[30]]]],[11,"into",R[239],E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[25],E,E,4,[[[U]],[R[20]]]],[11,R[26],E,E,4,[[],[R[20]]]],[11,R[27],E,E,4,[[["self"]],[T]]],[11,R[29],E,E,4,[[["self"]],[T]]],[11,R[28],E,E,4,[[["self"]],[R[30]]]],[11,R[99],E,E,4,[[["pin"],["s"],[R[19]]],[["poll",[R[98]]],[R[98],[R[20]]]]]],[11,"into",R[237],E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[103],E,E,12,[[["self"]],["string"]]],[11,R[25],E,E,12,[[[U]],[R[20]]]],[11,R[26],E,E,12,[[],[R[20]]]],[11,R[27],E,E,12,[[["self"]],[T]]],[11,R[29],E,E,12,[[["self"]],[T]]],[11,R[28],E,E,12,[[["self"]],[R[30]]]],[11,R[101],R[240],E,6,[[["self"]],[T]]],[11,R[100],E,E,6,[[["self"],[T]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[25],E,E,6,[[[U]],[R[20]]]],[11,R[26],E,E,6,[[],[R[20]]]],[11,R[27],E,E,6,[[["self"]],[T]]],[11,R[29],E,E,6,[[["self"]],[T]]],[11,R[28],E,E,6,[[["self"]],[R[30]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[25],E,E,7,[[[U]],[R[20]]]],[11,R[26],E,E,7,[[],[R[20]]]],[11,R[27],E,E,7,[[["self"]],[T]]],[11,R[29],E,E,7,[[["self"]],[T]]],[11,R[28],E,E,7,[[["self"]],[R[30]]]],[11,"into",E,E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[25],E,E,13,[[[U]],[R[20]]]],[11,R[26],E,E,13,[[],[R[20]]]],[11,R[27],E,E,13,[[["self"]],[T]]],[11,R[29],E,E,13,[[["self"]],[T]]],[11,R[28],E,E,13,[[["self"]],[R[30]]]],[11,"drop",E,E,7,[[["self"]]]],[11,R[148],R[238],E,1,[[],["clock"]]],[11,R[148],R[236],E,2,[[],[R[221]]]],[11,R[148],R[240],E,6,[[],["handle"]]],[11,R[148],E,E,7,[[],["self"]]],[11,"clone",R[238],E,1,[[["self"]],["clock"]]],[11,"clone",R[236],E,11,[[["self"]],["key"]]],[11,"clone",R[240],E,6,[[["self"]],["handle"]]],[11,"fmt",R[238],E,1,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",R[236],E,2,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",E,E,3,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",E,E,11,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",R[239],E,4,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",R[237],E,5,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",E,E,12,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",R[240],E,6,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",E,E,7,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",E,E,13,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",R[218],E,8,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",E,E,9,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",E,E,10,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",R[237],E,12,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",R[218],E,9,[[["self"],[R[43]]],[R[20]]]],[11,"poll",R[237],E,5,[[["pin"],["self"],[R[19]]],["poll"]]],[11,"poll",R[218],E,8,[[["pin"],["self"],[R[19]]],["poll"]]],[11,R[110],R[236],E,2,[[["pin"],["self"],[R[19]]],[["poll",[R[98]]],[R[98]]]]],[11,R[110],R[239],E,4,[[["pin"],["self"],[R[19]]],[["poll",[R[98]]],[R[98]]]]],[11,R[110],R[237],E,5,[[["pin"],["self"],[R[19]]],[["poll",[R[98]]],[R[98]]]]],[11,R[110],R[218],E,10,[[["pin"],["self"],[R[19]]],[["poll",[R[98]]],[R[98]]]]],[11,R[792],E,E,10,[[["self"]],["bool"]]],[11,"unpark",R[240],E,7,[[["self"]]]],[11,"park",E,E,7,[[["self"]],[R[20]]]],[11,R[190],E,E,7,[[["self"],[R[167]]],[R[20]]]]],"p":[[8,"Now"],[3,"Clock"],[3,R[220]],[3,"Expired"],[3,"Throttle"],[3,R[793]],[3,"Handle"],[3,"Timer"],[3,"Delay"],[3,"Error"],[3,R[748]],[3,"Key"],[3,"Elapsed"],[3,"Turn"]]};
searchIndex["tokio_tls"]={"doc":"Async TLS streams","i":[[3,R[125],"tokio_tls","A wrapper around an underlying raw stream which implements…",N,N],[3,R[126],E,"A wrapper around a `native_tls::TlsConnector`, providing…",N,N],[3,R[127],E,"A wrapper around a `native_tls::TlsAcceptor`, providing an…",N,N],[11,R[13],E,"Returns a shared reference to the inner stream.",0,[[["self"]],["s"]]],[11,R[14],E,"Returns a mutable reference to the inner stream.",0,[[["self"]],["s"]]],[11,R[631],E,"Connects the provided stream with this connector, assuming…",1,[[["self"],["str"],["s"]]]],[11,"accept",E,"Accepts a new client connection with the provided stream.",2,[[["self"],["s"]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[25],E,E,0,[[[U]],[R[20]]]],[11,R[26],E,E,0,[[],[R[20]]]],[11,R[27],E,E,0,[[["self"]],[T]]],[11,R[29],E,E,0,[[["self"]],[T]]],[11,R[28],E,E,0,[[["self"]],[R[30]]]],[11,R[101],E,E,1,[[["self"]],[T]]],[11,R[100],E,E,1,[[["self"],[T]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[25],E,E,1,[[[U]],[R[20]]]],[11,R[26],E,E,1,[[],[R[20]]]],[11,R[27],E,E,1,[[["self"]],[T]]],[11,R[29],E,E,1,[[["self"]],[T]]],[11,R[28],E,E,1,[[["self"]],[R[30]]]],[11,R[101],E,E,2,[[["self"]],[T]]],[11,R[100],E,E,2,[[["self"],[T]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[25],E,E,2,[[[U]],[R[20]]]],[11,R[26],E,E,2,[[],[R[20]]]],[11,R[27],E,E,2,[[["self"]],[T]]],[11,R[29],E,E,2,[[["self"]],[T]]],[11,R[28],E,E,2,[[["self"]],[R[30]]]],[11,"clone",E,E,1,[[["self"]],[R[123]]]],[11,"clone",E,E,2,[[["self"]],[R[124]]]],[11,"from",E,E,1,[[[R[123]]],[R[123]]]],[11,"from",E,E,2,[[[R[124]]],[R[124]]]],[11,"fmt",E,E,0,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",E,E,1,[[["self"],[R[43]]],[R[20]]]],[11,"fmt",E,E,2,[[["self"],[R[43]]],[R[20]]]],[11,R[35],E,E,0,[[["self"]],["bool"]]],[11,R[34],E,E,0,[[["self"],["pin"],[R[19]]],[[R[20],[R[1]]],["poll",[R[20]]]]]],[11,R[37],E,E,0,[[["self"],["pin"],[R[19]]],[[R[20],[R[1]]],["poll",[R[20]]]]]],[11,R[38],E,E,0,[[["pin"],["self"],[R[19]]],[["poll",[R[20]]],[R[20]]]]],[11,R[39],E,E,0,[[["pin"],["self"],[R[19]]],[["poll",[R[20]]],[R[20]]]]]],"p":[[3,R[125]],[3,R[126]],[3,R[127]]]};
initSearch(searchIndex);addSearchOptions(searchIndex);